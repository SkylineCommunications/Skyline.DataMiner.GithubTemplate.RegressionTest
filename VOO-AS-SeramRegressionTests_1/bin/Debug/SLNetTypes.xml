<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SLNetTypes</name>
    </assembly>
    <members>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper">
            <summary>
            Allows manipulation of alarm templates: This helper can be used to extract parameter rows from an AlarmTemplate
            and add them to or update them on other AlarmTemplates.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>A row will be returned as an AlarmTemplateRow object containing the AlarmTemplateRowID, all parameter values (in a GetAlarmTemplateResponseMessage) and the full condition.</description></item>
            <item><description>When a row is deleted, the condition will only be deleted if it is not used by any other parameter.</description></item>
            <item><description>When an existing row is merged, the parameter values will be updated, and the parameter will have the same index in the list.</description></item>
            <item><description>When a new row is merged, it will be added at the bottom of the list.</description></item>
            <item><description>Only parameter rows that are set to "Included" can be extracted and merged.</description></item>
            </list>
            </remarks>
            <example>
            <code>
            AlarmTemplateHelper helper = new AlarmTemplateHelper(engine.SendSLNetMessages);
            
            var id = new AlarmTemplateID("AlarmTemplate", "Protocol", "1.0.0.0");
            var rowId = new AlarmTemplateRowID(1, "condition", "filter");
            var rowList = new List&lt;AlarmTemplateRowID&gt; { rowId };
            var row = helper.GetAlarmTemplateRowsFromServer(id, rowList);
            
            helper.DeleteAlarmTemplateRowsOnServer(_id, row);
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.#ctor(System.Func{Skyline.DataMiner.Net.Messages.DMSMessage[],Skyline.DataMiner.Net.Messages.DMSMessage[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper"/> class.
            </summary>
            <param name="messageHandler">The message handler.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.GetAlarmTemplateRowsFromServer(Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID,System.Collections.Generic.List{Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID})">
            <summary>
            Retrieves the specified alarm template rows from the server.
            </summary>
            <param name="alarmTemplateID">The alarm template ID.</param>
            <param name="alarmTemplateRowIDs">The alarm template row IDs.</param>
            <returns>The requested alarm template rows.</returns>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException">Failed to retrieve the alarm template with the specified ID.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplateID"/> or <paramref name="alarmTemplateRowIDs"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">When the condition is not in the condition list</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException">When the parameter is not in the parameter list</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.GetAlarmTemplateRows(Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage,System.Collections.Generic.List{Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID})">
            <summary>
            Returns a list of <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow"/> objects that were requested by the list of <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID"/>s.
            </summary>
            <param name="alarmTemplate">The alarm template.</param>
            <param name="alarmTemplateRowIDs">The alarm template row IDs.</param>
            <exception cref="T:System.ArgumentNullException">When passing null values to the method</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">When the condition is not in the condition list</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException">When the parameter is not in the parameter list</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.GetAlarmTemplateRow(Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage,Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID)">
            <summary>
            Returns the alarm template row with the specified alarm template row ID.
            </summary>
            <param name="alarmTemplate">The alarm template.</param>
            <param name="alarmTemplateRowID">The alarm template row ID.</param>
            <returns>The requested alarm template row.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplate"/> or <paramref name="alarmTemplateRowID"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">The condition is not in the condition list</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException">The parameter is not in the parameter list</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.DeleteAlarmTemplateRowsOnServer(Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID,System.Collections.Generic.List{Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow})">
            <summary>
            Deletes the specified alarm template rows from the specified alarm template.
            </summary>
            <param name="alarmTemplateID">The alarm template ID.</param>
            <param name="alarmTemplateRows">The alarm tempalte rows.</param>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException">The AlarmTemplate could not be retrieved from the server.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">The condition is not in the condition list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException">The parameter is not in the parameter list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">The GetAlarmTemplateRow returns a parameter that can not be found in the list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">The provided AlarmTemplateRow contains data does not match with the ID in it.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplateID"/> or <paramref name="alarmTemplateRows"/> is <see langword="null"/>.</exception>
            <remarks>
            <para>The AlarmTemplate will be retrieved using the AlarmTemplateID. The deletes are executed and if this was successful the template will be updated on the server.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.DeleteAlarmTemplateRows(Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage,System.Collections.Generic.List{Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow})">
            <summary>
            Returns an <see cref="T:Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage"/> where the parameters defined by the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow"/>s are removed.
            The conditions will also be removed if there are no links anymore.
            </summary>
            <param name="alarmTemplate">The alarm template.</param>
            <param name="alarmTemplateRows">The alarm template rows.</param>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">The condition is not in the condition list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException">The parameter is not in the parameter list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">GetAlarmTemplateRow returns a parameter that can not be found in the list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">The provided AlarmTemplateRow contains data that does not match with the ID in it.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplate"/> or <paramref name="alarmTemplateRows"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.DeleteAlarmTemplateRow(Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage,Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow)">
            <summary>
            Deletes the specified alarm template rows from the specified alarm template.
            </summary>
            <param name="alarmTemplate">The alarm template.</param>
            <param name="alarmTemplateRow">The alarm template row.</param>
            <returns>An <see cref="T:Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage"/> where the parameter defined by the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow"/> is removed.</returns>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">The condition is not in the condition list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException">The parameter is not in the parameter list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">GetAlarmTemplateRow returns a parameter that can not be found in the list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">The provided AlarmTemplateRow contains data that does not match with the ID in it.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplate"/> or <paramref name="alarmTemplateRow"/> is <see langword="null"/>.</exception>
            <remarks>
            <para>The condition will also be removed if there are no links anymore.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.MergeAlarmTemplateRowsOnServer(Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID,System.Collections.Generic.List{Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow})">
            <summary>
            Merges the specified rows with the specified template.
            </summary>
            <param name="alarmTemplateID">The ID of the alarm template.</param>
            <param name="alarmTemplateRows">The rows to merge.</param>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException">The AlarmTemplate could not be retrieved from the server.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException">A condition used in a merge call has the same name as an existing condition with a different content.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">The condition specified in the AlarmTemplateRow could not be found in the alarm template.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">A row could not be found when merging.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">The provided AlarmTemplateRow contains data that does not match with the ID in it.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplateID"/> or <paramref name="alarmTemplateRows"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.MergeAlarmTemplateRows(Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage,System.Collections.Generic.List{Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow})">
            <summary>
            Merges the specified rows with the specified template.
            </summary>
            <param name="alarmTemplate">The alarm template.</param>
            <param name="alarmTemplateRows">The alarm tempalte rows.</param>
            <returns>An <see cref="T:Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage"/> where the parameters defined by the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow"/> are merged.</returns>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException">A condition used in a merge call has the same name as an existing condition with a different content.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">The condition specified in the AlarmTemplateRow could not be found in the alarm template.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">GetAlarmTemplateRow returns a parameter that can not be found in the list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">The provided AlarmTemplateRow contains data that does not match with the ID in it</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplate"/> or <paramref name="alarmTemplateRows"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.MergeAlarmTemplateRow(Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage,Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow,System.Boolean)">
            <summary>
            Returns an <see cref="T:Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage"/> where the parameter defined by the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow"/> is merged.
            </summary>
            <param name="alarmTemplate">The alarm template.</param>
            <param name="alarmTemplateRow">The alarm template row.</param>
            <param name="onlyAllowUpdate">Value indicating whether only updates are allowed.</param>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException">A condition with an equal name is found, but the contents are different.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">The condition that is linked to the parameter is not found in the target AlarmTemplate.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException"><paramref name="onlyAllowUpdate"/> is <c>true</c> and no data to update is found.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">GetAlarmTemplateRow returns a parameter that can not be found in the list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">The provided AlarmTemplateRow contains data that does not match with the ID in it.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplate"/>, <paramref name="alarmTemplateRow"/> or <paramref name="onlyAllowUpdate"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.UpdateAlarmTemplateRowsOnServer(Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID,System.Collections.Generic.List{Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow})">
            <summary>
            Updates the specified alarm template with the specified rows.
            </summary>
            <param name="alarmTemplateID">The ID of the alarm template.</param>
            <param name="alarmTemplateRows">The alarm template rows to update.</param>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException">The AlarmTemplate could not be retrieved from the server.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException">No data to update is found in the AlarmTemplate.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">The condition that is linked to the parameter is not found in the target AlarmTemplate.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">GetAlarmTemplateRow returns a parameter that can not be found in the list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">The provided AlarmTemplateRow contains data that does not match with the ID in it.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplateID"/> or <paramref name="alarmTemplateRows"/> is <see langword="null"/>.</exception>
            <remarks>
            <para>The AlarmTemplate will be retrieved using the AlarmTemplateID. The updates are executed and the AlarmTemplate will be updated on the server. If this method fails, the AlarmTemplate will not be updated on the server.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.UpdateAlarmTemplateRows(Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage,System.Collections.Generic.List{Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow})">
            <summary>
            Updates the specified alarm template with the specified rows.
            </summary>
            <param name="alarmTemplate">The alarm template.</param>
            <param name="alarmTemplateRows">The alarm template rows to update.</param>
            <returns>The updated alarm template.</returns>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException">No data to update is found in the AlarmTemplate.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">The condition that is linked to the parameter is not found in the target alarmTemplate.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">GetAlarmTemplateRow returns a parameter that can not be found in the list.</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">The provided AlarmTemplateRow contains data that does not match with the ID in it.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="alarmTemplate"/> or <paramref name="alarmTemplateRows"/> is <see langword="null"/>.</exception>
            <remarks>
            <para>Updates parameter data in the target AlarmTemplate, when no data to update is found, an exception is thrown.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateHelper.UpdateAlarmTemplateRow(Skyline.DataMiner.Net.Messages.AlarmTemplateEventMessage,Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow)">
            <summary>
            Updates parameter data in the target AlarmTemplate, when no data to update is found, an exception is thrown.
            </summary>
            <param name="alarmTemplate">The alarm template.</param>
            <param name="alarmTemplateRow">The alarm template row.</param>
            <returns>The updated alarm template.</returns>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException">When no data to update is found in the AlarmTemplate</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">If the condition that is linked to the parameter is not found in the target alarmTemplate</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">When GetAlarmTemplateRow returns a parameter that can not be found in the list</exception>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">When the provided AlarmTemplateRow contains data that does not match with the ID in it</exception>
            <exception cref="T:System.ArgumentNullException">When passing null values to the method</exception>
        </member>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID">
            <summary>
            Identifies an alarm template.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID.Name">
            <summary>
            Gets or sets the alarm template name.
            </summary>
            <value>The alarm template name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID.ProtocolName">
            <summary>
            Gets or sets the protocol name.
            </summary>
            <value>The protocol name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID.ProtocolVersion">
            <summary>
            Gets or sets the protocol version.
            </summary>
            <value>The protocol version.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID"/> class using the specified template name, protocol name and protocol version.
            </summary>
            <param name="name">The template name.</param>
            <param name="protocolName">The protocol name.</param>
            <param name="protocolVersion">The protocol version.</param>
            <example>
            <code>
            var id = new AlarmTemplateID("AlarmTemplate", "Protocol", "1.0.0.0");
            </code>
            </example>
        </member>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow">
            <summary>
            Represents a row in an alarm template.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow.ID">
            <summary>
            Gets or sets the alarm template row ID.
            </summary>
            <value>The alarm template row ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow.ParameterValues">
            <summary>
            Gets or sets the parameter values.
            </summary>
            <value>The parameter values.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow.Condition">
            <summary>
            Gets or sets the condition.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow.#ctor(Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID,Skyline.DataMiner.Net.Messages.GetAlarmTemplateResponseMessage,Skyline.DataMiner.Net.Messages.AlarmTemplateCondition)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow"/> class using the specified alarm template row ID, parameter values and optional condition.
            </summary>
            <param name="id">The alarm template row ID.</param>
            <param name="parameterValues">The parameter values.</param>
            <param name="condition">The condition.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow.Verify">
            <summary>
            Verifies whether this row is valid (i.e. ID of the AlarmTemplateRow match the values within the AlarmTemplateRow).
            </summary>
            <exception cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">The row is invalid.</exception>
            <remarks>
            <para>Note: If the ID.filter or ID.ConditionName is null or empty, the linked value does not matter</para>
            </remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID">
            <summary>
            Identifies a row of an alarm template.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID.ParameterID">
            <summary>
            Gets or sets the parameter ID.
            </summary>
            <value>The parameter ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID.ConditionName">
            <summary>
            Gets or sets the condition name.
            </summary>
            <value>The condition name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
            <value>The filter.</value>
            <remarks>
            <para>Keep in mind that setting the filter value to "" or a null reference will prevent the alarms from being triggered. A “*” character needs to be filled in. Keep this in mind when retrieving rows from alarm templates. When a template is made via Cube, the filter value of this type of parameters will always be a “*” by default. So when creating a AlarmTemplateRowID object, you have to fill that in in the filter field.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID"/> class using the specified parameter ID, condition name and filter.
            </summary>
            <param name="parameterID">The parameter ID.</param>
            <param name="conditionName">The condition name.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRowID.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException">
            <summary>
            The exception that is thrown when the condition that needs to be linked to a parameter does not exist.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException.TargetAlarmTemplate">
            <summary>
            The target AlarmTemplate where the condition should have been found in.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException.ConditionName">
            <summary>
            The name of the condition that caused the exception.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException.ParameterID">
            <summary>
            The ID of the linked parameter.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException.Filter">
            <summary>
            The filter value of the linked parameter.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionDoesNotExistException"/> class with the specified condition name, target alarm template, parameter ID and filter.
            </summary>
            <param name="conditionName">The condition name.</param>
            <param name="targetAlarmTemplate">The target alarm template.</param>
            <param name="parameterID">The parameter ID.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException">
            <summary>
            This exception that is thrown when the merging of conditions failed due to an equal name but different contents.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException.TargetAlarmTemplate">
            <summary>
            Gets or sets the target AlarmTemplate where the condition should have been merged to.
            </summary>
            <value>The target AlarmTemplate where the condition should have been merged to</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException.ConditionName">
            <summary>
            Gets or sets the name of the condition that caused the merge exception.
            </summary>
            <value>The name of the condition that caused the merge exception.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ConditionMergeException"/> class using the specified condition name and target alarm template.
            </summary>
            <param name="conditionName">The condition name.</param>
            <param name="targetAlarmTemplate">The target alarm template.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException">
            <summary>
            The exception that is thrown when an AlarmTemplateRow is given to a method where the ID object does not correspond with the condition, filter or parameter ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException.TemplateRow">
            <summary>
            Gets or sets the AlarmTemplateRow that is invalid.
            </summary>
            <value>The AlarmTemplateRow that is invalid.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException.#ctor(Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateRow)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.InvalidAlarmTemplateRowException"/> class using the specified alarm template row.
            </summary>
            <param name="templateRow">The template row.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException">
            <summary>
            The exception that is thrown when trying to do an update on a parameter that does not exist in the AlarmTemplate.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException.TargetAlarmTemplate">
            <summary>
            Gets or sets the target AlarmTemplate where parameter data should have been available.
            </summary>
            <value>The target AlarmTemplate where parameter data should have been available.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException.ParameterID">
            <summary>
            Gets or sets the ID of the parameter where no data exists for.
            </summary>
            <value>The ID of the parameter where no data exists for.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException.Filter">
            <summary>
            Gets or sets the filter value of the parameter where no data exists for.
            </summary>
            <value>The filter value of the parameter where no data exists for.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.NoAlarmTemplateRowToUpdateException"/> class.
            </summary>
            <param name="targetAlarmTemplate">The target alarm template.</param>
            <param name="parameterID">The parameter ID.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException">
            <summary>
            The exception that is thrown when the parameter does not exist in the given AlarmTemplate.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException.TargetAlarmTemplate">
            <summary>
            Gets or sets the target AlarmTemplate where the parameter should have been found in.
            </summary>
            <value>The target AlarmTemplate where the parameter should have been found in.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException.ConditionName">
            <summary>
            Gets or sets the name of the condition that is linked to the parameter.
            </summary>
            <value>The name of the condition that is linked to the parameter.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException.ParameterID">
            <summary>
            Gets or sets the ID of the parameter that caused the exception.
            </summary>
            <value>The ID of the parameter that caused the exception.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException.Filter">
            <summary>
            Gets or sets the filter value of the parameter that caused the exception.
            </summary>
            <value>The filter value of the parameter that caused the exception.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.ParameterDoesNotExistException"/> class using the specified condition name, target alarm template, parameter ID and filter.
            </summary>
            <param name="conditionName">The condition name.</param>
            <param name="targetAlarmTemplate">The target alarm template.</param>
            <param name="parameterID">The parameter ID.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException">
            <summary>
            The exception that is thrown when retrieving the AlarmTemplate from server failed.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException.TemplateID">
            <summary>
            Gets or sets the alarm template ID used to retrieve the AlarmTemplate.
            </summary>
            <value>The alarm template ID used to retrieve the AlarmTemplate.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException.#ctor(Skyline.DataMiner.Net.AlarmTemplateHelper.AlarmTemplateID)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AlarmTemplateHelper.Exceptions.RetrievingAlarmTemplateFromServerException"/> class using the specified alarm template ID.
            </summary>
            <param name="templateID">The alarm template ID.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ProfileDefinitionCrudHelperComponent">
            <summary>
            Profile definition CRUD helper component.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ProfileHelper">
            <summary>
            Profile helper.
            </summary>
            <remarks>
            Available from DataMiner 10.0.8 (RN 25515) onwards.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileHelper.ProfileDefinitions">
            <summary>
            Gets the profile definition CRUD helper.
            </summary>
            <value>The profile definition CRUD helper.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileHelper.ProfileInstances">
            <summary>
            Gets the profile instance CRUD helper.
            </summary>
            <value>The profile instance CRUD helper.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileHelper.ProfileParameters">
            <summary>
            Gets the profile parameter CRUD helper.
            </summary>
            <value>The profile parameter CRUD helper.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileHelper.ServiceProfileDefinitions">
            <summary>
            Gets the service profile definition CRUD helper.
            </summary>
            <value>The service profile definition CRUD helper.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileHelper.ServiceProfileInstances">
            <summary>
            Gets the service profile instance CRUD helper.
            </summary>
            <value>The service profile instance CRUD helper.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileHelper.MediationSnippets">
            <summary>
            Gets the mediation snippets CRUD helper.
            </summary>
            <value>The mediation snippets CRUD helper.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileHelper.Config">
            <summary>
            Gets the profile manager configuration helper.
            </summary>
            <value>The profile manager configuration helper.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileHelper.#ctor(System.Func{Skyline.DataMiner.Net.Messages.DMSMessage[],Skyline.DataMiner.Net.Messages.DMSMessage[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileHelper"/> class.
            </summary>
            <param name="messageHandler">The message handler.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ProfileInstanceCrudHelperComponent">
            <summary>
            Profile instance CRUD helper component.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ProfileParameterCrudHelperComponent">
            <summary>
            Profile parameter CRUD helper component.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue">
            <summary>
            Represents a capability parameter value.
            </summary>
            <remarks>Feature introduced in DataMiner 9.6.4 (RN 20891, 21178).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.Discreets">
            <summary>
            Gets or sets the discrete entries.
            </summary>
            <value>The discrete entries.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.MinRange">
            <summary>
            Gets or sets the minimum value of the range.
            </summary>
            <value>The minimum value of the range.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.MaxRange">
            <summary>
            Gets or sets the maximum value of the range.
            </summary>
            <value>The maximum value of the range.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.ProvidedString">
            <summary>
            Gets or sets the provider string.
            </summary>
            <value>The provider string.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue"/> class using the specified minimum and maximum range values.
            </summary>
            <param name="minRange">The minimum value of the range.</param>
            <param name="maxRange">The maximum value of the range.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue"/> class using the specified list of discrete entries.
            </summary>
            <param name="discreets">The discrete entries.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.Equals(Skyline.DataMiner.Net.Profiles.CapabilityParameterValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityParameterValue.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue">
            <summary>
            Represents a capability usage parameter value.
            </summary>
            <remarks>Feature introduced in DataMiner 9.6.4 (RN 20891, 21178).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.RequiredDiscreet">
            <summary>
            Gets or sets the required discrete value.
            </summary>
            <value>The required discrete value.</value>
            <remarks>
            Will be used if <see cref="P:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.RequiredRangePoint"/> is NaN.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.RequiredRangePoint">
            <summary>
            Gets or sets the required range point.
            </summary>
            <value>The required range point.</value>
            <remarks>
            If this is NaN then the <see cref="P:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.RequiredDiscreet"/> or <see cref="P:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.RequiredString"/> value will be used instead, depending on which one is filled in.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.RequiredString">
            <summary>
            Gets or sets the required string.
            </summary>
            <value>The required string.</value>
            <remarks>
            Will be used if <see cref="P:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.RequiredRangePoint"/> is NaN and <see cref="P:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.RequiredDiscreet"/> is null or an empty string.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.Equals(Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapabilityUsageParameterValue.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.CapacityParameterValue">
            <summary>
            Represents a capacity parameter value.
            </summary>
            <remarks>Feature introduced in DataMiner 9.6.4 (RN 20891, 21178).</remarks>
            <remarks>
            Defines the value of a capacity parameter. This is a <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> of the ProfileManager with category Capacity.
            The units are part of the parameter definition, and not the value.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.MaxQuantity">
            <summary>
            Gets or sets the maximum quantity.
            </summary>
            <value>The maximum quantity.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.MaxDecimalQuantity">
            <summary>
            Gets or sets the maximum quantity.
            </summary>
            <value>The maximum quantity.</value>
            <remarks>Feature introduced in DataMiner 9.6.8 (RN 22022).
            Setting the long capacity value will also update its decimal capacity value and vice versa. If the decimal value is too large to fit in a long, getting the corresponding long value will return 0. Getting the long capacity while the corresponding decimal capacity is set to a non-integer value will return the decimal capacity rounded down to the nearest integer (i.e if the decimal capacity is set to 125.8, the long capacity will be 125).
            A system that uses decimal capacities should no longer use the obsolete long capacities (<see cref="P:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.MaxQuantity"/>). Since it is not always possible to correctly convert the decimal capacity to a long capacity, the returned value when requesting <see cref="P:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.MaxQuantity"/> may no longer be correct.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapacityParameterValue"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapacityParameterValue"/> class using the specified maximum quantity.
            </summary>
            <value>The maximum quantity.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapacityParameterValue"/> class using the specified maximum quantity.
            </summary>
            <value>The maximum quantity.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.Equals(Skyline.DataMiner.Net.Profiles.CapacityParameterValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityParameterValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue">
            <summary>
            Represents a capacity.
            </summary>
            <remarks>Feature introduced in DataMiner 9.6.5 (RN 20996).</remarks>
            <remarks>
            Defines the value of a capacity parameter. This is a <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> of the ProfileManager with category Capacity.
            The units are part of the parameter definition, and not the value.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.Quantity">
            <summary>
            Gets or sets the quantity.
            </summary>
            <value>The quantity.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.DecimalQuantity">
            <summary>
            Gets or sets the decimal quantity.
            </summary>
            <value>The decimal quantity.</value>
            <remarks>Feature introduced in DataMiner 9.6.8 (RN 22022).
            Setting the long capacity value will also update its decimal capacity value and vice versa. If the decimal value is too large to fit in a long, getting the corresponding long value will return 0. Getting the long capacity while the corresponding decimal capacity is set to a non-integer value will return the decimal capacity rounded down to the nearest integer (i.e if the decimal capacity is set to 125.8, the long capacity will be 125).
            A system that uses decimal capacities should no longer use the obsolete long capacities. Since it is not always possible to correctly convert the decimal capacity to a long capacity, the returned value when requesting the long capacity may no longer be correct.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue"/> class using the specified quantity.
            </summary>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue"/> class using the specified quantity.
            </summary>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.Equals(Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.CapacityUsageParameterValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.DocumentBase">
            <summary>
            Represents a document-like object that has a name and some metadata.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.DocumentBase.Name">
            <summary>
            Gets or sets the name of this object.
            </summary>
            <value>The name of this object.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.DocumentBase.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.DocumentBase.CreatedBy">
            <summary>
            Gets or sets the creator of this object.
            </summary>
            <value>The creator of this object.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.DocumentBase.CreatedAt">
            <summary>
            Gets or sets the creation time.
            </summary>
            <value>The creation time.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.DocumentBase.LastModifiedBy">
            <summary>
            Gets or sets the name of the user that last modified this object.
            </summary>
            <value>The name of the user that last modified this object.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.DocumentBase.LastModifiedAt">
            <summary>
            Gets or sets the last modification time.
            </summary>
            <value>The last modification time.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.DocumentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.DocumentBase"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.DocumentBase.#ctor(Skyline.DataMiner.Net.Profiles.DocumentBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.DocumentBase"/> class using the specified <see cref="T:Skyline.DataMiner.Net.Profiles.DocumentBase"/> instance.
            </summary>
            <param name="db">The document base.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.DocumentBase.FiltersTo(Skyline.DataMiner.Net.Profiles.DocumentBase)">
            <summary>
            Verifies whether this object qualifies for the specified filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns><c>true</c> if it passes the filter, otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.DocumentBase.GetLatestDocument(Skyline.DataMiner.Net.Profiles.DocumentBase[])">
            <summary>
            Obtains the latest document from the specified document objects that represent the same document.
            </summary>
            <param name="documents">The document objects with the same GUID.</param>
            <exception cref="T:System.ArgumentException"><paramref name="documents"/> is <see langword="null"/> or empty<br />
            -or-<br />
            Not all documents have the same GUID.
            </exception>
            <returns>The latest document from the specified document objects that represent the same document.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.DocumentBase.Equals(Skyline.DataMiner.Net.Profiles.DocumentBase)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.DocumentBase.CompareTo(Skyline.DataMiner.Net.Profiles.DocumentBase)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>
            <para>A value that indicates the relative order of the objects being compared. The return value can have the following meanings:</para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>This instance precedes <paramref name="other"/> in the sort order.</description>
            </item>
            <item>
            <term>Zero</term>
            <description>This instance occurs in the same position in the sort order as <paramref name="other"/>.</description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>This instance follows <paramref name="other"/> in the sort order.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.DocumentBase.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            <para>A value that indicates the relative order of the objects being compared. The return value can have the following meanings:</para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>This instance precedes <paramref name="obj"/> in the sort order.</description>
            </item>
            <item>
            <term>Zero</term>
            <description>This instance occurs in the same position in the sort order as <paramref name="obj"/>.</description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>This instance follows <paramref name="obj"/> in the sort order.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.DocumentBase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>Two <see cref="T:Skyline.DataMiner.Net.Profiles.DocumentBase"/> instances are considered equal by this method if the following conditions are met:</para>
            <list type="bullet">
            <item>
            <description>The <see cref="T:System.Type"/> of the specified object is the same.</description>
            </item>
            <item>
            <description>The values for <see cref="P:Skyline.DataMiner.Net.Profiles.DocumentBase.Name"/>, <see cref="P:Skyline.DataMiner.Net.Profiles.DocumentBase.Description"/>, <see cref="P:Skyline.DataMiner.Net.Profiles.DocumentBase.CreatedBy"/>, <see cref="P:Skyline.DataMiner.Net.Profiles.DocumentBase.CreatedAt"/>, <see cref="P:Skyline.DataMiner.Net.Profiles.DocumentBase.LastModifiedBy"/>, <see cref="P:Skyline.DataMiner.Net.Profiles.DocumentBase.LastModifiedAt"/> and <see cref="P:Skyline.DataMiner.Net.Profiles.LinkableObject.ID"/> are equal.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.DocumentBase.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ICapabilityProfileParameter">
            <summary>
            Capability profile parameter interface.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ICapabilityProfileParameter.Units">
            <summary>
            Gets or sets the units.
            </summary>
            <value>The units.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ICapabilityProfileParameter.Discretes">
            <summary>
            Gets or sets the discrete entries.
            </summary>
            <value>The discrete entries.</value>
            <remarks>
            Every value of a capability parameter of the discreet type should have a list of discrete entries that are a sub-list of the ones defined on the profile parameter.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ICapabilityProfileParameter.DefaultCapabilityUsageValue">
            <summary>
            Gets or sets the default capability usage value.
            </summary>
            <value>The default capability usage value.</value>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ICapacityProfileParameter">
            <summary>
            Capacity profile parameter interface.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.IMonitoringProfileParameter">
            <summary>
            Monitoring profile parameter interface.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.IConfigurationProfileParameter">
            <summary>
            Configuration profile parameter interface.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.IProfileParameterValue">
            <summary>
            Profile parameter value interface.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.IProfileParameterValue.Type">
            <summary>
            Gets or sets the parameter  value type.
            </summary>
            <value>The parameter value type.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.IProfileParameterValue.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.IProfileParameterValue.DoubleValue">
            <summary>
            Gets or sets the double value.
            </summary>
            <value>The double value.</value>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.LinkableObject">
            <summary>
            Represents an object that has an ID. This class serves as a base class for other classes to inherit from.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.LinkableObject.ID">
            <summary>
            Gets or set the ID of this object.
            </summary>
            <value>The ID of this object.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.LinkableObject"/> class.
            </summary>
            <remarks>
            <para>Constructs an empty <see cref="T:Skyline.DataMiner.Net.Profiles.LinkableObject"/> object with its <see cref="P:Skyline.DataMiner.Net.Profiles.LinkableObject.ID"/> set to <see cref="F:System.Guid.Empty"/>.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObject.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.LinkableObject"/> class using the specified <see cref="T:System.Guid"/>.
            </summary>
            <param name="g">GUID to use as ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObject.FiltersTo(Skyline.DataMiner.Net.Profiles.LinkableObject)">
            <summary>
            Retrieves a value indicating whether this object matches the specified filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns><c>true</c> if this object matches the specified filter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObject.Equals(Skyline.DataMiner.Net.Profiles.LinkableObject)">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Profiles.LinkableObject"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObject.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObject.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObject.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.LinkableObjectCompareOnID">
            <summary>
            Comparer for <see cref="T:Skyline.DataMiner.Net.Profiles.LinkableObject"/> instances which performs the comparison based on the <see cref="P:Skyline.DataMiner.Net.Profiles.LinkableObject.ID"/>.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObjectCompareOnID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.LinkableObjectCompareOnID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObjectCompareOnID.Equals(Skyline.DataMiner.Net.Profiles.LinkableObject,Skyline.DataMiner.Net.Profiles.LinkableObject)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <see cref="T:Skyline.DataMiner.Net.Profiles.LinkableObject"/>  to compare.</param>
            <param name="y">The second object of type <see cref="T:Skyline.DataMiner.Net.Profiles.LinkableObject"/> to compare.</param>
            <returns><c>true</c> if the specified objects are equal; otherwise, <c>false</c>.</returns>
            <remarks>
            Two <see cref="T:Skyline.DataMiner.Net.Profiles.LinkableObject"/> instances are considered equal by this method if their <see cref="P:Skyline.DataMiner.Net.Profiles.LinkableObject.ID"/> is the same.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.LinkableObjectCompareOnID.GetHashCode(Skyline.DataMiner.Net.Profiles.LinkableObject)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ProfileParameterCategory.Monitoring">
            <summary>
            If this parameter can be monitored.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ProfileParameterCategory.Configuration">
            <summary>
            If this parameter can be used as configuration for the device.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ProfileParameterCategory.Capability">
            <summary>
            If this parameter can represent the capabilities of a device.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ProfileParameterCategory.Capacity">
            <summary>
            If this parameter can represent the capacities of a device.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ParameterSettings">
            <summary>
            Represents parameter settings.
            </summary>
            <remarks>Available from DataMiner 10.1.4 (RN 28792) onwards.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ParameterSettings.IsHidden">
            <summary>
            Gets or sets a value indicating whether this parameter is hidden. Default: false.
            </summary>
            <value><c>true</c> if hidden; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ParameterSettings.InheritIsHidden">
            <summary>
            Gets or sets a value indicating whether this profile instance should inherit the "IsHidden" property of a profile parameter.
            </summary>
            <value><c>true</c> if this profile instance should inherit the "IsHidden" property of a profile parameter; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default value: <c>false</c>.</para>
            <para>Feature introduced in DataMiner 10.2.3 (RN 32131).</para>
            </remarks>
            <examples>
            <para>If a parameter of profile definition A is hidden, and you want profile instance A to inherit the “IsHidden” setting of that parameter, then set “InheritIsHidden” to <c>true</c>.</para>
            <para>If a parameter of profile definition A is hidden, and you want profile instance B to not inherit the “IsHidden” setting of that parameter, then set “InheritIsHidden” to <c>false</c> and “IsHidden” to <c>true</c>.</para>
            </examples>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ParameterSettings"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterSettings.Equals(Skyline.DataMiner.Net.Profiles.ParameterSettings)">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Profiles.ParameterSettings"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterSettings.GetHashCode">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ParameterValue">
            <summary>
            Represents a Profile Manager parameter value.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ParameterValue.ValueType">
            <summary>
            Specifies the type of the parameter value.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ParameterValue.ValueType.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ParameterValue.ValueType.Double">
            <summary>
            Double.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ParameterValue.ValueType.String">
            <summary>
            String.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ParameterValue.ValueType.Discreet">
            <summary>
            Discrete.
            </summary>
            <remarks>
            Do not use this, always store the raw values of a discrete, either a double or string.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ParameterValue.Type">
            <summary>
            Gets or sets the type of the parameter value.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ParameterValue.StringValue">
            <summary>
            Gets or sets the parameter value in case the type is <see cref="F:Skyline.DataMiner.Net.Profiles.ParameterValue.ValueType.String"/>.
            </summary>
            <value>The parameter value in case the type is <see cref="F:Skyline.DataMiner.Net.Profiles.ParameterValue.ValueType.String"/>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ParameterValue.DoubleValue">
            <summary>
            Gets or sets the parameter value in case the type is <see cref="F:Skyline.DataMiner.Net.Profiles.ParameterValue.ValueType.Double"/>.
            </summary>
            <value>The parameter value in case the type is <see cref="F:Skyline.DataMiner.Net.Profiles.ParameterValue.ValueType.Double"/>.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ParameterValue"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterValue.#ctor(Skyline.DataMiner.Net.Profiles.ParameterValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ParameterValue"/> class using the specified parameter value.
            </summary>
            <param name="pv">The parameter value.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterValue.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterValue.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterValue.Equals(Skyline.DataMiner.Net.Profiles.ParameterValue)">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Profiles.ParameterValue"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ParameterValue.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition">
             <summary>
             Represents a Profile Manager profile definition.
             </summary>
             <example>
             <para>Creating, retrieving, updating and deleting a profile definition.</para>
             <code>
             using Skyline.DataMiner.Automation;
             using Skyline.DataMiner.Net.IManager.Helper;
             using Skyline.DataMiner.Net.Profiles;
             using System;
             using System.Linq;
             
             public class Script
             {
            		//We will be using the ProfileManagerHelper object to communicate with the ProfileManager Module. This is our API.
            		ProfileManagerHelper Helper;
            		
            		public Script()
            		{
            			//Initialize the ProfileManagerHelper
            			Helper = new ProfileManagerHelper();
            			
            			//Handling the RequestResponseEvent gives the ProfileManagerHelper connection with SLNet.
            			Helper.RequestResponseEvent += Helper_RequestResponseEvent;
            		}
            		
            		// Handles the RequestResponseEvent. Any server call the Helper makes behind the scenes calls this method.
            		private void Helper_RequestResponseEvent(object sender, IManagerRequestResponseEventArgs e)
            		{
            			e.responseMessage = Engine.SLNet.SendSingleResponseMessage(e.requestMessage);
            		}
            		
            		public void Run(Engine engine)
            		{
            			var profiledefinition = CreateProfileDefinition();
            			profiledefinition = RetrieveProfileDefinition(profiledefinition.ID);
            			profiledefinition = UpdateProfileDefinition(profiledefinition);
            			profiledefinition = DeleteProfileDefinition(profiledefinition.ID);
            		}
            		
            		private ProfileDefinition DeleteProfileDefinition(Guid iD)
            		{
            			return Helper.RemoveProfileDefinitions(new ProfileDefinition(iD)).FirstOrDefault();
            		}
            		
            		private ProfileDefinition UpdateProfileDefinition(ProfileDefinition profiledefinition)
            		{
            			profiledefinition.Description = "Another Description";
            			profiledefinition.Parameters.Add(CreateParameter()); // Created a new parameter linked to the ProfileDefinition (same method as in Profile Parameter code sample)
            			
            			return Helper.AddOrUpdateProfileDefinition(profiledefinition);
            		}
            		
            		private ProfileDefinition RetrieveProfileDefinition(Guid iD)
            		{
            			return Helper.GetProfileDefinitions(new ProfileDefinition(iD)).FirstOrDefault();
            		}
            		
            		private ProfileDefinition CreateProfileDefinition()
            		{
            			ProfileDefinition def = new ProfileDefinition();
            			
            			//def.BasedOn.Add(...) ProfileDefinition can be based upon another ProfileDefinition (inheritance)
            			def.Description = "Description";
            			def.Name = "Name";
            			def.Parameters.Add(CreateParameter()); // Created a new parameter linked to the ProfileDefinition (same method as in Profile Parameter code sample)
            			def.Scripts = new ScriptEntry[]
            			{
            				new ScriptEntry()
            				{
            					Description = "Script Description",
            					Name = "Script Name",
            					Script = "Script:ScriptToRun|||||"
            				}
            			};
            
            			return Helper.AddOrUpdateProfileDefinition(def);
            		}
            	}
             </code>
             </example>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.ProfileDefinitionId">
            <summary>
            Gets or sets the profile definition ID.
            </summary>
            <value>The profile definition ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.ID">
            <summary>
            Gets or sets the ID of this profile definition.
            </summary>
            <value>The ID of this profile definition.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.BasedOn">
            <summary>
            Gets the profile definitions this profile definition is based on.
            </summary>
            <value>The profile definitions this profile definition is based on.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.BasedOnIDs">
            <summary>
            Gets the IDs of the profile definitions this profile definition is based on.
            </summary>
            <value>The IDs of the profile definitions this profile definition is based on.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.Parameters">
            <summary>
            Gets the parameters that are part of this profile definition.
            </summary>
            <value>The parameters that are part of this profile definition.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.ParameterIDs">
            <summary>
            Gets or sets the IDs of the parameters that are part of this profile definition.
            </summary>
            <value>The IDs of the parameters that are part of this profile definition.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.Scripts">
            <summary>
            Gets or sets the scripts used by this profile definition.
            </summary>
            <value>The scripts used by this profile definition.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.ServiceProfileDefinitionID">
            <summary>
            Gets or sets the service profile definition ID.
            </summary>
            <value>The service profile definition ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.Skyline#DataMiner#Net#ManagerStore#ITrackLastModified#LastModified">
            <summary>
            Gets or sets the last modification date.
            </summary>
            <value>The last modification date.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.TableDefinitions">
            <summary>
            Gets or sets the table definitions.
            </summary>
            <value>The table definitions.</value>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ProfileDefinition._parameterSettings">
            <summary>
            Gets or sets the parameter settings.
            </summary>
            <value>The parameter settings.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/> class using the specified GUID.
            </summary>
            <param name="g">The GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.#ctor(Skyline.DataMiner.Net.Profiles.ProfileDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/> class using the specified profile definition.
            </summary>
            <param name="pd">The profile definition.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.ShouldSerializeParameterIDs">
            <summary>
            Returns a value indicating whether the parameter IDs should be serialized.
            </summary>
            <returns><c>true</c> if the parameter IDs should be serialized; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.ShouldSerializeBasedOnIDs">
            <summary>
            Returns a value indicating whether the basedOn IDs should be serialized.
            </summary>
            <returns><c>true</c> if the basedOn IDs should be serialized; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.IsConsistent">
            <summary>
            Returns a value indicating whether it is consistent.
            </summary>
            <returns><c>true</c> if it is consistent; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.GetInconsistentParameterIDs">
            <summary>
            Retrieves the inconsistent parameter IDs.
            </summary>
            <returns>The inconsistent parameter IDs.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.GetInconsistentBasedOnIDs">
            <summary>
            Retrieves the inconsistent basedOn IDs.
            </summary>
            <returns>The inconsistent basedOn IDs.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.GetAncestralSet">
            <summary>
            Retrieves all the ancestors, in top-to-bottom order (i.e. the current profile definition "this" is the last item in the returned object).
            </summary>
            <returns>The ancestors, in top-to-bottom order (i.e. the current profile definition "this" is the last item in the returned object).</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.HasRecursiveInheritance(System.Collections.Generic.HashSet{System.Guid}@)">
            <summary>
            Returns a value indicating whether there is recursive inheritance.
            </summary>
            <returns><c>true</c> if there is recursive inheritance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.HasCyclicDependency">
            <summary>
            Returns a value indicating whether there is a cyclic dependency.
            </summary>
            <returns><c>true</c> if there is a cyclic dependency; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.FiltersTo(Skyline.DataMiner.Net.Profiles.ProfileDefinition)">
            <summary>
            Retrieves a value indicating whether this profile definition matches the specified filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns><c>true</c> if this profile definition matches the specified filter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.SearchAllParameters">
            <summary>
            Gets all the parameters of the current definition and all the <see cref="P:Skyline.DataMiner.Net.Profiles.ProfileDefinition.BasedOn"/> definitions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.System#IEquatable{Skyline#DataMiner#Net#Profiles#ProfileDefinition}#Equals(Skyline.DataMiner.Net.Profiles.ProfileDefinition)">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.System#Collections#Generic#IEqualityComparer{Skyline#DataMiner#Net#Profiles#ProfileDefinition}#Equals(Skyline.DataMiner.Net.Profiles.ProfileDefinition,Skyline.DataMiner.Net.Profiles.ProfileDefinition)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="one">The first object of type <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/>  to compare.</param>
            <param name="other">The second object of type <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/> to compare.</param>
            <returns><c>true</c> if the specified objects are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.System#Collections#Generic#IEqualityComparer{Skyline#DataMiner#Net#Profiles#ProfileDefinition}#GetHashCode(Skyline.DataMiner.Net.Profiles.ProfileDefinition)">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.ToXml">
            <summary>
            Returns an XML representation of this object.
            </summary>
            <returns>An XML representation of this object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileDefinition.FromXml(System.String)">
            <summary>
            Returns an instance of this class from the specified XML representation.
            </summary>
            <returns>An instance of this class from the specified XML representation.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ProfileInstance">
            <summary>
            Represents a Profile Manager profile instance.
            </summary>
            <example>
            <para>Creating, retrieving, updating and deleting a profile instance.</para>
            <code>
            using Skyline.DataMiner.Automation;
            using Skyline.DataMiner.Net.IManager.Helper;
            using Skyline.DataMiner.Net.Profiles;
            using System;
            using System.Linq;
            
            public class Script
            {
            	ProfileManagerHelper Helper;
            	
            	public Script()
            	{
            		Helper = new ProfileManagerHelper();
            		Helper.RequestResponseEvent += Helper_RequestResponseEvent;
            	}
            	
            	private void Helper_RequestResponseEvent(object sender, IManagerRequestResponseEventArgs e)
            	{
            		e.responseMessage = Engine.SLNet.SendSingleResponseMessage(e.requestMessage);
            	}
            	
            	public void Run(Engine engine)
            	{
            		ProfileInstance pi = CreateProfileInstance();
            		pi = RetrieveProfileInstance(pi.ID);
            		pi = UpdateProfileInstance(pi);
            		pi = DeleteProfileInstance(pi.ID);
            	}
            	
            	private ProfileInstance DeleteProfileInstance(Guid iD)
            	{
            		return Helper.RemoveProfileInstances(new ProfileInstance(iD)).FirstOrDefault();
            	}
            	
            	private ProfileInstance UpdateProfileInstance(ProfileInstance pi)
            	{
            		pi.Name = "Another Name";
            		pi.Description = "Another Description";
            		
            		return Helper.AddOrUpdateProfileInstance(pi);
            	}
            	
            	private ProfileInstance RetrieveProfileInstance(Guid iD)
            	{
            		return Helper.GetProfileInstances(new ProfileInstance(iD)).FirstOrDefault();
            	}
            	
            	private ProfileInstance CreateProfileInstance()
            	{
            		ProfileInstance pi = new ProfileInstance();
            		pi.AppliesTo = CreateProfileDefinition(); //Create a profiledefinition (same method as in ProfileDefinition CRUD)
            		//pi.BasedOn.Add(...); ProfileInstance can be based upon another ProfileInstance (inheritance)
            		pi.Description = "A description";
            		pi.Name = "A Name";
            		pi.Values = new ProfileParameterEntry[]
            		{
            			new ProfileParameterEntry()
            			{
            				Parameter = CreateParameter(),
            				Remarks = "This is a thing",
            				Value = new ParameterValue()
            				{
            					DoubleValue = 12345,
            					Type = ParameterValue.ValueType.Double
            				}
            			}
            		};
            		
            		return Helper.AddOrUpdateProfileInstance(pi);
            	}
            }
            </code>
            </example>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileInstance.ProfileInstanceId">
            <summary>
            Gets or sets the profile instance ID.
            </summary>
            <value>The profile instance ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileInstance.ID">
            <summary>
            Gets or sets the ID of this profile instance.
            </summary>
            <value>The ID of this profile instance.</value>
        </member>
        <member name="E:Skyline.DataMiner.Net.Profiles.ProfileInstance.RequestResponseEvent">
            <summary>
            Event that is generated when this ProfileInstance wants to request data from SLNet itself (see: <see cref="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.GenerateSets(System.String@,Skyline.DataMiner.Net.Messages.ElementInfoEventMessage[])"/>)
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileInstance.IsValueCopy">
            <summary>
            Gets or sets a value indicating whether this is a temporary profile instance copy or profile instance template.
            </summary>
            <value><c>true</c> if this is a value copy; otherwise, <c>false</c>.</value>
            <remarks>Feature introduced in DataMiner 9.6.8 (RN 21797).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileInstance.AppliesTo">
            <summary>
            Gets or sets the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/> object to which this profile instance is linked.
            </summary>
            <value>The <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/> object to which this profile instance is linked.</value>
            <remarks>
            <para>An instance must always be linked to a definition. It will not be possible to save the instance unless a definition has been selected.</para>
            <para>An instance always has to be linked to the same definition as the instance it is based on.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileInstance.AppliesToID">
            <summary>
            Gets or sets the <see cref="T:System.Guid"/> of the profile definition to which this profile instance is linked.
            </summary>
            <value>The <see cref="T:System.Guid"/> of the profile definition to which this profile instance is linked.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileInstance.ServiceProfileInstanceID">
            <summary>
            Gets or sets the service profile instance ID.
            </summary>
            <value>The service profile instance ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileInstance.Values">
            <summary>
            Gets or sets the profile parameter entries of this profile instance.
            </summary>
            <value>The profile parameter entries of this profile instance.</value>
            <remarks>This can for example be used to override one or more values from a base instance.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileInstance.BasedOn">
            <summary>
            Gets the profile instances on which this profile instance is based.
            </summary>
            <value>The profile instances on which this profile instance is based.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileInstance.BasedOnIDs">
            <summary>
            Gets the GUIDs of the profile instances this profile instance is based on.
            </summary>
            <value>The GUIDs of the profile instances this profile instance is based on.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileInstance"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileInstance"/> class using the specified GUID.
            </summary>
            <param name="g">The GUID of this profile instance.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.#ctor(Skyline.DataMiner.Net.Profiles.ProfileInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileInstance"/> class using the specified profile instance.
            </summary>
            <param name="pi">The profile instance.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.IsConsistent">
            <summary>
            Returns a value indicating whether it is consistent.
            </summary>
            <returns><c>true</c> if it is consistent; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.IsAppliesToConsistent">
            <summary>
            Returns a value indicating whether appliesTo is consistent.
            </summary>
            <returns><c>true</c> if it is consistent; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.GetInconsistentBasedOnIDs">
            <summary>
            Retrieves the inconsistent basedOn IDs.
            </summary>
            <returns>The inconsistent basedOn IDs.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.GetInconsistentParameterValues">
            <summary>
            Retrieves the inconsistent parameter values.
            </summary>
            <returns>The inconsistent parameter values.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.HasRecursiveInheritance(System.Collections.Generic.HashSet{System.Guid}@)">
            <summary>
            Returns a value indicating whether there is recursive inheritance.
            </summary>
            <returns><c>true</c> if there is recursive inheritance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.HasCyclicDependency">
            <summary>
            Returns a value indicating whether there is a cyclic dependency.
            </summary>
            <returns><c>true</c> if there is a cyclic dependency; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.ShouldSerializeBasedOn">
            <summary>
            Returns a value indicating whether the basedOn IDs should be serialized.
            </summary>
            <returns><c>true</c> if the basedOn IDs should be serialized; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.ShouldSerializeAppliesToID">
            <summary>
            Returns a value indicating whether the applies to ID should be serialized.
            </summary>
            <returns><c>true</c> if the applies to ID should be serialized; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.FindAllParameters">
            <summary>
            Retrieves all profile instance parameter entries, including the profile parameter entries of the profile instances this profile instance is based on.
            </summary>
            <returns>All profile instance parameter entries, including the profile parameter entries of the profile instances this profile instance is based on.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.GenerateDefaultParameterEntries(System.Collections.Generic.List{Skyline.DataMiner.Net.Profiles.ProfileParameterEntry})">
            <summary>
            Generates <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry" /> instances for all parameters that have default values defined and that are not present in the specified list.
            </summary>
            <param name="allExistingParameterEntries">List of <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry" />  instances for which no default parameter entries should be created.</param>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry" /> instances for all parameters that have default values defined and that are not present in the specified list.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.ApplyInstance(System.String@,Skyline.DataMiner.Net.Messages.ElementInfoEventMessage[])">
            <summary>
            Applies this profile instance to the specified elements.
            </summary>
            <param name="error">Output string that will contain any errors that occurred.</param>
            <param name="info"> Elements on which this profile instance needs to be applied.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.GenerateSets(System.String@,Skyline.DataMiner.Net.Messages.ElementInfoEventMessage[])">
            <summary>
            Generates the SetParameterMessages required when trying to apply this ProfileInstance on one or more elements.
            </summary>
            <param name="error">Output string that contains any errors that occurred.</param>
            <param name="info">Elements on which this ProfileInstance needs to be applied.</param>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Messages.SetParameterMessage"/> messages.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.GenerateSets(System.String@,System.Tuple{Skyline.DataMiner.Net.Messages.ElementInfoEventMessage,Skyline.DataMiner.Net.Messages.GetProtocolInfoResponseMessage}[])">
            <summary>
            Generate the SetMessages required when trying to apply this ProfileInstance on one or more elements.
            </summary>
            <param name="info">Elements on which this ProfileInstance needs to be applied.</param>
            <param name="error">Output string that contains any errors that occurred.</param>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Messages.SetParameterMessage"/> messages.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.GenerateRequiredCapas(System.Func{Skyline.DataMiner.Net.Profiles.ProfileParameterEntry,Skyline.DataMiner.Net.Profiles.Parameter})">
            <summary>
            This variant of the GenerateRequiredCapas method can be used to more efficiently calculate the required usages
            by providing funcs that should return the objects from an existing cache managed by the calling script.
            </summary>
            <param name="parameterResolver">Func that returns the linked <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> for the given <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry"/></param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.GenerateRequiredCapas">
            <summary>
            </summary>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">if one of the linked profile parameters could not be resolved</exception>
            <returns></returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.FiltersTo(Skyline.DataMiner.Net.Profiles.ProfileInstance)">
            <summary>
            Determines whether this profile instance matches the specified filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns><c>true</c> if this profile instance matches the specified filter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.Equals(Skyline.DataMiner.Net.Profiles.ProfileInstance)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.ToXml">
            <summary>
            Returns an XML representation of this object.
            </summary>
            <returns>An XML representation of this object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileInstance.FromXml(System.String)">
            <summary>
            Returns an instance of this class from the specified XML representation.
            </summary>
            <returns>An instance of this class from the specified XML representation.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry">
            <summary>
            Represents a profile parameter entry in a profile instance.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.Parameter">
            <summary>
            Gets or sets the profile parameter this entry relates to.
            </summary>
            <value>The profile parameter this entry relates to.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.ParameterID">
            <summary>
            Gets the ID of the profile parameter this entry relates to.
            </summary>
            <value>The ID of the profile parameter this entry relates to.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.Value">
            <summary>
            Gets or sets the value of this profile parameter entry.
            </summary>
            <value>The value of this profile parameter entry.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.CapabilityUsageValue">
            <summary>
            Gets or sets the capability usage value.
            </summary>
            <value>The capability usage value.</value>
            <remarks>Feature introduced in DataMiner 9.6.4 (RN 20891, 21178).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.CapacityUsageValue">
            <summary>
            Gets or sets the capacity usage value.
            </summary>
            <value>The capacity usage value.</value>
            <remarks>Feature introduced in DataMiner 9.6.5 (RN 21194).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.Remarks">
            <summary>
            Gets or sets remarks related to this profile parameter entry.
            </summary>
            <value>Remarks related to this profile parameter entry.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.Disabled">
            <summary>
            Gets or sets a value indicating whether this parameter is disabled.
            </summary>
            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>
            <remarks>This is used to disable a parameter that should not be inherited from a parent profile instance.
            Feature introduced in DataMiner 9.6.8 (RN 21808).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.ParameterSettings">
            <summary>
            Gets or sets the parameter settings.
            </summary>
            <value>The parameter settings.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.FiltersTo(Skyline.DataMiner.Net.Profiles.ProfileParameterEntry)">
            <summary>
            Determines whether this parameter entry matches the specified filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns><c>true</c> if this parameter entry matches the specified filter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.Equals(Skyline.DataMiner.Net.Profiles.ProfileParameterEntry)">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>Two <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry"/> instances are considered equal by this method if the <see cref="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.ParameterID"/> and <see cref="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.Value"/> property values are equal.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>Two <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry"/> instances are considered equal by this method if the <see cref="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.ParameterID"/> and <see cref="P:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.Value"/> property values are equal.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileParameterEntry.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference">
            <summary>
            Represents a reference to a protocol parameter.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.ProtocolName">
            <summary>
            Gets or sets the name of the protocol.
            </summary>
            <value>The name of the protocol.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.ProtocolVersion">
            <summary>
            Gets or sets the version of the protocol.
            </summary>
            <value>The version of the protocol.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.ParameterId">
            <summary>
            Gets or sets the ID of the protocol parameter.
            </summary>
            <value>The protocol parameter ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.TableIndex">
            <summary>
            Gets or sets the table index.
            </summary>
            <value>The table index.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.MediationSnippetID">
            <summary>
            Gets or sets the media snippet ID.
            </summary>
            <value>The media snippet ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.ProtocolID">
            <summary>
            Gets or set the protocol name and version.
            </summary>
            <value>The protocol ID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.#ctor(Skyline.DataMiner.Net.Profiles.ProtocolParameterReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference"/> class using the specified <see cref="T:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference"/> instance.
            </summary>
            <param name="ppr">The protocol parameter reference to copy the values from.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.FiltersTo(Skyline.DataMiner.Net.Profiles.ProtocolParameterReference)">
            <summary>
            Retrieves a value indicating whether this protocol parameter reference matches the specified filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns><c>true</c> if this protocol parameter reference matches the specified filter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.Equals(Skyline.DataMiner.Net.Profiles.ProtocolParameterReference)">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ScriptEntry">
            <summary>Represents a script entry.</summary>
            <remarks>Used by <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/>.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ScriptEntry.Name">
            <summary>
            Gets or sets the name of the Automation script.
            </summary>
            <value>The name of the Automation script.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ScriptEntry.Description">
            <summary>
            Gets or sets the description of the script.
            </summary>
            <value>The description of the script.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ScriptEntry.Script">
            <summary>
            Gets or sets the script.
            </summary>
            <remarks>Same syntax as used in Visio "Execute" shape data, e.g. "MyScript|Dummy 1=MyElement|MyParameter=12|MyMemory=abc|MyTooltip|NoConfirmation,NoSetCheck".</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ScriptEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ScriptEntry"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ScriptEntry.#ctor(Skyline.DataMiner.Net.Profiles.ScriptEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ScriptEntry"/> class using the specified script entry.
            </summary>
            <param name="entry">The entry to base this new <see cref="T:Skyline.DataMiner.Net.Profiles.ScriptEntry"/> instance on.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ScriptEntry.FiltersTo(Skyline.DataMiner.Net.Profiles.ScriptEntry)">
            <summary>
            Checks if this object qualifies for the specified filter.
            </summary>
            <param name="filter">Object used as filter</param>
            <returns>True if we pass the filter, false if we don't pass</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ScriptEntry.Equals(Skyline.DataMiner.Net.Profiles.ScriptEntry)">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Profiles.ScriptEntry"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ScriptEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ScriptEntry.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ServiceStatus.Stopped">
            <summary>
            Stopped.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ServiceStatus.Standby">
            <summary>
            Standby.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ServiceStatus.Paused">
            <summary>
            Paused.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ServiceStatus.Running">
            <summary>
            Running.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Profiles.ServiceStatus.Retired">
            <summary>
            Retired.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper">
            <summary>
            Represents a helper for interacting with Profile Manager.
            </summary>
            <remarks>This class has become obsolete with the introduction of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileHelper"/> class in DataMiner 10.0.8 (RN 25515). Please use the new <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileHelper"/> class instead.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.UseCaching">
            <summary>
            Gets or sets a value indicating whether to use caching.
            </summary>
            <value><c>true</c> if caching is used; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.RequestResponseEvent">
            <summary>
            Occurs when the Helper wants to send a message to the server and expects a response.
            </summary>
        </member>
        <member name="E:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.LoggingEvent">
            <summary>
            Occurs when an error or notification should get logged.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.ServiceProfileDefinitions">
            <summary>
            Gets the service profile definitions CRUD helper.
            </summary>
            <value>The service profile definitions CRUD helper.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.ServiceProfileInstances">
            <summary>
            Gets the service profile definitions CRUD helper.
            </summary>
            <value>The service profile definitions CRUD helper.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.MediationSnippets">
            <summary>
            Gets the mediation snippet CRUD helper.
            </summary>
            <value>The mediation snippet CRUD helper.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.Config">
            <summary>
            Gets the Profile Manager configuration CRUD helper.
            </summary>
            <value>The Profile Manager configuration CRUD helper.</value>
            <remarks>Feature introduced in DataMiner 10.0.8 (RN 25758).</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.#ctor(System.EventHandler{Skyline.DataMiner.Net.IManager.Helper.IManagerRequestResponseEventArgs})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper"/> class using the specified event handler.
            </summary>
            <param name="requestResponseEvent">The request-response event handler.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.#ctor(System.Func{Skyline.DataMiner.Net.Messages.DMSMessage[],Skyline.DataMiner.Net.Messages.DMSMessage[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper"/> class using the specified message callback.
            </summary>
            <param name="messagesCallback">The message callback.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.IsInitialized">
            <summary>
            Returns a value indicating whether this profile manager helper is initialized.
            </summary>
            <returns><c>true</c> if initialized; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileDefinitionsFromServer(Skyline.DataMiner.Net.Profiles.ProfileDefinition[])">
            <summary>
            Retrieves the profile definitions from the server matching the specified filters.
            </summary>
            <param name="filters">The filters.</param>
            <returns>The profile definitions from the server matching the specified filters.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileDefinitionsFromServer(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Profiles.ProfileDefinition})">
            <summary>
            Retrieves the profile definitions from the server matching the specified filters.
            </summary>
            <param name="filter">The filter.</param>
            <returns>The profile definitions from the server matching the specified filters.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileDefinitions(Skyline.DataMiner.Net.Profiles.ProfileDefinition[])">
            <summary>
            Retrieves the profile definitions matching any of the specified filters.
            </summary>
            <param name="filters">The profile definition filters.</param>
            <returns>The profile definitions that match at least one of the specified filters.</returns>
            <remarks>This method is obsolete from DataMiner 10.0.4 (RN 24552) onwards. Please use <see cref="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileDefinitionsWithFilter(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Profiles.ProfileDefinition})"/> instead</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileDefinitionsWithFilter(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Profiles.ProfileDefinition})">
            <summary>
            Retrieves the profile definitions matching the specified filter.
            </summary>
            <param name="filter">The profile definition filter.</param>
            <returns>The profile definitions that match the specified filter.</returns>
            <remarks>Feature introduced in DataMiner 9.6.4 (RN 20761).</remarks>
            <example>
            <code>
            var result = helper.GetProfileDefinitionsWithFilter(ProfileDefinitionExposers.Name.Contains("A"));
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileDefinitions(Skyline.DataMiner.Net.Messages.GetProfileDefinitionMessage,System.Object)">
            <summary>
            Retrieves <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileDefinition"/> , using a Message as input.
            </summary>
            <param name="msg">GetProfileDefinitionMessage to process.</param>
            <param name="context">The context.</param>
            <returns>ProfileManagerResponseMessage containing the requested objects.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileDefinition(System.Guid)">
            <summary>
            Retrieves the profile definition with the specified ID.
            </summary>
            <param name="id">The ID of the profile definition to retrieve.</param>
            <returns>The profile definition with the specified ID or <see langword="null"/> if no definition with the specified ID exists.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.AddOrUpdateProfileDefinitions(Skyline.DataMiner.Net.Profiles.ProfileDefinition[])">
            <summary>
            Adds or updates the specified profile definitions.
            </summary>
            <param name="definitions">The profile definitions.</param>
            <returns>The updated profile definitions.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.AddOrUpdateProfileDefinition(Skyline.DataMiner.Net.Profiles.ProfileDefinition)">
            <summary>
            Adds or updates the specified profile definition.
            </summary>
            <param name="definition">The profile definition.</param>
            <returns>The updated profile definition.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.RemoveProfileDefinitions(Skyline.DataMiner.Net.Profiles.ProfileDefinition[])">
            <summary>
            Removes the specified profile definitions.
            </summary>
            <param name="definitions">The profile definitions to remove.</param>
            <returns>The removed profile definitions.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.RemoveProfileDefinitions(System.String@,Skyline.DataMiner.Net.Profiles.ProfileDefinition[])">
            <summary>
            Removes the specified profile definitions.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="definitions">The profile definitions that should be removed.</param>
            <returns><c>true</c> if the profile definition removal succeeded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.SetProfileDefinitions(System.Collections.Generic.IEnumerable{Skyline.DataMiner.Net.Profiles.ProfileDefinition},System.Boolean@,System.Boolean)">
            <summary>
            Adds or edits the specified profile definitions.
            </summary>
            <param name="definitions">The profile definitions to add or edit.</param>
            <param name="success"><c>true</c> if the profile definitions were added/edited successfully; otherwise, <c>false</c>.</param>
            <param name="isDelete"><c>true</c> if the specified profile definitions should be deleted; otherwise, <c>false</c>.</param>
            <returns>The added/edited profile definitions.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.SetProfileDefinitions(System.String@,Skyline.DataMiner.Net.Profiles.ProfileDefinition[])">
            <summary>
            Adds or edits the specified profile definitions.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="definitions">The profile definitions to add or edit.</param>
            <returns><c>true</c> if the profile definitions were added/edited successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.SetProfileDefinitions(Skyline.DataMiner.Net.Messages.SetProfileDefinitionMessage)">
            <summary>
            Adds or edits the specified profile definitions.
            </summary>
            <param name="msg">The profile definition message.</param>
            <returns>The profile manager response message.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.SetProfileDefinitionsOnServer(System.Collections.Generic.IEnumerable{Skyline.DataMiner.Net.Profiles.ProfileDefinition},System.Boolean@,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Adds or edits the specified profile definitions.
            </summary>
            <param name="definitions">The profile definitions to add or edit.</param>
            <param name="success"><c>true</c> if the profile definitions were added/edited successfully; otherwise, <c>false</c>.</param>
            <param name="isDelete"><c>true</c> if the specified profile definitions should be deleted; otherwise, <c>false</c>.</param>
            <returns>The added/edited profile definitions.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileInstancesFromServer(Skyline.DataMiner.Net.Profiles.ProfileInstance[])">
            <summary>
            Retrieves the profile instances form the server matching the specified filters.
            </summary>
            <param name="filters">The filters.</param>
            <returns>The profile instances form the server matching the specified filters.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileInstancesFromServer(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Profiles.ProfileInstance})">
            <summary>
            Retrieves the profile instances form the server matching the specified filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>The profile instances form the server matching the specified filter.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileInstances(Skyline.DataMiner.Net.Profiles.ProfileInstance[])">
            <summary>
            Retrieves the profile instances matching any of the specified filters.
            </summary>
            <param name="filters">The profile instance filters.</param>
            <returns>The profile instances that match at least one of the specified filters.</returns>
            <remarks>This method is obsolete from DataMiner 10.0.4 (RN 24552) onwards. Please use <see cref="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileInstancesWithFilter(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Profiles.ProfileInstance})"/> instead.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileInstancesWithFilter(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Profiles.ProfileInstance})">
            <summary>
            Retrieves the profile instances matching the specified filter.
            </summary>
            <param name="filter">The profile instance filter.</param>
            <returns>The profile instances that the specified filter.</returns>
            <remarks>Feature introduced in DataMiner 9.6.4 (RN 20761).</remarks>
            <example>
            <code>
            var result = helper.GetProfileInstancesWithFilter(ProfileInstanceExposers.Name.Contains("A"));
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileInstances(Skyline.DataMiner.Net.Messages.GetProfileInstanceMessage,System.Object)">
            <summary>
            Retrieve ProfileInstances, using a Message as input
            </summary>
            <param name="msg">GetProfileInstanceMessage to process</param>
            <param name="context"></param>
            <returns>ProfileManagerResponseMessage containing the objects requested.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetProfileInstance(System.Guid)">
            <summary>
            Retrieves the profile instance with the specified ID.
            </summary>
            <param name="id">The ID of the profile instance to retrieve.</param>
            <returns>The profile instance with the specified ID or <see langword="null"/> if no profile instance with the specified ID exists.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.AddOrUpdateProfileInstances(Skyline.DataMiner.Net.Profiles.ProfileInstance[])">
            <summary>
            Adds or updates the specified profile instances.
            </summary>
            <param name="instances">The profile instances.</param>
            <returns>The updated profile instances.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.UpdateAndApplyProfileInstance(Skyline.DataMiner.Net.Profiles.ProfileInstance,System.Boolean)">
            <summary>
            If this call is used, the ByReference <see cref="T:Skyline.DataMiner.Net.SRM.Capacities.MultiResourceCapacityUsage"/> and <see cref="T:Skyline.DataMiner.Net.SRM.Capabilities.ResourceCapabilityUsage"/> of the ReservationInstances will
            be updated with the values from the <see cref="T:Skyline.DataMiner.Net.Profiles.ProfileInstance"/>.
            If there are conflicting changes in usage, other ReservationInstance will be quarantined if <paramref name="conflictsToQuarantine"/> is set to true.
            If <paramref name="conflictsToQuarantine"/> is set to false, then the reservationInstances that would be quarantined are returned instead.
            </summary>
            <param name="instance"></param>
            <param name="conflictsToQuarantine"></param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.AddOrUpdateProfileInstance(Skyline.DataMiner.Net.Profiles.ProfileInstance)">
            <summary>
            Adds or updates the specified profile instance.
            </summary>
            <param name="instance">The profile instance.</param>
            <returns>The updated profile instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.RemoveProfileInstances(Skyline.DataMiner.Net.Profiles.ProfileInstance[])">
            <summary>
            Removes the specified profile instances.
            </summary>
            <param name="instances">The profile instances to remove.</param>
            <returns>The removed profile instances.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.RemoveProfileInstances(System.String@,Skyline.DataMiner.Net.Profiles.ProfileInstance[])">
            <summary>
            Removes the specified profile instances.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="instances">The profile instances to remove.</param>
            <returns><c>true</c> if the profile definition removal succeeded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.SetProfileInstances(System.Collections.Generic.IEnumerable{Skyline.DataMiner.Net.Profiles.ProfileInstance},System.Boolean@,System.Boolean)">
            <summary>
            Adds or edits the specified profile instances.
            </summary>
            <param name="instances">The profile instances to add/edit.</param>
            <param name="success"><c>true</c> if the profile instances were added/edited successfully; otherwise, <c>false</c>.</param>
            <param name="isDelete"><c>true</c> if the specified profile definitions should be deleted; otherwise, <c>false</c>.</param>
            <returns>The added/edited profile instances.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.SetProfileInstances(System.String@,Skyline.DataMiner.Net.Profiles.ProfileInstance[])">
            <summary>
            Adds or edits the specified profile instances.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="instances">The profile instances to add/edit.</param>
            <returns><c>true</c> if the profile instances were added/edited successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetParametersFromServer(Skyline.DataMiner.Net.Profiles.Parameter[])">
            <summary>
            Retrieves the parameters from the server matching the specified filters.
            </summary>
            <param name="filters">The filters.</param>
            <returns>The parameters from the server matching the specified filters.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetParametersFromServer(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Profiles.Parameter})">
            <summary>
            Retrieves the parameters from the server matching the specified filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>The parameters from the server matching the specified filter.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetParameters(Skyline.DataMiner.Net.Profiles.Parameter[])">
            <summary>
            Retrieves the profile parameters matching any of the specified filters.
            </summary>
            <param name="filters">Profile parameter filters.</param>
            <returns>The profile parameters that match at least one of the specified filters.</returns>
            <remarks>Obsolete, use <see cref="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetParametersWithFilter(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Profiles.Parameter})"/> instead.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetParametersWithFilter(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Profiles.Parameter})">
            <summary>
            Retrieves the profile parameters matching the specified filter.
            </summary>
            <param name="filter">Profile parameter filter.</param>
            <returns>The profile parameters that match the specified filter.</returns>
            <remarks>Feature introduced in DataMiner 9.6.4 (RN 20761).</remarks>
            <example>
            <code>
            var result = helper.GetParametersWithFilter(ParameterExposers.Name.Contains("A"));
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetParameter(System.Guid)">
            <summary>
            Retrieves the parameter with the specified ID.
            </summary>
            <param name="id">The ID of the parameter.</param>
            <returns>The parameter with the specified ID.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetParameters(Skyline.DataMiner.Net.Messages.GetProfileManagerParameterMessage,System.Object)">
            <summary>
            Retrieves parameters using the message.
            </summary>
            <param name="msg">GetProfileManagerParameterMessage to process</param>
            <param name="context"></param>
            <returns>ProfileManagerResponseMessage containing the objects requested.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.AddOrUpdateParameters(Skyline.DataMiner.Net.Profiles.Parameter[])">
            <summary>
            Adds or updates the specified profile parameters.
            </summary>
            <param name="parameters">The profile parameters.</param>
            <returns>The updated profile parameters.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.AddOrUpdateParameter(Skyline.DataMiner.Net.Profiles.Parameter)">
            <summary>
            Adds or updates the specified profile parameter.
            </summary>
            <param name="parameter">The profile parameter.</param>
            <returns>The updated profile parameter.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.RemoveParameters(Skyline.DataMiner.Net.Profiles.Parameter[])">
            <summary>
            Removes the specified profile parameters.
            </summary>
            <param name="parameters">The profile parameters to remove.</param>
            <returns>The removed parameters.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.RemoveParameters(System.String@,Skyline.DataMiner.Net.Profiles.Parameter[])">
            <summary>
            Removes the specified profile parameters.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="parameters">The profile parameters to remove.</param>
            <returns><c>true</c> if the profile parameter removal succeeded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.SetParameters(System.Collections.Generic.IEnumerable{Skyline.DataMiner.Net.Profiles.Parameter},System.Boolean@,System.Boolean)">
            <summary>
            Adds or edits the specified profile parameters.
            </summary>
            <param name="parameters">The profile parameters to add or edit.</param>
            <param name="success"><c>true</c> if the parameters were added/edited successfully; otherwise, <c>false</c>.</param>
            <param name="isDelete"><c>true</c> if the specified profile parameters should be deleted; otherwise, <c>false</c>.</param>
            <returns>The add/edited parameters.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.SetParameters(System.String@,Skyline.DataMiner.Net.Profiles.Parameter[])">
            <summary>
            Adds or edits the specified profile parameters.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="parameters">The profile parameters to add or edit.</param>
            <returns><c>true</c> if the profile parameters were added/edited successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.SetParameters(Skyline.DataMiner.Net.Messages.SetProfileManagerParameterMessage)">
            <summary>
            Adds or edits the specified profile parameter.
            </summary>
            <param name="msg">The message.</param>
            <returns>The profile parameter response message.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.Export(System.Collections.Generic.List{System.Guid})">
            <summary>
            Exports the <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/>s with the given ids together with any <see cref="T:Skyline.DataMiner.Net.MediationSnippets.MediationSnippet"/> these parameters are linked to. 
            </summary>
            <param name="ids">The IDs of the <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/>s to export.</param>
            <returns>A <see cref="T:Skyline.DataMiner.Net.ProfileManager.Export.ProfileParameterExportResult"/> with the result of the export.</returns>
            <exception cref="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException"><paramref name="ids"/> contains an ID for which no profile parameter could be found.</exception>
            <exception cref="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException">A profile parameter to export has a link to a MediationSnippet that could not be found.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.Import(System.Byte[])">
            <summary>
            Imports the <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> in the passed file.
            </summary>
            <param name="file">The file to import.</param>
            <returns>The import result.</returns>
            <exception cref="T:System.IO.InvalidDataException">If the passed <paramref name="file"/> is not a valid import file.</exception>
            <exception cref="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException">If the passed <paramref name="file"/> contains a profile parameter that could not be imported.</exception>
            <exception cref="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException">If the passed <paramref name="file"/> contains a mediation snippet that could not be imported.</exception>
            <remarks>
            <para>If you export a profile parameter, all the mediation snippets linked to that parameter will also be exported.</para>
            <para>If any parameters in the import would already exist on the system they will be overwritten by the value in the import package.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetTraceDataLastCall">
            <summary>
            Retrieves the trace data of the last call.
            </summary>
            <returns>The trace data of the last call.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Profiles.ProfileManagerHelper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.MediationSnippets.MediationSnippetCrudHelperComponent">
            <summary>
            Mediation snippet CRUD helper component.
            </summary>
            <remarks>
            <para>Available from DataMiner 10.0.8 (RN 25515) onwards.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.MediationSnippets.MediationSnippetCrudHelperComponent.#ctor(System.Func{Skyline.DataMiner.Net.Messages.DMSMessage[],Skyline.DataMiner.Net.Messages.DMSMessage[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.MediationSnippets.MediationSnippetCrudHelperComponent"/> class.
            </summary>
            <param name="messageHandler">The message handler.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Apps.Utils.AttachmentsHelper">
            <summary>
            Helper class for ticket attachments.
            </summary>
            <remarks>
            <para>Available from DataMiner 10.0.8 (RN 25612) onwards.</para>
            <list type="bullet">
            <item><description>The maximum size of ticket attachments is determined by the Documents.MaxSize setting, located in the MaintenanceSettings.xml file. Default: 20 MB. Trying to upload a larger file will result in a DataMinerException.</description></item>
            <item><description>Manipulating ticket attachments requires the same user permissions as normal ticket management operations: read permission to view and download attachments and edit permission to add and delete attachments.</description></item>
            <item><description>If a ticket is deleted, all its attachments are physically deleted from the disk. They will not be recoverable.</description></item>
            <item><description>All ticket attachments are synchronized throughout the DataMiner System. To include them in a backup, select the All documents located on this DMA backup option.</description></item>
            <item><description>The Documents API can also be used to manage ticket attachments. Instead of using the above-mentioned methods, you can also use AddDocumentMessage, DeleteDocumentMessage, GetBinaryFileMessage and GetDocumentMessage. If you do so, specify the directory as "TICKET_ATTACHMENTS\{DataminerID}_{TicketId}" and make sure the property ID of type DMAObjectRef contains the ticket ID.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Apps.Utils.AttachmentsHelper.Add(Skyline.DataMiner.Net.IDMAObjectRef,System.String,System.Byte[])">
            <summary>
            Adds a new attachment to the <see cref="T:Skyline.DataMiner.Net.IDMAObjectRef"/>.
            </summary>
            <param name="objectRef">The ID of the object to add the attachment to.</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="fileBytes">The contents of the attachment.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileBytes"/>, <paramref name="fileName"/>, or <paramref name="objectRef"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">
            <para>
            The <see cref="P:System.Exception.InnerException"/> will be an <see cref="T:System.ArgumentException"/> if the <paramref name="objectRef"></paramref> does not refer to an existing object.
            </para>
            <para>
            The <see cref="P:System.Exception.InnerException"/> will be <see langword="null"/> if something went wrong during communication with the server.
            </para>
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerCOMException">The provided fileName contains a relative path (e.g. '../file.txt').
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerSecurityException">
            The user does not have edit permissions for this object.
            </exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Apps.Utils.AttachmentsHelper.GetFileNames(Skyline.DataMiner.Net.IDMAObjectRef)">
            <summary>
            Returns the names of the files attached to the <see cref="T:Skyline.DataMiner.Net.IDMAObjectRef"/> with ID <paramref name="objectRef"/>.
            </summary>
            <param name="objectRef">The ID of the <see cref="T:Skyline.DataMiner.Net.DMAObjectRef"/> to get the attachment names for.</param>
            <exception cref="T:System.ArgumentNullException">If <see cref="T:Skyline.DataMiner.Net.IDMAObjectRef"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">
            <para>
            <see cref="P:System.Exception.InnerException"/> will be an <see cref="T:System.ArgumentException"/> if the DMAObjectRef could not be found.
            </para>
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerSecurityException">If the user does not have read permissions for this.</exception>
            <returns>
            The names of the attachments. An empty list if the <paramref name="objectRef"/> does not have attachments.
            </returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Apps.Utils.AttachmentsHelper.Delete(Skyline.DataMiner.Net.IDMAObjectRef,System.String)">
            <summary>
            Deletes the attachment with name <paramref name="attachmentName"/> from the object with ID <paramref name="objectRef"/>.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="objectRef"/> or <paramref name="attachmentName"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">
            <para>
            <see cref="P:System.Exception.InnerException"/> will be an <see cref="T:System.ArgumentException"/> if the object could not be found.
            </para>
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerSecurityException">If the user does not have edit permissions on the object</exception>
            <param name="objectRef">The ID of the <see cref="T:Skyline.DataMiner.Net.DMAObjectRef"/> to delete an attachment from.</param>
            <param name="attachmentName">The name of the attachment to delete.</param>
            <remarks>
            <para>
            This method does not throw an exception if an attachment with the given name could not be found for the object.
            </para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Apps.Utils.AttachmentsHelper.Get(Skyline.DataMiner.Net.IDMAObjectRef,System.String)">
            <summary>
            Get the contents of the attachment with name <paramref name="attachmentName"/> for object with id <paramref name="objectRef"/>.
            </summary>
            <param name="objectRef">The id of the object to find the attachment for.</param>
            <param name="attachmentName">The name of the attachment to find.</param>
            <returns>The contents of the attachment</returns>
            <exception cref="T:System.ArgumentNullException">If a passed argument is null</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerCOMException">If the attachment could not be found</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">
            <para>
            The inner exception will be an <see cref="T:System.ArgumentException"/> if the object could not be found
            </para>
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerSecurityException">If the user does not have read permissions on the object</exception>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent">
            <summary>
            Job CRUD helper component class.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.JobAttachmentFolderName">
            <summary>
            The job attachments folder name.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.JobAttachmentFilePath">
            <summary>
            The job attachments file path.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.Attachments">
            <summary>
            Gets the attachments helper.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.Suggest(System.String,System.Int32)">
            <summary>
            Retrieves suggestions for the specified query limited to the specified limit.
            </summary>
            <param name="query">The query string provided by the user that will be used to search the jobs.</param>
            <param name="amount">The suggestion limit.</param>
            <returns>The suggested items.</returns>
            <example>
            <code>
            JobManagerHelper jobManagerHelper = new JobManagerHelper(msg => protocol.SLNet.RawConnection.HandleMessages(msg));
            
            var suggestions = jobManagerHelper.Jobs.Suggest("MyJobName", 5);
            
            foreach (var suggestion in suggestions)
            {
            	var fieldDescriptorId = suggestion.MatchedField; // This will be the DefaultJobSectionDefinition.NameFieldDescriptorID descriptor ID.
            	var fieldValue = suggestion.MatchedValue;
            	// ...
            }
            </code>
            </example>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">An unexpected error occurred while retrieving suggestions.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.Suggest(System.String,System.Int32,System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.FieldDescriptorID},Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Jobs.Job})">
            <summary>
            Retrieves suggestions for the specified query limited to the specified limit.
            </summary>
            <param name="query">The query string provided by the user that will be used to search the jobs.</param>
            <param name="amount">The suggestion limit.</param>
            <param name="fieldIds">The IDs of the fields on which suggestions should be searched. Defaults to only the Name field of the job.</param>
            <param name="filter">The filter defining restrictions that a job should comply with to be included in the suggestions. Usually used to specify start/end time restrictions for the jobs.</param>
            <returns>The suggested items.</returns>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">An unexpected error occurred while retrieving suggestions.</exception>
            <remarks>
            <list type="bullet">
            <item><description>Each returned suggestion has the field that matched, the value that matched and the score. (The score indicates the quality of the match.)</description></item>
            <item><description>The query must be at least 3 characters long.</description></item>
            <item><description>Only fields of type "string" will be used to test the query against.</description></item>
            <item><description>This method obtains suggestions based on string fields of the job.</description></item>
            </list>
            <example>
            <code>
            JobManagerHelper jobManagerHelper = new JobManagerHelper(msg => protocol.SLNet.RawConnection.HandleMessages(msg));
            
            var suggestions = jobManagerHelper.Jobs.Suggest("myQuery", 2, new List&lt;FieldDescriptorID&gt;() { fieldDescriptor.ID }, JobExposers.FieldValues.JobField(DefaultJobSectionDefinition.NameFieldDescriptorID).Contains("MyNameFilter"));
            
            foreach (var suggestion in suggestions)
            {
            	var fieldDescriptorId = suggestion.MatchedField; // This will be the field descriptor ID of the matching field.
            	var fieldValue = suggestion.MatchedValue;
            	// ...
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.PrepareSearchPaging(System.String,System.Int64,Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Jobs.Job})">
            <summary>
            Allows searching jobs using the specified query and filter in a paged manner.
            </summary>
            <param name="query">The query.</param>
            <param name="preferredPageSize">The preferred page size.</param>
            <param name="filter">The filter elements.</param>
            <returns>The paging helper instance.</returns>
            <remarks>
            <list type="bullet">
            <item><description>The query must be at least 3 characters long.</description></item>
            <item><description>Only fields of type "string" will be used to test the query against.</description></item>
            </list>
            </remarks>
            <example>
            <code>
            JobManagerHelper jobManagerHelper = new JobManagerHelper(msg => protocol.SLNet.RawConnection.HandleMessages(msg));
            
            var searchPaging = jobManagerHelper.Jobs.PrepareSearchPaging("myQuery", 1, JobExposers.FieldValues.JobField(DefaultJobSectionDefinition.NameFieldDescriptorID).Contains("myNameFilter"));
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.PrepareSearchPaging(System.String,System.Int64,SLDataGateway.API.Types.Querying.IQuery{Skyline.DataMiner.Net.Jobs.Job})">
            <summary>
            Allows searching jobs using the specified query and filter in a paged manner.
            </summary>
            <param name="query">The query.</param>
            <param name="preferredPageSize">The preferred page size.</param>
            <param name="filter">The filter.</param>
            <returns>The paging helper instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.AddJobAttachment(Skyline.DataMiner.Net.Jobs.JobID,System.String,System.Byte[])">
            <summary>
            Adds a new attachment to the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> with the ID <paramref name="jobID"/>.
            </summary>
            <param name="jobID">The ID of the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> to add the attachment to.</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="fileBytes">The contents of the attachment.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="jobID"/>, <paramref name="fileName"/> or <paramref name="fileBytes"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">
            <para>
            The <see cref="P:System.Exception.InnerException"/> will be an <see cref="T:System.ArgumentException"/> if the <paramref name="jobID"></paramref> does not refer to an existing job.
            </para>
            <para>
            The <see cref="P:System.Exception.InnerException"/> will be <see langword="null"/> if something went wrong during communication with the server.
            </para>
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerCOMException">
            The provided file name contains a relative path (e.g. '../file.txt').
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerSecurityException">
            The user does not have edit permissions for this job.
            </exception>
            <remarks>
            <para>Please note the following regarding job attachments:</para>
            <list type="bullet">
            <item><description>The size limit of job attachments depends on the Documents.MaxSize setting in the file MaintenanceSettings.xml. By default, this is 20 MB.</description></item>
            <item><description>Deleting a job will remove all attachments of this job from the system. These cannot be recovered afterwards.</description></item>
            <item><description>Adding job attachments requires the Jobs > UI available and Jobs > Add/Edit user permissions.</description></item>
            <item><description>Job attachments are backed up with the backup option All documents located on this DMA.</description></item>
            <item><description>Job attachments are synced in a cluster.</description></item>
            </list>
            <para>Available from DataMiner 10.0.5 (RN 24791) onwards.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.GetJobAttachmentFileNames(Skyline.DataMiner.Net.Jobs.JobID)">
            <summary>
            Retrieves the names of the files attached to the job with ID <paramref name="jobID"/>.
            </summary>
            <param name="jobID">The ID of the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> to retrieve the attachment names for.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="jobID"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">
            <para>
            <see cref="P:System.Exception.InnerException"/> will be an <see cref="T:System.ArgumentException"/> if the job with <paramref name="jobID"/> could not be found.
            </para>
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerSecurityException">The user does not have read permissions on the specified job.</exception>
            <returns>
            The names of the attachments. An empty list if the <paramref name="jobID"/> does not have attachments.
            </returns>
            <remarks>
            <para>Please note the following regarding job attachments:</para>
            <list type="bullet">
            <item><description>The size limit of job attachments depends on the Documents.MaxSize setting in the file MaintenanceSettings.xml. By default, this is 20 MB.</description></item>
            <item><description>Deleting a job will remove all attachments of this job from the system. These cannot be recovered afterwards.</description></item>
            <item><description>Managing job attachments requires the Jobs > UI available and Jobs > Add/Edit user permissions.</description></item>
            <item><description>Job attachments are backed up with the backup option All documents located on this DMA.</description></item>
            <item><description>Job attachments are synced in a cluster.</description></item>
            </list>
            <para>Available from DataMiner 10.0.5 (RN 24791) onwards.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.DeleteJobAttachment(Skyline.DataMiner.Net.Jobs.JobID,System.String)">
            <summary>
            Deletes the attachment with name <paramref name="attachmentName"/> from the job with ID <paramref name="jobID"/>.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="jobID"/> or <paramref name="attachmentName"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">
            <para>
            <see cref="P:System.Exception.InnerException"/> will be an <see cref="T:System.ArgumentException"/> if the job could not be found.
            </para>
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerSecurityException">The user does not have edit permissions for the specified job.</exception>
            <param name="jobID">The ID of the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> to delete the attachment from.</param>
            <param name="attachmentName">The name of the attachment to delete.</param>
            <remarks>
            <para>Available from DataMiner 10.0.5 (RN 24791) onwards.</para>
            <para>This method does not throw an exception if an attachment with the given name could not be found for the job.</para>
            <para>Please note the following regarding job attachments:</para>
            <list type="bullet">
            <item><description>The size limit of job attachments depends on the Documents.MaxSize setting in the file MaintenanceSettings.xml. By default, this is 20 MB.</description></item>
            <item><description>Deleting a job will remove all attachments of this job from the system. These cannot be recovered afterwards.</description></item>
            <item><description>Deleting job attachments requires the Jobs > UI available and Jobs > Delete user permissions.</description></item>
            <item><description>Job attachments are backed up with the backup option All documents located on this DMA.</description></item>
            <item><description>Job attachments are synced in a cluster.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobCrudHelperComponent.GetJobAttachment(Skyline.DataMiner.Net.Jobs.JobID,System.String)">
            <summary>
            Gets the contents of the attachment with name <paramref name="attachmentName"/> for job with ID <paramref name="jobID"/>.
            </summary>
            <param name="jobID">The ID of the job to find the attachment for.</param>
            <param name="attachmentName">The name of the attachment to find.</param>
            <returns>The contents of the attachment.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="jobID"/> or <paramref name="attachmentName"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerCOMException">If the attachment could not be found.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">
            <para>
            The inner exception will be an <see cref="T:System.ArgumentException"/> if the Job could not be found.
            </para>
            </exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerSecurityException">The user does not have read permissions for the specified job.</exception>
            <remarks>
            <para>Please note the following regarding job attachments:</para>
            <list type="bullet">
            <item><description>The size limit of job attachments depends on the Documents.MaxSize setting in the file MaintenanceSettings.xml. By default, this is 20 MB.</description></item>
            <item><description>Deleting a job will remove all attachments of this job from the system. These cannot be recovered afterwards.</description></item>
            <item><description>Deleting job attachments requires the Jobs > UI available and Jobs > Delete user permissions.</description></item>
            <item><description>Job attachments are backed up with the backup option All documents located on this DMA.</description></item>
            <item><description>Job attachments are synced in a cluster.</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobTemplateCrudHelperComponent">
            <summary>
            Represents a job template CRUD helper component.
            </summary>
            <remarks>
            <para>Feature introduced in DataMiner 9.6.6 (RN 21380).</para>
            </remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.RecordCrudHelperComponent">
            <summary>
            Represents a record CRUD helper component.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.RecordDefinitionCrudHelperComponent">
            <summary>
            Represents a record template CRUD helper component.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobManagerHelper">
             <summary>
             Job manager helper class for the Jobs API.
             </summary>
             <example>
             <code>
             public static SectionDefinition CreateProductSectionDefinition(JobManagerHelper helper)
             {
            		// Creation of a job section "ProductSection" which will define that a job needs information about a product.
            		var productSectionDefinition = new CustomSectionDefinition()
            		{
            			Name = "ProductSection"
            		};
            
            		// The ProductSection gets two fields, a reference number and a description.
            		var referenceNumberField = new FieldDescriptor()
            		{
            			FieldType = typeof(long),
            			Name = "Product Reference",
            			// Optionally add validators here.
            		};
            		
            		var productDescriptionField = new FieldDescriptor()
            		{
            			FieldType = typeof(string),
            			Name = "Product Description"
            			// Optionally add validators here.
            		};
            		
            		productSectionDefinition.AddOrReplaceFieldDescriptor(referenceNumberField);
            		productSectionDefinition.AddOrReplaceFieldDescriptor(productDescriptionField);
            
            		// Save the job section to the server.
            		try
            		{
            			productSectionDefinition = helper.SectionDefinitions.Create(productSectionDefinition) as CustomSectionDefinition;
            		}
            		catch (CrudFailedException e)
            		{
            			// The operation failed, this can be handled with the information in the <see cref="P:Skyline.DataMiner.Net.ManagerStore.CrudFailedException.TraceData"/> of the exception.
            			return null;
            		}
            		
            		return productSectionDefinition;
             }
             
             public static void CreateOperatorSectionDefinition(JobManagerHelper helper)
             {
            		// Creation for a job section "OperatorSection" which will define that a job needs information about the operator that is responsible for the Job.
            		var operatorSectionDefinition = new CustomSectionDefinition()
            		{
            			Name = "OperatorSection",
            		};
            		
            		// The ProductSection one field, a list of operator names.
            		var operatorNameField = new FieldDescriptor()
            		{
            			FieldType = typeof(string),
            			Name = "OperatorName",
            			// Optionally add validators here.
            		};
            		
            		var operatorContactField = new FieldDescriptor()
            		{
            			FieldType = typeof(string),
            			Name = "PhoneNumber",
            			// Optionally add validators here.
            		};
            		
            		operatorSectionDefinition.AddOrReplaceFieldDescriptor(operatorNameField);
            		
            		// Save the job section to the server.
            		try
            		{
            			operatorSectionDefinition = helper.SectionDefinitions.Create(operatorSectionDefinition) as CustomSectionDefinition;
            		}
            		catch (CrudFailedException e)
            		{
            			// The operation failed, this can be handled with the information in the <see cref="P:Skyline.DataMiner.Net.ManagerStore.CrudFailedException.TraceData"/> of the exception.
            			Assert.Fail(e.ToString());
            		}
             }
             
             public static void CreateJobWithOperatorAndProductSection(JobManagerHelper helper)
             {
            		// First we get the sections and their field descriptors that we want to add to the job.
            		var productSectionDefinition = helper.SectionDefinitions.Read(SectionDefinitionExposers.Name.Equal("ProductSection")).FirstOrDefault();
            		var productReferenceField = productSectionDefinition.GetAllFieldDescriptors().First(d => d.Name.Contains("Reference"));
            		var productDescriptionField = productSectionDefinition.GetAllFieldDescriptors().First(d => d.Name.Contains("Description"));
            		var operatorSectionDefinition = helper.SectionDefinitions.Read(SectionDefinitionExposers.Name.Equal("OperatorSection")).FirstOrDefault();
            		var operatorNameField = operatorSectionDefinition.GetAllFieldDescriptors().First();
            		var operatorContactField = operatorSectionDefinition.GetAllFieldDescriptors().First();
            		
            		var job = new Job();
            		job.SetJobName("The general name of the job");
            		job.SetJobStartTime(DateTime.UtcNow);
            		job.SetJobEndTime(job.GetJobStartTime().Value.AddHours(2));
            		
            		// Add a section to the Job about the operator.
            		var operatorSection = new Section(operatorSectionDefinition);
            		
            		operatorSection.AddOrReplaceFieldValue(new FieldValue(operatorNameField)
            		{
            			Value = new ValueWrapper&lt;string&gt;("Bob Driver")
            		});
            		
            		operatorSection.AddOrReplaceFieldValue(new FieldValue(operatorContactField)
            		{
            			Value = new ValueWrapper&lt;string&gt;("+32400000000")
            		});
            		
            		job.Sections.Add(operatorSection);
            		
            		// Add a section to the Job about the product.
            		var productInfo = new Section(productSectionDefinition);
            		
            		productInfo.AddOrReplaceFieldValue(new FieldValue(productReferenceField)
            		{
            			Value = new ValueWrapper&lt;long&gt;(13248)
            		});
            		
            		productInfo.AddOrReplaceFieldValue(new FieldValue(productDescriptionField)
            		{
            			Value = new ValueWrapper&lt;string&gt;("Some extra comment that is relevant to the product"),
            		});
            		
            		job.Sections.Add(productInfo);
            		
            		// Save the job to the server.
            		try
            		{
            			job = helper.Jobs.Create(job);
            		}
            		catch (CrudFailedException e)
            		{
            			// The operation failed, this can be handled with the information in the <see cref="P:Skyline.DataMiner.Net.ManagerStore.CrudFailedException.TraceData"/> of the exception.
            			Assert.Fail(e.ToString());
            		}
             }
             </code>
             </example>s
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobManagerHelper.SectionDefinitions">
            <summary>
            Gets the section definitions.
            </summary>
            <value>The section definitions.</value>
            <remarks>
            <para>Make sure to adhere to the following restrictions:</para>
            <list type="bullet">
            <item>
            	<description>Create, Delete: The <see cref="T:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition"/> cannot ever be created or deleted, it always exists on a system.</description>
            </item>
            <item>
            	<description>Update: For <see cref="T:Skyline.DataMiner.Net.Sections.StaticSectionDefinition"/>s only the name of the section definition and the name of its field descriptors may be updated.</description>
            </item>
            <item>
            	<description>Delete: A <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> can only be deleted if no jobs are using it.</description>
            </item>
            <item>
            	<description>Update: No <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/>s can be removed from a <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> if any jobs are using it.</description>
            </item>
            <item>
            	<description>Update: The BookingElement in the <see cref="T:Skyline.DataMiner.Net.Sections.ReservationLinkInfo"/> cannot be changed if there are jobs using it. </description>
            </item>
            <item>
            	<description>
            		<para>Update: If jobs are using the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/>, the <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/>s can only be updated in a safe way:</para>
            		<list type="bullet">
            			<item>
            				<description>The <see cref="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.IsOptional"/> flag must stay the same.</description>
            			</item>
            			<item>
            				<description>The <see cref="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.FieldType"/> must stay the same.</description>
            			</item>
            			<item>
            				<description>The validators must stay the same.</description>
            			</item>
            			<item>
            				<description>(<see cref="T:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor"/>) The referenced <see cref="P:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.AutoIncrementerID"/> must stay the same.</description>
            			</item>
            			<item>
            				<description>(<see cref="T:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor"/>) The IDFormat must stay the same.</description>
            			</item>
            			<item>
            				<description>(<see cref="T:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor"/>) Only GenericEnum display &lt;-&gt;key pairs can be added, no pairs should be deleted. The IsHidden tag can be changed freely.</description>
            			</item>
            			<item>
            				<description>(<see cref="T:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor"/>) The referenced <see cref="P:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor.RecordDefinitionID"/> must stay the same.</description>
            			</item>
            			<item>
            				<description>The kind of <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> must stay the same (<see cref="T:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor"/>, <see cref="T:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor"/>, etc.).</description>
            			</item>
            		</list>
            	</description>
            </item>
            <item>
            	<description>Create, Update: The specific field value type in the descriptor must be a supported type by the kind of <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/>.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobManagerHelper.Jobs">
            <summary>
            Gets the Jobs.
            </summary>
            <value>The Jobs.</value>
            <remarks>
            <para>Make sure to adhere to the following restrictions:</para>
            <list type="bullet">
            <item>
            	<description>Create, Update: Every job must have exactly one <see cref="T:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition"/>.</description>
            </item>
            <item>
            	<description>Create, Update: All the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/>s used in the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> must exist.</description>
            </item>
            <item>
            	<description>Create, Update: Every <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/> must have a value type that matches with the value type of the corresponding <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/>.</description>
            </item>
            <item>
            	<description>Create, Update: Every <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> must have a <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/> in the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/>, unless the <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> has <see cref="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.IsOptional"/> set to <c>true</c>.</description>
            </item>
            <item>
            	<description>Create, Update: If there are <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/>s missing for any <see cref="T:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor"/>, then the next ID is retrieved using the AutoIncrementer API and the field value is added to the job.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobManagerHelper.Records">
            <summary>
            Gets the records.
            </summary>
            <value>The records.</value>
            <remarks>
            <para>Make sure to adhere to the following restrictions:</para>
            <list type="bullet">
            <item>
            	<description>Create, Update: Every <see cref="T:Skyline.DataMiner.Net.Records.RecordCellDefinition"/> in the <see cref="T:Skyline.DataMiner.Net.Records.RecordDefinition"/> must have a <see cref="T:Skyline.DataMiner.Net.Records.RecordCell"/> in the <see cref="T:Skyline.DataMiner.Net.Records.Record"/>.</description>
            </item>
            <item>
            	<description>Create, Update: Every value in the <see cref="T:Skyline.DataMiner.Net.Records.RecordCell"/> must match the <see cref="P:Skyline.DataMiner.Net.Records.RecordCellDefinition.CellType"/> specified in its <see cref="T:Skyline.DataMiner.Net.Records.RecordCellDefinition"/>.</description>
            </item>
            <item>
            	<description>Delete: The <see cref="T:Skyline.DataMiner.Net.Records.Record"/> may not be referenced in any <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/>s.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobManagerHelper.RecordDefinitions">
            <summary>
            Gets the record definitions.
            </summary>
            <value>The record definitions.</value>
            <remarks>
            <para>Make sure to adhere to the following restrictions:</para>
            <list type="bullet">
            <item>
            	<description><see cref="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.Create(`0)"/>, <see cref="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.Update(`0)"/>: The specified value types of each <see cref="T:Skyline.DataMiner.Net.Records.RecordCellDefinition"/> must be a supported type.</description>
            </item>
            <item>
            	<description><see cref="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.Delete(`0)"/>: There may not be any <see cref="T:Skyline.DataMiner.Net.Records.Record"/>s using the <see cref="T:Skyline.DataMiner.Net.Records.RecordDefinition"/>.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobManagerHelper.JobTemplates">
            <summary>
            Gets the job templates.
            </summary>
            <value>The job templates.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobManagerHelper.JobDomains">
            <summary>
            Gets the job domains.
            </summary>
            <value>The job domains.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobManagerHelper.#ctor(System.Func{Skyline.DataMiner.Net.Messages.DMSMessage[],Skyline.DataMiner.Net.Messages.DMSMessage[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobManagerHelper"/> class.
            </summary>
            <param name="messageHandler">The message handler.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="messageHandler"/> is <see langword="null" /></exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobManagerHelper.StitchJobs(System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.Job})">
            <summary>
            Stitches the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/>s to its <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> and <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> by retrieving those from the server.
            </summary>
            <param name="jobs">The Jobs to stitch.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobManagerHelper.StitchJobs(System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.Job},System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.SectionDefinition})">
            <summary>
            Stitches the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/>s to its <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> and <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> by using the specified <paramref name="existingSectionDefinitions"/>.
            </summary>
            <param name="jobs">The Jobs to stitch.</param>
            <param name="existingSectionDefinitions">The existing section definitions.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobManagerHelper.StitchJobs(System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.Job},System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.SectionDefinition},System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.JobDomain})">
            <summary>
            Stitches the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/>s to its  <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> and <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> by
            using the provided <paramref name="existingSectionDefinitions"/>.
            Also assigns the <see cref="T:Skyline.DataMiner.Net.Jobs.JobDomain"/>s using <paramref name="existingJobDomains"/>.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobManagerHelper.StitchJobsHelper(System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.Job},System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.SectionDefinition},System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.JobDomain})">
            <summary>
            Stitches the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/>s to its  <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> and <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> by
            using the provided <paramref name="existingSectionDefinitions"/>.
            Also assigns the <see cref="T:Skyline.DataMiner.Net.Jobs.JobDomain"/>s using <paramref name="existingJobDomains"/>.
            </summary>
            <param name="jobs">The Jobs that need to be stitched</param>
            <param name="existingSectionDefinitions">A list of SectionDefinitions that will be used for stitching the Sections</param>
            <param name="existingJobDomains">A list of JobDomains that will be used to assign the JobDomains</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobManagerHelperExtensions">
            <summary>
            Defines Job Manager helper extensions.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobManagerHelperExtensions.StitchJob(Skyline.DataMiner.Net.Jobs.JobManagerHelper,Skyline.DataMiner.Net.Jobs.Job)">
            <summary>
            Stitches the specified Job.
            </summary>
            <param name="helper">The <see cref="T:Skyline.DataMiner.Net.Jobs.JobManagerHelper"/> instance.</param>
            <param name="job">The Job to stitch.</param>
            <remarks>
            <see cref="M:Skyline.DataMiner.Net.Jobs.JobManagerHelper.StitchJobs(System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.Job})"/>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobManagerHelperExtensions.StitchJob(Skyline.DataMiner.Net.Jobs.JobManagerHelper,Skyline.DataMiner.Net.Jobs.Job,System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.SectionDefinition})">
            <summary>
            Stitches the specified Job using the specified existing section definitions.
            </summary>
            <param name="helper">The <see cref="T:Skyline.DataMiner.Net.Jobs.JobManagerHelper"/> instance.</param>
            <param name="job">The Job to stitch.</param>
            <param name="existingSectionDefinitions">The existing section definitions.</param>
            <remarks>
            <see cref="M:Skyline.DataMiner.Net.Jobs.JobManagerHelper.StitchJobs(System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.Job},System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.SectionDefinition})"/>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobManagerHelperExtensions.StitchJob(Skyline.DataMiner.Net.Jobs.JobManagerHelper,Skyline.DataMiner.Net.Jobs.Job,System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.SectionDefinition},System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.JobDomain})">
            <summary>
            Stitches the specified Job using the specified existing section definitions and job domains.
            </summary>
            <param name="helper">The <see cref="T:Skyline.DataMiner.Net.Jobs.JobManagerHelper"/> instance.</param>
            <param name="job">The Job to stitch.</param>
            <param name="existingSectionDefinitions">The existing section definitions.</param>
            <param name="existingJobDomains">The existing job domains.</param>
            <remarks>
            <see cref="M:Skyline.DataMiner.Net.Jobs.JobManagerHelper.StitchJobs(System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.Job},System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.SectionDefinition},System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.JobDomain})"/>
            </remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.Job">
            <summary>
            Represents a job.
            </summary>
            <remarks>
            <para>A job consists of a number of sections and each section in turn consists of a number of FieldValues.</para>
            <para>A job may contain multiple sections with the same <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/>.</para>
            <para>The following diagram gives an overview of the different classes in the Jobs API:</para>
            <img src="~/develop/images/JobMVP.png" />
            </remarks>
            <example>
            <code>
            JobManagerHelper jobManagerHelper = new JobManagerHelper(msg => protocol.SLNet.RawConnection.HandleMessages(msg));
            
            var sectionDefinition = jobManagerHelper.SectionDefinitions.Read(SectionDefinitionExposers.Name.Equal("MyCustomSectionDefinition")).FirstOrDefault() as CustomSectionDefinition;
            var fieldDescriptor = sectionDefinition.GetAllFieldDescriptors().FirstOrDefault(x => x.Name == "MyStringField");
            
            var startTime = DateTime.UtcNow;
            var endTime = startTime.AddHours(10);
            
            Job job = new Job();
            job.SetJobName("MyJob");
            job.SetJobStartTime(startTime);
            job.SetJobEndTime(endTime);
            
            // Add a section to the Job.
            var section = new Section(sectionDefinition);
            section.AddOrUpdateValue(fieldDescriptor, "My field value.");
            
            job.Sections.Add(section);
            
            jobManagerHelper.Jobs.Create(job);
            </code>
            </example>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.Job.ID">
            <summary>
            Gets or sets the job ID.
            </summary>
            <value>The job ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.Job.Sections">
            <summary>
            Gets the sections of this job.
            </summary>
            <value>The sections of this job.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.Job.SecurityViewID">
            <summary>
            Gets or sets the security view ID. Available from DataMiner 10.0.5 (RN 24800) onwards.
            </summary>
            <value>The security view ID.</value>
            <remarks>
            <para>This property is considered obsolete from DataMiner 10.1.1 (RN 28311) onwards. Use the SecurityViewIDs property instead.</para>
            <para>If, for a particular job or booking instance (i.e. ReservationInstance), this property contains a view ID, then the job or booking instance will only be accessible to users who have access to the specified view.</para>
            <list type="bullet">
            <item><description>Users who display a list of jobs or booking instances will only see the jobs or booking instances associated with a view to which they have read access.</description></item>
            <item><description>Users who try to create, update or delete a job or a booking instance will only be able to do so if they have write access to the view associated with that job or booking instance.</description></item>
            <item><description>Users who try to create, update or delete a job or a booking instance will only be able to do so if they have write access to the view associated with that job or booking instance.</description></item>
            <item><description>When scheduling checks are performed, the booking instances to which a user does not have access will still be taken into account.</description></item>
            </list>
            <para>Every booking instance (i.e. ReservationInstance) within the same tree must have the same SecurityViewID.</para>
            <para>If a view specified in the SecurityViewID property of a job or booking instance is deleted, only Administrators or users with access to all views will have access to that job or booking instance.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.Job.SecurityViewIDs">
            <summary>
            Gets or sets the security view IDs. Available from DataMiner 10.1.1 (RN 28311) onwards.
            </summary>
            <value>The security view IDs.</value>
            <remarks>
            <list type="bullet">
            <item><description>If, for a particular job or booking instance (i.e. ReservationInstance), this property contains view IDs, then the job or booking instance will only be accessible to users who have access to at least one of the specified views. For example, if you have access to the view with ID 10, and you display a list of jobs or booking instances, it will only contain the jobs or booking instances of which the list of values in the SecurityViewIDs property includes "10" or no IDs at all.</description></item>
            <item><description>The values in this property can be filtered using a “Contains” filter. Example: JobExposers.SecurityViewIDs.Contains(136).</description></item>
            <item><description>This property renders the <see cref="P:Skyline.DataMiner.Net.Jobs.Job.SecurityViewID"/> property obsolete.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.Job.JobDomainID">
            <summary>
            Gets or sets the Job domain ID.
            </summary>
            <value>The Job domain ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.Job.WasStitched">
            <summary>
            Gets a value indicating whether this job was stitched.
            </summary>
            <value><c>true</c> if this job was stitched; otherwise <c>false</c>.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.Stitch(System.Func{Skyline.DataMiner.Net.Sections.SectionDefinitionID,Skyline.DataMiner.Net.Sections.SectionDefinition})">
            <summary>
            Stitches this job with the specified section definition provider.
            </summary>
            <param name="sectionDefinitionProvider">The section definition provider to stitch this job with.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.Stitch(System.Func{Skyline.DataMiner.Net.Sections.SectionDefinitionID,Skyline.DataMiner.Net.Sections.SectionDefinition},System.Func{Skyline.DataMiner.Net.Jobs.JobDomainID,Skyline.DataMiner.Net.Jobs.JobDomain})">
            <summary>
            Stitches this job with the specified section definition provider and job domain provider.
            </summary>
            <param name="sectionDefinitionProvider">The section definition provider to stitch this job with.</param>
            <param name="jobDomainProvider">The job domain provider.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.GetJobDomain">
            <summary>
            Returns the JobDomain when the Job has been stitched
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.ToFilter``1">
            <summary>
            Converts this job to an ID-based filter of the specified type.
            </summary>
            <typeparam name="T">The filter element type.</typeparam>
            <returns>The created filter element of the specified type.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.AsJsonSerializableDictionary">
            <summary>
            Returns this job as a JSON serializable dictionary.
            </summary>
            <returns>The JSON serializable dictionary representation of this job.</returns>
            <remarks>
            <para>Converts all the fields to a JSONSerializableDictionary. These are mapped as follows: FieldDescriptor GUID -> List of value objects. In case there are multiple FieldValues for the same FieldDescriptor, these are merged as a list value.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.GetSecurityViewIds">
            <summary>
            Gets the security view IDs.
            </summary>
            <returns>The security view IDs.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.ToJson">
            <summary>
            Retrieves the JSON representation of this object.
            </summary>
            <returns>The JSON representation of this object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.FromJson(System.String)">
            <summary>
            Deserializes the specified JSON string into a new instance of this class.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>The deserialized object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="json"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> class using the specified serialization info and streaming context.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.Equals(Skyline.DataMiner.Net.Jobs.Job)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.Job.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobError">
            <summary>
            Represents a job error.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobError.Reason.JobSectionInvalidFieldValueTypes">
            <summary>
            Attempted to create or updated a <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.Job"/> with a <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.FieldValue"/> that does not match the type of its <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.FieldDescriptor"/>.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobError.Reason.JobRequiresOneDefaultJobSection">
            <summary>
            The given <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.Job"/> did not contain exactly one <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.Section"/> for the <see cref="T:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition"/>.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobError.Reason.JobDoesNotContainAllRequiredFieldsForSectionDefinition">
            <summary>
            The given <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.Job"/> had a <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.Section"/> which did not contain a <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.FieldValue"/>.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobError.Reason.NotAllowed">
            <summary>
            You are not allowed to do the create, update or delete operation because of the <see cref="P:Skyline.DataMiner.Net.Jobs.Job.SecurityViewIDs"/> configured on the job.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobError.Reason.JobRequiresValidJobDomain">
            <summary>
            The <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.Job"/> has no valid and/or existing JobDomainID configured.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobError.Reason.SectionsUsedInJobDoesNotMatchRequirementsOfJobDomain">
            <summary>
            The Job does not contain at least one Section for each SectionDefinition defined on the <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.JobDomain"/>
            or contains Sections for SectionDefinitions that are not defined on that domain.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobError.Reason.SectionUsedInJobLinksToNonExistingSectionDefinition">
            <summary>
            The <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.Job"/> contains a <see cref="P:Skyline.DataMiner.Net.Jobs.JobError.Section"/> that does not refer to an existing <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/>.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobError.ErrorReason">
            <summary>
            Gets or sets the error reason.
            </summary>
            <value>The error reason.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobError.Job">
            <summary>
            Gets or sets the job this error relates to.
            </summary>
            <value>The job this error relates to.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobError.Section">
            <summary>
            Gets or sets the section this error relates to.
            </summary>
            <value>The section this error relates to.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobError.FieldDescriptor">
            <summary>
            Gets or sets the field descriptor this error relates to.
            </summary>
            <value>The field descriptor this error relates to.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobError.FieldValue">
            <summary>
            Gets or sets the field value this error relates to.
            </summary>
            <value>The field value this error relates to.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobError.JobDomain">
            <summary>
            Gets or sets the job domain.
            </summary>
            <value>The job domain.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobError.MissingSections">
            <summary>
            Gets or sets the missing sections.
            </summary>
            <value>The missing sections.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobError.InvalidSections">
            <summary>
            Gets or sets the invalid sections.
            </summary>
            <value>The invalid sections.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobError.#ctor(Skyline.DataMiner.Net.Jobs.JobError.Reason,Skyline.DataMiner.Net.Jobs.Job,Skyline.DataMiner.Net.Jobs.JobDomain,System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.SectionDefinitionID},System.Collections.Generic.List{Skyline.DataMiner.Net.Sections.SectionDefinitionID})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobError"/> class using the specified error reason, job, job domain, missing sections and invalid sections.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="job">The job.</param>
            <param name="jobDomain">The job domain.</param>
            <param name="missingSections">The missing sections.</param>
            <param name="invalidSections">The invalid sections.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobError.#ctor(Skyline.DataMiner.Net.Jobs.JobError.Reason,Skyline.DataMiner.Net.Jobs.Job,Skyline.DataMiner.Net.Sections.Section,Skyline.DataMiner.Net.Sections.FieldDescriptor,Skyline.DataMiner.Net.Sections.FieldValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobError"/> class using the specified error reason, Job section, field descriptor and field value.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="job">The job.</param>
            <param name="section">The section.</param>
            <param name="fieldDescriptor">The field descriptor.</param>
            <param name="fieldValue">The field value.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobError.#ctor(Skyline.DataMiner.Net.Jobs.JobError.Reason,Skyline.DataMiner.Net.Jobs.Job,Skyline.DataMiner.Net.Sections.Section,Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobError"/> class using the specified error reason and Job, Job section and field descriptor.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="job">The job.</param>
            <param name="section">The job section.</param>
            <param name="fieldDescriptor">The field descriptor.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobError.#ctor(Skyline.DataMiner.Net.Jobs.JobError.Reason,Skyline.DataMiner.Net.Jobs.Job)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobError"/> class using the specified error reason and Job.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="job">The job.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobError.#ctor(Skyline.DataMiner.Net.Jobs.JobError.Reason)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobError"/> class using the specified error reason.
            </summary>
            <param name="errorReason">The error reason.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobError"/> class.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobExposers">
            <summary>
            Defines job exposers that can be used to create job filters.
            </summary>
            <example>
            <code>
            var jmHelper = new JobManagerHelper(engine.SendSLNetMessages);
            
            var templates = jmHelper.JobTemplates.Read(JobTemplateExposers.Name.Equal("MyJobTemplate"));
            </code>
            </example>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobExposers.ID">
            <summary>
            Exposes the <see cref="P:Skyline.DataMiner.Net.Jobs.JobTemplate.ID"/> property of the <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobExposers.SectionDefinitionIDs">
            <summary>
            Exposes the section definition IDs.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobExposers.SectionIDs">
            <summary>
            Exposes the section IDs.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobExposers.FieldValues">
            <summary>
            Exposes the field values.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobExposers.SecurityViewID">
            <summary>
            Exposes the security view ID.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobExposers.SecurityViewIDs">
            <summary>
            Exposes the security view IDs.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobExposers.JobDomainID">
            <summary>
            Exposes the job domain ID.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobExposers.FullObject">
            <summary>
            Exposes the full object.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobExposers.TableName">
            <summary>
            The table name.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposers.CreateFullTableDefinition">
            <summary>
            Creates a full table definition.
            </summary>
            <returns>The full table definition.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposers.CreateFullTableDefinition(System.String)">
            <summary>
            Creates a full table definition with the specified name.
            </summary>
            <returns>The full table definition.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposers.Initialize">
            <summary>
            Initializes all static fields.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobExposerExtensions">
            <summary>
            Defines job exposer extensions.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.Equal(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{Skyline.DataMiner.Net.Jobs.Job,System.Guid},Skyline.DataMiner.Net.Jobs.JobID)">
            <summary>
            Retrieves the filter for checking for job ID equality.
            </summary>
            <param name="idExposer">The ID exposer.</param>
            <param name="id">Type: Skyline.DataMiner.Net.Jobs.JobID</param>
            <returns>The filter.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobField``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},System.String)">
            <summary>
            Exposes the field with the specified field descriptor ID.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The fields exposer.</param>
            <param name="fieldSubName">The field name.</param>
            <returns>The exposed field.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobField``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},Skyline.DataMiner.Net.Sections.FieldDescriptorID)">
            <summary>
            Exposes the field with the specified field descriptor ID.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The fields exposer.</param>
            <param name="fieldDescriptorId">The field descriptor ID.</param>
            <returns>The exposed field.</returns>
            <example>
            <para>The following example finds the jobs that match the specified job name.</para>
            <code>
            var jobNameFieldId = DefaultJobSectionDefinition.NameFieldDescriptorID;
            var jobsMatchingName = helper.Jobs.Read(JobExposers.FieldValues.JobField(jobNameFieldId).Equal("SomeJobNameToMatchOn"));
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobField``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Exposes the field with the specified field descriptor.
            </summary>
            <typeparam name="T">The type for which fields are exposed.</typeparam>
            <param name="field">The field exposer.</param>
            <param name="fieldDescriptor">The field descriptor.</param>
            <returns>The exposed field.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobStartLessThan``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},System.DateTime)">
            <summary>
            Returns a filter that filters jobs keeping only those that have a start time less than the specified <see cref="T:System.DateTime"/> value.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The field exposer.</param>
            <param name="time">The <see cref="T:System.DateTime"/> value that the start time field of the default section definition of the Job must be lower than.</param>
            <returns>A filter that filters jobs keeping only those that have a start time less than the specified <see cref="T:System.DateTime"/> value.</returns>
            <example>
            <code>
            Job retrievedJob = jobManagerHelper.Jobs.Read(JobExposers.FieldValues.JobStartLessThan(DateTime.Now)).FirstOrDefault();
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobStartLessThanOrEqual``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},System.DateTime)">
            <summary>
            Returns a filter that filters jobs keeping only those that have a start time less than or equal to the specified <see cref="T:System.DateTime"/> value.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The field exposer.</param>
            <param name="time">The <see cref="T:System.DateTime"/> value that the start time field of the default section definition of the Job must be lower than or equal to.</param>
            <returns>A filter that filters jobs keeping only those that have a start time less than or equal to the specified <see cref="T:System.DateTime"/> value.</returns>
            <example>
            <code>
            Job retrievedJob = jobManagerHelper.Jobs.Read(JobExposers.FieldValues.JobStartLessThanOrEqual(DateTime.Now)).FirstOrDefault();
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobStartGreaterThan``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},System.DateTime)">
            <summary>
            Returns a filter that filters jobs keeping only those that have a start time greater than the specified <see cref="T:System.DateTime"/> value.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The field exposer.</param>
            <param name="time">The <see cref="T:System.DateTime"/> value that the start time field of the default section definition of the job must be greater than.</param>
            <returns>A filter that filters jobs keeping only those that have a start time greater than the specified <see cref="T:System.DateTime"/> value.</returns>
            <example>
            <code>
            Job retrievedJob = jobManagerHelper.Jobs.Read(JobExposers.FieldValues.JobStartGreaterThan(DateTime.Now)).FirstOrDefault();
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobStartGreaterThanOrEqual``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},System.DateTime)">
            <summary>
            Returns a filter that filters jobs keeping only those that have a start time greater than or equal to the specified <see cref="T:System.DateTime"/> value.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The field exposer.</param>
            <param name="time">The <see cref="T:System.DateTime"/> value that the start time field of the default section definition of the job must be greater than or equal to.</param>
            <returns>A filter that filters jobs keeping only those that have a start time greater than or equal to the specified <see cref="T:System.DateTime"/> value.</returns>
            <example>
            <code>
            Job retrievedJob = jobManagerHelper.Jobs.Read(JobExposers.FieldValues.JobStartGreaterThanOrEqual(DateTime.Now)).FirstOrDefault();
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobEndLessThan``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},System.DateTime)">
            <summary>
            Returns a filter that filters jobs keeping only those that have an end time less than the specified <see cref="T:System.DateTime"/> value.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The field exposer.</param>
            <param name="time">The <see cref="T:System.DateTime"/> value that the end time field of the default section definition of the job must be lower than.</param>
            <returns>A filter that filters jobs keeping only those that have an end time less than the specified <see cref="T:System.DateTime"/> value.</returns>
            <example>
            <code>
            Job retrievedJob = jobManagerHelper.Jobs.Read(JobExposers.FieldValues.JobEndLessThan(DateTime.Now)).FirstOrDefault();
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobEndLessThanOrEqual``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},System.DateTime)">
            <summary>
            Returns a filter that filters jobs keeping only those that have an end time less than or equal to the specified <see cref="T:System.DateTime"/> value.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The field exposer.</param>
            <param name="time">The <see cref="T:System.DateTime"/> value that the end time field of the default section definition of the job must be lower than or equal to.</param>
            <returns>A filter that filters jobs keeping only those that have a end time less than or equal to the specified <see cref="T:System.DateTime"/> value.</returns>
            <example>
            <code>
            Job retrievedJob = jobManagerHelper.Jobs.Read(JobExposers.FieldValues.JobEndLessThanOrEqual(DateTime.Now)).FirstOrDefault();
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobEndGreaterThan``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},System.DateTime)">
            <summary>
            Returns a filter that filters jobs keeping only those that have an end time greater than the specified <see cref="T:System.DateTime"/> value.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The field exposer.</param>
            <param name="time">The <see cref="T:System.DateTime"/> value that the end time field of the default section definition of the job must be greater than.</param>
            <returns>A filter that filters jobs keeping only those that have an end time greater than the specified <see cref="T:System.DateTime"/> value.</returns>
            <example>
            <code>
            Job retrievedJob = jobManagerHelper.Jobs.Read(JobExposers.FieldValues.JobEndGreaterThan(DateTime.Now)).FirstOrDefault();
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobExposerExtensions.JobEndGreaterThanOrEqual``1(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{``0,System.Collections.Generic.IDictionary{System.String,System.Object}},System.DateTime)">
            <summary>
            Returns a filter that filters jobs keeping only those that have an end time greater than or equal to the specified <see cref="T:System.DateTime"/> value.
            </summary>
            <typeparam name="T">The type from which fields are exposed.</typeparam>
            <param name="field">The field exposer.</param>
            <param name="time">The <see cref="T:System.DateTime"/> value that the end time field of the default section definition of the job must be greater than or equal to.</param>
            <returns>A filter that filters jobs keeping only those that have an end time greater than or equal to the specified <see cref="T:System.DateTime"/> value.</returns>
            <example>
            <code>
            Job retrievedJob = jobManagerHelper.Jobs.Read(JobExposers.FieldValues.JobEndGreaterThanOrEqual(DateTime.Now)).FirstOrDefault();
            </code>
            </example>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobID">
            <summary>
            Represents a <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobID.Id">
            <summary>
            Gets the GUID.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobID.#ctor">
             <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobID"/> class.
             </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobID.#ctor(System.Guid)">
             <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobID"/> class using the specified GUID.
             </summary>
             <param name="id">The job ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobID.Build(Skyline.DataMiner.Net.Ownership.SimpleByteReader)">
            <summary>
            Creates a new <see cref="T:Skyline.DataMiner.Net.Jobs.JobID"/> instance from the specified <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/>.
            </summary>
            <param name="reader">The <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/> instance.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Jobs.JobID"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string that represents the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
            <remarks>The resulting string is formatted as follows: "JobID_[GUID]", where [GUID] represents the value of the <see cref="P:Skyline.DataMiner.Net.Jobs.JobID.Id"/> property.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobID.ToAttachmentString">
            <summary>
            Returns the attachment string.
            </summary>
            <returns>The attachment string..</returns>
            <remarks>The resulting string is formatted as follows: "[Id]", where [Id] represents the value of the <see cref="P:Skyline.DataMiner.Net.Jobs.JobID.Id"/> property.</remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobSuggestion">
            <summary>
            Represents a job suggestion.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobSuggestion.MatchedField">
            <summary>
            Gets or sets the matched field.
            </summary>
            <value>The matched field.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobSuggestion.MatchedValue">
            <summary>
            Gets or sets the matched value.
            </summary>
            <value>The matched value.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobSuggestion.Score">
            <summary>
            Gets or sets the score.
            </summary>
            <value>The score.</value>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobTemplate">
            <summary>
            Represents a job template.
            </summary>
            <remarks>
            <para>An existing job can be saved as a job template. This job template can then be applied on other jobs.</para>
            <para>This is done using the ApplyTo(Job) method. This will override all the existing data in the specified job with the data from the template.</para>
            <para>Feature introduced in DataMiner 9.6.6 (RN 21380).</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobTemplate.ID">
            <summary>
            Gets or sets the job template ID.
            </summary>
            <value>The job template ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobTemplate.Skyline#DataMiner#Net#ManagerStore#ITrackLastModified#LastModified">
            <summary>
            Gets or sets the last modification time.
            </summary>
            <value>The last modification time.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobTemplate.Name">
            <summary>
            Gets or sets the job template name.
            </summary>
            <value>The job template name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobTemplate.TemplateData">
            <summary>
            Gets or sets the job template data.
            </summary>
            <value>The job template data.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobTemplate"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplate.ToFilter``1">
            <summary>
            Converts this job template to an ID-based filter of the specified type.
            </summary>
            <typeparam name="T">The filter element type.</typeparam>
            <returns>The created filter element of the specified type.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplate.ToJson">
            <summary>
            Retrieves the JSON representation of this object.
            </summary>
            <returns>The JSON representation of this object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplate.FromJson(System.String)">
            <summary>
            Deserializes the specified JSON string into a new instance of this class.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>The deserialized object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="json"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplate.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplate.Equals(Skyline.DataMiner.Net.Jobs.JobTemplate)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplate.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplate.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplate.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobTemplateExposers">
            <summary>
            Defines job template exposers.
            </summary>
            <remarks>
            <para>Feature introduced in DataMiner 9.6.6 (RN 21380).</para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobTemplateExposers.ID">
            <summary>
            Exposes the <see cref="P:Skyline.DataMiner.Net.Jobs.JobTemplate.ID"/> property of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobTemplate"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobTemplateExposers.Name">
            <summary>
            Exposes the <see cref="P:Skyline.DataMiner.Net.Jobs.JobTemplate.Name"/> property of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobTemplate"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.JobTemplateExposers.FullObject">
            <summary>
            Exposes the full object.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplateExposers.CreateFullTableDefinition">
            <summary>
            Creates a full table definition.
            </summary>
            <returns>The full table definition.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplateExposers.Initialize">
            <summary>
            Initializes all static fields.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobTemplateExposerExtensions">
            <summary>
            Defines extension methods on Exposer.
            </summary>
            <remarks>Feature introduced in DataMiner 9.6.6 (RN 21380).</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplateExposerExtensions.Equal(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{Skyline.DataMiner.Net.Jobs.JobTemplate,System.Guid},Skyline.DataMiner.Net.Jobs.JobTemplateID)">
            <summary>
            Allows filtering on ID without having to use ID.Id
            </summary>
            <param name="idExposer">ID exposer.</param>
            <param name="id">The ID.</param>
            <returns>The ID filter.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.JobTemplateID">
            <summary>
            Represents a job template ID.
            </summary>
            <remarks>
            <para>Feature introduced in DataMiner 9.6.6 (RN 21380).</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.JobTemplateID.Id">
            <summary>
            Gets the job template ID.
            </summary>
            <value>The job template ID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplateID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobTemplateID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplateID.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.JobTemplateID"/> class using the specified Job template ID.
            </summary>
            <param name="id">The Job template ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplateID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplateID.Build(Skyline.DataMiner.Net.Ownership.SimpleByteReader)">
            <summary>
            Builds a <see cref="T:Skyline.DataMiner.Net.Jobs.JobTemplateID"/> instance out of the specified <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/>.
            </summary>
            <param name="reader">The reader to build the instance from.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Jobs.JobTemplateID"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.JobTemplateID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string that represents the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Jobs.RecordDefinitionError">
            <summary>
            Represents a record definition error.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.Reason.RecordDefinitionTypeNotSupported">
            <summary>
            Record definition type not supported.
            </summary>
            <remarks>
            While creating or updating a <see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordDefinition"/>, not all the types specified in the <see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordCellDefinition"/> are supported.
            <para><see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordDefinition"/> contains the invalid record definition</para>
            <para><see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordCellDefinition"/> contains the invalid record cell definition</para>
            <para><see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.InvalidType"/> contains the invalid type</para>
            <para><see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.SupportedTypes"/> contains the supported types type</para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.Reason.RecordDefintionHasRecords">
            <summary>
            Record definition has records.
            </summary>
            <remarks>
            While updating or deleting a <see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordDefinition"/>, the given <see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordDefinition"/> has exising <see cref="T:Skyline.DataMiner.Net.Records.Record"/>s, which block the operation.
            <para><see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordDefinition"/> contains the reoord definition</para>
            <para><see cref="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordIDs"/> contains the record ids</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.ErrorReason">
            <summary>
            Gets or sets the error reason.
            </summary>
            <value>The error reason.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordDefinition">
            <summary>
            Gets or sets the record definition this error relates to.
            </summary>
            <value>The record definition this error relates to.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordCellDefinition">
            <summary>
            Gets or sets the record cell definition this error relates to.
            </summary>
            <value>The record cell definition this error relates to.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.InvalidType">
            <summary>
            Gets or sets the invalid type.
            </summary>
            <value>The invalid type.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.SupportedTypes">
            <summary>
            Gets or sets the supported types.
            </summary>
            <value>The supported types.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.RecordIDs">
            <summary>
            Gets or sets the record IDs.
            </summary>
            <value>The record IDs.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.RecordDefinitionError"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.#ctor(Skyline.DataMiner.Net.Jobs.RecordDefinitionError.Reason,Skyline.DataMiner.Net.Records.RecordDefinition,System.Collections.Generic.List{Skyline.DataMiner.Net.Records.RecordID})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.RecordDefinitionError"/> class using the specified error reason, record definition and record IDs.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="recordDefinition">The record definition.</param>
            <param name="recordIDs">The record IDs.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.#ctor(Skyline.DataMiner.Net.Jobs.RecordDefinitionError.Reason,Skyline.DataMiner.Net.Records.RecordDefinition,Skyline.DataMiner.Net.Records.RecordCellDefinition,System.Type,System.Collections.Generic.List{System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Jobs.RecordDefinitionError"/> class using the specified error reason, record definition and record IDs.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="recordDefinition">The record definition.</param>
            <param name="recordCellDefinition">The record cell definition.</param>
            <param name="invalidType">The invalid type.</param>
            <param name="supportedTypes">The supported types.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Jobs.RecordDefinitionError.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.LogHelpers.ILogEntryCrudHelperComponent">
            <summary>
            Log entry CRUD helper component interface.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogEntryCrudHelperComponent.RawRepository">
            <summary>
            Gets the raw repository.
            </summary>
            <value>The raw repository.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogEntryCrudHelperComponent.RawSearchableRepository">
            <summary>
            Gets the raw searchable repository.
            </summary>
            <value>The raw searchable repository.</value>
        </member>
        <member name="T:Skyline.DataMiner.Net.LogHelpers.ILogHelper">
             <summary>
             Helper interface for logger in Elasticsearch.
             </summary>
             <remarks>Available from DataMiner 10.0.10 onwards (RN 26434).</remarks>
             <example>
             <code>
            	public class Script
            {
                    private ILogHelper _log;
                    private Engine _engine;
                    private ResourceManagerHelper _rmHelper;
            
                    public void Run(Engine engine)
                   {
                       _engine = engine;
                        _rmHelper = new ResourceManagerHelper();
                       _rmHelper.RequestResponseEvent += (sender, args) => args.responseMessage = _engine.SendSLNetSingleResponseMessage(args.requestMessage);
            
                       // This call retrieves a connection object for the user running the script.
                       // This ensures the lines are logged under the correct user.
                       IConnection userConnection = engine.GetUserConnection();
            
                       // In a QAction, you can use the GetUserConnection() from the SLProtocol interface.
                       // Create the log helper. Make sure it is always disposed!
                       using (_log = LogHelper.Create(userConnection, "SRM"))
                       {
                           // This is logged under Category "Scripting.SRM" on LogLevel.Info.
                           _log.Log.Info($"Starting booking validation.");
            
                           Guid reservationId = Guid.NewGuid();
                           ValidateBooking(reservationId);
            
                           // Log lines are not instantly readable.
                           _engine.Sleep(5000);
            
                           ExampleReadLogLines(reservationId);
                       }
                   }
            
                   private void ValidateBooking(Guid reservationId)
                   {
                        // The logger will now log under category "Scripting.ReservationInstanceID_c79d0529-6744-4fff-b102-2c62c9d30ebf"
                       _log.ChangeSubjectId(new ReservationInstanceID(reservationId));
            
                       // By default, the log helper will only log Info and above (Info, Warning, Error, Fatal).
                       // If needed, this can be changed. See examples below:
                       // This enables logging for all levels, except for Trace (Debug, Info, Warning, Error, Fatal):
                       // _log.ChangeLogLevel(LogLevel.Debug);
            
                       // This disables logging for all levels, except for Error and Fatal (Trace, Debug, Info)
                       // _log.ChangeLogLevel(LogLevel.Error);
                       _log.Log.Trace($"Starting Get Reservation Instance");
            
                       ReservationInstance reservation = _rmHelper.GetReservationInstance(reservationId);
            
                       _log.Log.Trace($"Ended Get Reservation Instance");
            
                       if (reservation == null)
                       {
                           _log.Log.Error($"Could not find the reservation instance.");
                       }
                       else
                       {
                           // By default the log level is "Info" which means this Debug logging will not be stored in the database
                           _log.Log.Debug("Retrieved with name {0} and with status {1}", reservation.Name, reservation.Status);
                       }
                   }
            
                   private void ExampleReadLogLines(Guid reservationId)
                   {
                       ReservationInstanceID resId = new ReservationInstanceID(reservationId);
            
                       // Get all logs for a specific reservation.
                       // Reading using implicit paging:
            
                       List&lt;LogEntry&gt; logs = _log.LogEntries.Read(LogEntry.Exposers.Name.Equal(resId.ToFileFriendlyString()).ToQuery());
            
                       foreach (LogEntry log in logs)
                       {
                            // Outputs: "(Implicit Paging) Found log: Could not find the reservation instance. at 6/23/2020 2:02:39 PM +02:00 by SKYLINE2\SvenDD on 668 for ReservationInstanceID_fa3317a7-e7be-4b95-9ae2-56e407c55d2d within Scripting"
                           _engine.GenerateInformation($"(Implicit Paging) Found log: {log.Message} at {log.TimeStamp} by {log.UserName} on {log.DataMinerId} for {log.Name} within {log.Category}");
                       }
            
                       // Reading using explicit paging
                       PagingHelper&lt;LogEntry&gt; pagingHelper =
                       _log.LogEntries.PreparePaging(LogEntry.Exposers.Name.Equal(resId.ToFileFriendlyString()).ToQuery(), 100);
            
                       while (pagingHelper.MoveToNextPage())
                       {
                           List&lt;LogEntry&gt; currentPage = pagingHelper.GetCurrentPage();
                           foreach (LogEntry log in currentPage)
                           {
                               // Outputs: "(Explicit Paged) Found log: Could not find the reservation instance. at 6/23/2020 2:02:39 PM +02:00 by SKYLINE2\SvenDD on 668 for ReservationInstanceID_fa3317a7-e7be-4b95-9ae2-56e407c55d2d within Scripting"
                               _engine.GenerateInformation($"(Explicit Paged) Found log: {log.Message} at {log.TimeStamp} by {log.UserName} on {log.DataMinerId} for {log.Name} within {log.Category}");
                           }
                       }
            
                       // Or reading using the Repository API
                       // Use IDataSetRepository&lt;LogEntry&gt; repository = _log.LogEntries.RawRepository;
                       // Getting all logs from today ordered by time
                       DateTimeOffset now = DateTimeOffset.UtcNow;
            
                       DateTimeOffset midNight = new DateTimeOffset(now.Year, now.Month, now.Day, 0, 0, 0, TimeSpan.Zero);
            
                       IQuery&lt;LogEntry&gt; filter = LogEntry.Exposers.Category.Equal(_log.Category.ToString())
                       .AND(LogEntry.Exposers.TimeStamp.GreaterThanOrEqual(midNight)).ToQuery()
                       .OrderBy(LogEntry.Exposers.TimeStamp);
             
                       List&lt;LogEntry&gt; scriptingLogs = _log.LogEntries.Read(filter);
            
                       foreach (LogEntry log in scriptingLogs)
                       {
                           // Outputs:
                           //  - "(All Scripting Today) Found log: Starting booking validation. at 6/23/2020 2:00:03 PM +02:00 by SKYLINE2\SvenDD on 668 for SRM within Scripting"
                           //  - "(All Scripting Today) Found log: Could not find the reservation instance. at 6/23/2020 2:00:03 PM +02:00 by SKYLINE2\SvenDD on 668 for ReservationInstanceID_e2b57e85-84a4-4d55-a15f-2b01b5070fd1 within Scripting"
                           _engine.GenerateInformation($"(All Scripting Today) Found log: {log.Message} at {log.TimeStamp} by {log.UserName} on {log.DataMinerId} for {log.Name} within {log.Category}");
                   }
               }
            }
             </code>
             </example>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.Category">
            <summary>
            Gets the logger category.
            </summary>
            <value>The logger category.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.SubjectID">
            <summary>
            Gets the subject ID.
            </summary>
            <value>The subject ID.</value>
            <remarks>
            <para>Can be <see langword="null"/>.</para>
            <para>Will also fill in the <see cref="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.SubjectName"/> with <see cref="M:Skyline.DataMiner.Net.IDMAObjectRef.ToFileFriendlyString"/></para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.SubjectName">
            <summary>
            Gets the subject name.
            </summary>
            <value>The subject name.</value>
            <remarks>
            <para>Filled in by default with the <see cref="M:Skyline.DataMiner.Net.IDMAObjectRef.ToFileFriendlyString"/> of the <see cref="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.SubjectID"/>.</para>
            <para>Can also be custom filled in, then the <see cref="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.SubjectID"/> is <see langword="null"/>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.LogLevel">
            <summary>
            Gets the log level.
            </summary>
            <value>The log level.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.FlushInterval">
            <summary>
            Gets the interval at which new <see cref="T:Skyline.DataMiner.Storage.Types.DataTypes.LogEntry"/> objects are flushed to the database.
            </summary>
            <value>The interval at which new <see cref="T:Skyline.DataMiner.Storage.Types.DataTypes.LogEntry"/> objects are flushed to the database.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.MaxLogEntriesBeforeFlush">
            <summary>
            Gets the max amount of LogEntries to keep in memory before doing a flush to database.
            </summary>
            <value>The max amount of LogEntries to keep in memory before doing a flush to database.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.FlushToDatabaseAfterUpsert">
            <summary>
            Gets a value indicating whether LogEntries are flushed to database after upserting.
            </summary>
            <value>If set to <see langword="true" /> (default), the logger will wait for the database to respond after writing log entries to the database.
            If set to <see langword="false" />, the LogHelper will not wait for the database to respond after writing log entries to the database.</value>
            <remarks>
            <note type="note">
            <para>If you set this option to false, there are no guarantees that all log entries will get stored in the database, especially in case of e.g.connection issues or exceptions.</para>
            </note>
            <para>Feature introduced in DataMiner 10.2.0 (RN 28837).</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.Log">
            <summary>Gets the logger instance</summary>
             <value>
             The logger instance, used to create new log entries that have to go into the database
             as <see cref="T:Skyline.DataMiner.Storage.Types.DataTypes.LogEntry"/> objects under the LoggerCategories.Scripting category.
             </value>
        </member>
        <member name="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.LogEntries">
            <summary>
            Gets the log entries CRUD helper component.
            </summary>
            <value>The log entries CRUD helper component.</value>
            <remarks>
            Provides read access to the <see cref="T:Skyline.DataMiner.Storage.Types.DataTypes.LogEntry"/> objects in database.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.LogHelpers.ILogHelper.ChangeLogLevel(SLLoggerUtil.LogLevel)">
            <summary>
            Changes the log level to the specified log level.
            </summary>
            <param name="logLevel">The log level.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.LogHelpers.ILogHelper.ChangeSubjectId(Skyline.DataMiner.Net.IDMAObjectRef)">
            <summary>
            Changes the subject ID.
            </summary>
            <param name="subjectId">The subject ID.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="subjectId"/> is <see langword="null" />.</exception>
            <remarks>
            Note: The LogHelper.Log object will be reconstructed when changing the subject ID.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.LogHelpers.ILogHelper.ChangeSubjectName(System.String)">
            <summary>
            Changes the subject name to the specified subject name.
            </summary>
            <param name="subjectName">The subject name.</param>
            <remarks>
            Note: The LogHelper.Log object will be reconstructed when changing the subject name.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.LogHelpers.ILogHelper.ChangeFlushInterval(System.TimeSpan)">
            <summary>
            Changes the flush interval to the specific flush interval.
            </summary>
            <param name="flushInterval">The flush interval.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.LogHelpers.ILogHelper.ChangeMaxLogEntriesBeforeFlush(System.Int32)">
            <summary>
            Changes the maximum number of log entries before flush to the specified number.
            </summary>
            <param name="maxLogEntriesBeforeFlush">The maximum number of log entries before flush.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.LogHelpers.ILogHelper.ChangeFlushToDatabaseAfterUpsert(System.Boolean)">
            <summary>
            Changes the flush to database after upsert configuration.
            </summary>
            <param name="flushToDatabaseAfterUpsert"><c>true</c> to flush to the database after upsert; otherwise, <c>false</c>.</param>
            <remarks>
            <para>Feature introduced in DataMiner 10.2.0 (RN 28837).</para>
            </remarks>
            <seealso cref="P:Skyline.DataMiner.Net.LogHelpers.ILogHelper.FlushToDatabaseAfterUpsert"/>
        </member>
        <member name="T:Skyline.DataMiner.Net.ManagerStore.BaseManagerHelper">
            <summary>
            Manager helper base class.
            </summary>
            <remarks>
            The basis of every helper for a manager in the ManagerStore. 
            Use <see cref="T:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1"/> objects in the class that inherits from this.
            </remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.ManagerStore.BaseManagerHelper.MessageHandlerDelegate">
            <summary>
            The delegate that does message handling.
            </summary>
            <param name="messages">The messages.</param>
            <returns>Messages.</returns>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.BaseManagerHelper.MessageHandler">
            <summary>
            Gets the message handler.
            </summary>
            <value>The message handler.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.BaseManagerHelper.#ctor(System.Func{Skyline.DataMiner.Net.Messages.DMSMessage[],Skyline.DataMiner.Net.Messages.DMSMessage[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ManagerStore.BaseManagerHelper"/> using the specified message handler.
            </summary>
            <param name="messageHandler">The message handler.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.BaseManagerHelper.#ctor(Skyline.DataMiner.Net.ManagerStore.BaseManagerHelper.MessageHandlerDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ManagerStore.BaseManagerHelper"/> using the specified message handler.
            </summary>
            <param name="messageHandler">The message handler.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException">
            <summary>
            The exception that is thrown when a CRUD operation failed.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.CrudFailedException.TraceData">
            <summary>
            Gets or sets the trace data.
            </summary>
            <value>The trace data.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudFailedException.#ctor(Skyline.DataMiner.Net.ErrorData)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException"/> class.
            </summary>
            <param name="data">The error data.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudFailedException.#ctor(Skyline.DataMiner.Net.TraceData)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException"/> class using the specified trace data.
            </summary>
            <param name="data">The trace data.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/>  with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudFailedException.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1">
            <summary>
            A generic component of a helper that provided helper methods for the CRUD of one object.
            </summary>
            <typeparam name="T">The type.</typeparam>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.MessageHandler">
            <summary>
            Gets the message handler.
            </summary>
            <value>The message handler.</value>
        </member>
        <member name="F:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.TraceDataLastCall">
            <summary>
            The trace data of the last call.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.ThrowExceptionsOnErrorData">
            <summary>
            Gets or sets a value indicating whether the CRUD methods will throw <see cref="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException"/> exceptions.
            </summary>
            <value><c>true</c> if the CRUD methods will throw <see cref="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException"/> exceptions; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: true.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.Create(`0)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object to create.</param>
            <returns>The created object or <see langword="null"/> if the creation failed.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/> is <see langword="null" />.</exception>
            <exception cref="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException">The operation failed. Only thrown when <see cref="P:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.ThrowExceptionsOnErrorData"/> is <c>true</c>.</exception>
            <remarks>Check <see cref="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.GetTraceDataLastCall"/> in case the operation failed.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.Read(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{`0})">
            <summary>
            Returns the items that match the specified filter.
            </summary>
            <param name="filter">The filter to match.</param>
            <returns>The items that match the specified filter.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="filter"/> is <see langword="null" />.</exception>
            <exception cref="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException">The operation failed. Only thrown when <see cref="P:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.ThrowExceptionsOnErrorData"/> is <c>true</c>.</exception>
            <remarks>Check <see cref="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.GetTraceDataLastCall"/> in case the operation failed.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.Read(SLDataGateway.API.Types.Querying.IQuery{`0})">
            <summary>
            Returns all the objects matching the query.
            </summary>
            <param name="query">The query.</param>
            <exception cref="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException"> if <see cref="P:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.ThrowExceptionsOnErrorData"/> is <c>true</c> and the TraceData contains errors.</exception>
            <returns>Never a <see langword="null" /> reference.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.Update(`0)">
            <summary>
            Updates the specified item.
            </summary>
            <param name="obj">The item to update.</param>
            <returns>The updated item.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/> is <see langword="null" />.</exception>
            <exception cref="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException">The operation failed. Only thrown when <see cref="P:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.ThrowExceptionsOnErrorData"/> is <c>true</c>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.Delete(`0)">
            <summary>
            Deletes the specified item.
            </summary>
            <param name="obj">The item to delete.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/> is <see langword="null" />.</exception>
            <exception cref="T:Skyline.DataMiner.Net.ManagerStore.CrudFailedException">The operation failed. Only thrown when <see cref="P:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.ThrowExceptionsOnErrorData"/> is <c>true</c>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.PreparePaging(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{`0},System.Int64)">
            <summary>
            Prepares the paging using the specified filter elements and preferred page size.
            </summary>
            <param name="filter">The filter elements.</param>
            <param name="preferredPageSize">The preferred page size.</param>
            <returns>The paging helper instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.PreparePaging(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{`0})">
            <summary>
            Prepares the paging.
            </summary>
            <param name="filter">The filter elements.</param>
            <returns>The paging helper instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.PreparePaging(SLDataGateway.API.Types.Querying.IQuery{`0},System.Int64)">
            <summary>
            Prepares the paging using the specified query and preferred page size.
            </summary>
            <param name="query">The query.</param>
            <param name="preferredPageSize">The preferred page size.</param>
            <returns>The paging helper instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.PreparePaging(SLDataGateway.API.Types.Querying.IQuery{`0})">
            <summary>
            Prepares the paging using the specified query and default preferred page size (500).
            </summary>
            <param name="query">The query.</param>
            <returns>The paging helper instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.GetTraceDataLastCall">
            <summary>
            Returns the <see cref="T:Skyline.DataMiner.Net.TraceData"/> from the last call that was made for this CRUD component.
            </summary>
            <returns>The <see cref="T:Skyline.DataMiner.Net.TraceData"/> from the last call that was made for this CRUD component.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent`1.RetrieveResponse(Skyline.DataMiner.Net.Messages.DMSMessage)">
            <summary>
            Retrieves the response.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">Got <see langword="null"/>/empty response from the message handler.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.CrudHelperComponentExtension.ReadAll``1(Skyline.DataMiner.Net.ManagerStore.CrudHelperComponent{``0})">
            <summary>
            Reads all the given objects of type T using a TRUEFilterElement{T}.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="comp">The component.</param>
            <returns></returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.ManagerStore.ITrackLastModified">
            <summary>
            Interface for tracking the last modification time.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.ITrackLastModified.LastModified">
            <summary>
            Gets or sets the last modification time.
            </summary>
            <value>The last modification time.</value>
        </member>
        <member name="T:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1">
            <summary>
            Helper class to retrieve data that matches a <see cref="P:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.Query"/> in a paged fashion.
            </summary>
            <typeparam name="T">The type of the data that is paged.</typeparam>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.MessageHandler">
            <summary>
            Gets or sets the message handler.
            </summary>
            <value>The message handler.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter for which this paging helper is created.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.Query">
            <summary>
            Gets the query.
            </summary>
            <value>The query for which this paging helper is created.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.TraceData">
            <summary>
            Gets the trace data.
            </summary>
            <value>The cumulative trace data that is returned during all the paging requests.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.PreferedPageSize">
            <summary>
            Gets the preferred page size.
            </summary>
            <value>The preferred page size.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.GetCurrentPage">
            <summary>
            Retrieves the current page.
            </summary>
            <returns>The current page.</returns>
            <remarks>
            Returns the objects of the last paging request.
            After creation of the <see cref="T:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1"/> this list is empty.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.HasNextPage">
            <summary>
            Retrieves a value indicating whether there is a next page.
            </summary>
            <returns><c>true</c> if there is a next page; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.MoveToNextPage">
            <summary>
            Moves to the next page.
            </summary>
            <returns><c>true</c> if moved to the next page; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ManagerStore.PagingHelper`1.GetAll">
            <summary>
            Retrieves all items.
            </summary>
            <returns>All retrieved items matching the query.</returns>
            <exception cref="T:System.InvalidOperationException">You can only call GetAll once on a PagingHelper.</exception>
            <remarks>
            Will keep sending page requests to the server until all data is retrieved.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This method was invoked more than once on this helper instance.</exception>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.IAutomationScriptResponseMessage">
            <summary>
            Bundles all messages that can be returned by the AutomationScriptManager.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage">
             <summary>
             Represents a message for executing an Automation script.
             </summary>
             <example>
             <code>
             try
             {
            		string[] scriptOptions = { "OPTIONS:0", "CHECKSETS:TRUE", "EXTENDED_ERROR_INFO", "DEFER:TRUE" };
            
            		ExecuteScriptMessage message = new ExecuteScriptMessage
            		{
            			ScriptName = "Automation script",
            			Options = new SA(scriptOptions),
            		};
            
            		var response = protocol.ExecuteScript(message);
            		bool succeeded = response != null &amp;&amp; !response.HadError;
            
            		if (!succeeded)
            		{
            			// Script did not succeed.
            		}
            	}
            	catch (Exception ex)
            	{
            		protocol.Log("QA" + protocol.QActionID + "|" + protocol.GetTriggerParameter() + "|Run|Exception thrown:" + Environment.NewLine + ex, LogType.Error, LogLevel.NoLogging);
             }
            	</code>
             </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage"/> class using the Automation script name.
            </summary>
            <param name="scriptName">Name of the Automation script to run.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage"/> class using the DataMiner agent ID and the script name.
            </summary>
            <param name="dataMinerID">ID of the DataMiner Agent that needs to handle the client Request.</param>
            <param name="scriptName">Name of the script to run.</param>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage.ScriptName">
            <summary>
            Name of the script to run.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage.Options">
            <summary>
            Options to be passed along to the script. These options include info about which elements are linked to which dummies.
            </summary>
            <remarks>
            <list type="bullet">
            	<item>
            		<description>CHECKSETS: To set the option "After executing a SET command, check if the read parameter has been set to the new value", provide an entry with the value "CHECKSETS:TRUE". Otherwise, provide an entry "CHECKSETS:FALSE".</description>
            	</item>
            	<item>
            		<description>"OPTIONS:int": A number of options can be set by providing an entry "OPTIONS:X, where X is a number that is a bitwise combination of the flags defined below.
            		<list type="table">
            		<listheader>
            			<term>Name</term>
            			<term>Value</term>
            			<term>Description</term>
            		 </listheader>
            		 <item>
            			<term>None</term>
            			<term>0x0</term>
            			<term>None</term>
            		</item>
            		 <item>
            			<term>Lock</term>
            			<term>0x1</term>
            			<term>Lock elements</term> 
            		</item>
            		 <item>
            			<term>Force lock</term>
            			<term>0x2</term>
            			<term>Force lock elements. Note: when this is set, "Lock elements" must also be set.</term>
            		</item>
            		 <item>
            			<term>NoWait</term>
            			<term>0x4</term>
            			<term>Disable wait when locked or busy.</term> 
            		</item>
            		 <item>
            			<term>SchedulerMarkElementsInUseVisio</term>
            			<term>0x8</term>
            			<term>Mark dummy elements 'In Use' once task is active and scheduled (RN 5687).</term>
            		</item>
            		 <item>
            			<term>AllowUndef</term>
            			<term>0x10</term>
            			<term>Allows GetParameter to return NULL when parameter value is undefined.</term> 
            		</item>
            		<item>
            			<term>SkipInfoEventsSet</term>
            			<term>0x20</term>
            			<term>Information events should NOT be generated for SETs executed from script.</term>
            		</item>
            		<item>
            			<term>Debug</term>
            			<term>0x40</term>
            			<term>Comment type statements will be logged to information messages.</term>
            		</item>
            		</list>
            		For example, to run a script with the "Disable wait when locked or busy" and "Mark dummy elements 'In Use' once task is active and scheduled", add an entry "OPTIONS:12".
            		</description>
            	</item>
            	<item>
            		<description>"PROTOCOL:protid:dmaid:eid": Defines a protocol mapping. To specify a dummy, provide an entry "PROTOCOL:X:Y:Z", where X is the 1-based dummy number, Y is the Agent ID of the element and Z is the element ID of the element (e.g. "PROTOCOL:1:132:512460"). If the dummy can be empty, you can also specify "*" as values for Y and Z.</description>
            	</item>
            	<item>
            		<description>"PROTOCOLBYNAME:protName:dmaid:eid": Defines a protocol mapping by name. To specify a dummy, provide an entry "PROTOCOLBYNAME:X:Y:Z", where X is the name of the dummy, Y is the Agent ID of the element and Z is the element ID of the element (e.g. "PROTOCOLBYNAME:myDummy:132:512460"). If the dummy can be empty, you can also specify "*" as values for Y and Z.</description>
            	</item>
            	<item>
            		<description>"PARAMETER:id:value": To specify the value of a script parameter, provide an entry "PARAMETER:X:Y", where X is the 1-based parameter number and Y is the parameter value (e.g. "PARAMETER:1:MyValue").</description>
            	</item>
            	<item>
            		<description>"PARAMETERBYNAME:paramName:value": To specify the value of a script parameter by name, provide an entry "PARAMETERBYNAME:X:Y", where X is the script parameter name and Y is the parameter value (e.g. "PARAMETERBYNAME:myParam:MyValue").</description>
            	</item>
            	<item>
            		<description>"MEMORY:id:filename": To specify a memory file, provide an entry "MEMORY:X:Y", where X is the 1-based memory and Y is the memory file name (e.g. "MEMORY:1:memory 2")</description>
            	</item>
            	<item>
            		<description>"MEMORYBYNAME:id:filename": To specify a memory file by name, provide an entry "MEMORYBYNAME:X:Y", where X is the memory description and Y is the memory file name (e.g. "MEMORYBYNAME:myMemory:memory 2")</description>
            	</item>
            	<item>
            		<description>"INTERACTIVE" To allow interactive execution, provide the following entries: "INTERACTIVE". When the "INTERACTIVE" option is provided, the DEFER option should be set to TRUE.</description>
            	</item>
            	<item>
            		<description>"DEFER:bool": To activate the option "Wait for the script to finish before continuing", provide the following entry: "DEFER:FALSE".</description>
            	</item>
            	<item>
            		<description>"EXTENDED_ERROR_INFO": To return the error info and HRESULT in the response, specify "EXTENDED_ERROR_INFO".</description>
            	</item>
            	<item>
            		<description>"USER:cookie": User executing the script.</description>
            	</item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage.CustomEntryPoint">
            <summary>
            Gets or sets a custom entry point of the Automation script.
            </summary>
            <value>The custom entry point of the Automation script.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage">
            <summary>
            Represents a response to a <see cref="T:Skyline.DataMiner.Net.Messages.ExecuteScriptMessage"/> message.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage.saRet">
            <summary>
            The response.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage.ScriptID">
            <summary>
            Gets or sets the script ID.
            </summary>
            <value>The script ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage.ErrorMessages">
            <summary>
            Gets or sets the error messages.
            </summary>
            <value>The error messages.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage.ScriptOutput">
            <summary>
            Gets or sets the script output.
            </summary>
            <value>The script output.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage.ErrorCode">
            <summary>
            Gets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage.HadError">
            <summary>
            Gets a value indicating whether an error occurred.
            </summary>
            <value><c>true</c> if an error occurred; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage"/> message.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ExecuteScriptResponseMessage.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.SA">
            <summary>
            String array wrapper class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.SA.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.SA"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.SA.ToArray(System.Array)">
            <summary>
            Returns <see cref="F:Skyline.DataMiner.Net.Messages.SA.Sa"/> or an empty array if <see cref="F:Skyline.DataMiner.Net.Messages.SA.Sa"/> is <see langword="null" />.
            </summary>
            <returns><see cref="F:Skyline.DataMiner.Net.Messages.SA.Sa"/> or an empty array if <see cref="F:Skyline.DataMiner.Net.Messages.SA.Sa"/> is <see langword="null" /></returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.SA.ToInteropArray(Skyline.DataMiner.Net.Messages.SA)">
            <summary>
            Converts the array to an array that can be marshaled for
            COM interop
            </summary>
            <returns></returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.SA.ToInteropArray(System.String[])">
            <summary>
            Converts the specified array to an array that can be marshaled for COM Interop.
            </summary>
            <param name="sa">The <see cref="T:Skyline.DataMiner.Net.Messages.SA"/> instance to convert.</param>
            <returns>The array that can be marshaled for COM Interop.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.SA.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.SA"/> class using the specified string array.
            </summary>
            <param name="sa">The string array to wrap.</param>
            <remarks>If <paramref name="sa"/> is <see langword="null"/>, <see cref="F:Skyline.DataMiner.Net.Messages.SA.Sa"/> is set to an empty array.</remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.SA.Sa">
            <summary>
            The wrapped string array.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.SA.ToArray">
            <summary>
            Converts this object to a string array.
            </summary>
            <returns>The resulting string array.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.SA.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.SA.IndexOf(System.String)">
            <summary>
            Searches for the specified string and returns the index of its first occurrence in the string array.
            </summary>
            <param name="needle">The string to locate in the string array.</param>
            <returns>The zero-based index of the first occurrence of <paramref name="needle"/>, if found; otherwise, -1.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="needle"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.SA.IndexOf(System.String,System.StringComparison)">
            <summary>
            Searches for the specified string and returns the index of its first occurrence in the string array.
            </summary>
            <param name="needle">The string to locate in the string array.</param>
            <param name="comparisonType">One of the enumeration values that specifies the rules for the comparison.</param>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, -1.</returns>
            <remarks>If <paramref name="needle"/> is <see langword="null"/>, -1 is returned.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.PSA.ToArray(System.Array)">
            <summary>
            Converts the PSA to a jagged array of String
            </summary>
            <returns></returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.PSA.ToArray">
            <summary>
            Converts the PSA to a jagged array of String
            </summary>
            <returns></returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.PSA.ToInteropArray(Skyline.DataMiner.Net.Messages.PSA)">
            <summary>
            Converts the array to an array that can be marshaled for
            COM interop
            </summary>
            <returns></returns>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AutomationScriptOptions.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AutomationScriptOptions.Lock">
            <summary>
            Lock elements used by script.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AutomationScriptOptions.ForceLock">
            <summary>
            When a lock is held by another user/process, take it away by force (in combination with AUTOMATION_LOCK)
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AutomationScriptOptions.NoWait">
            <summary>
            Instead of waiting when an element is in use by another script or locked, fail immediately.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.Parameter">
            <summary>
            This represents a parameter set action
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.AlarmLevel">
            <summary>
            The alarm level of an element, parameter or alarm.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.ParameterDisplayType.Undefined">
            <summary>
            No display type specified. In general, you should never encounter this value.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.ParameterDisplayType.Enabled">
            <summary>
            The parameter is enabled.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.ParameterDisplayType.Disabled">
            <summary>
            The parameter is disabled and should be grayed out.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.TrendingSpanType">
            <summary>
            Defines about which timespan a GetAnalogTrendDataMessage needs to return info.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingSpanType.LastHour">
            <summary>
            Last hour (end time = current time)
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingSpanType.LastDay">
            <summary>
            Last day (end time = current time)
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingSpanType.LastWeek">
            <summary>
            Last week (end time = current time)
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingSpanType.LastMonth">
            <summary>
            Last month (end time = current time)
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingSpanType.LastYear">
            <summary>
            Last year (end time = current time)
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingSpanType.CustomAmountHours">
            <summary>
            A custom amount of hours (end time = current time). Specify the amount of hours in GetAnalogTrendDataMessage.CustomAmountHours.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingSpanType.Custom">
            <summary>
            Fully custom trending timespan
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.TrendingType">
            <summary>
            Defines which type of data a GetAnalogTrendDataMessage needs to return.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingType.Average">
            <summary>
            Average trending data (min / max / average).
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingType.Realtime">
            <summary>
            Real-time trending data.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendingType.Auto">
            <summary>
            Select automatically depending on the requested time interval.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.AverageTrendIntervalType">
            <summary>
            Defines which interval should be retrieved.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AverageTrendIntervalType.Auto">
            <summary>
            Auto: Default value.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AverageTrendIntervalType.FiveMin">
            <summary>
            5 min trending (or what is specified in the settings).
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AverageTrendIntervalType.OneHour">
            <summary>
            Hourly trending (or what is specified in the settings).
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AverageTrendIntervalType.OneDay">
            <summary>
            Daily trending (or what is specified in the settings).
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.TrendOptions">
            <summary>
            Defines whether data should be filled with each record (new way 7.5.0+) or data should come as it is but with gaps returned
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendOptions.None">
            <summary>
            None: Default value.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendOptions.NoFill">
            <summary>
            Trend data should not be filled up.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.TrendOptions.Raw">
            <summary>
            Trend data should not be processed.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.AlarmEventMessage">
            <summary>
            Represents an alarm event.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.AutomationScriptAttachOptions">
            <summary>
            Automation script attach options.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AutomationScriptAttachOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AutomationScriptAttachOptions.DisplayPopup">
            <summary>
            Presents the user with a pop-up window instead of the default dialog box.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.AutomationScriptAttachOptions.AttachImmediately">
            <summary>
            Attaches immediately, without the user having to confirm anything.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.RedundancyMode">
            <summary>
            Specifies the redundancy mode.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.RedundancyMode.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.RedundancyMode.Automatic">
            <summary>
            Automatic.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.RedundancyMode.ManualSwitchBack">
            <summary>
            Manual switchback.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.RedundancyMode.Manual">
            <summary>
            Manual.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.ParameterIndexPair">
            <summary>
            Represents the combination of a parameter and display index (for dynamic table columns).
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ParameterIndexPair.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Skyline.DataMiner.Net.Messages.ParameterIndexPair"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ParameterIndexPair.#ctor(System.Int32)">
            <summary>
            Initializes an instance of the <see cref="T:Skyline.DataMiner.Net.Messages.ParameterIndexPair"/> class using the specified parameter ID.
            </summary>
            <param name="pid">The parameter ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ParameterIndexPair.#ctor(System.Int32,System.String)">
            <summary>
            Initializes an instance of the <see cref="T:Skyline.DataMiner.Net.Messages.ParameterIndexPair"/> class using the specified parameter ID and index.
            </summary>
            <param name="pid">The parameter ID.</param>
            <param name="index">The index.</param>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.ParameterIndexPair.ID">
            <summary>
            Gets or sets the parameter ID.
            </summary>
            <value>The parameter ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.ParameterIndexPair.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.ParameterIndexPair.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ParameterIndexPair.ToKey(System.Int32,System.String)">
            <summary>
            Returns a string representation of the specified parameter ID and index.
            </summary>
            <param name="pid">The parameter ID.</param>
            <param name="idx">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ParameterIndexPair.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ParameterIndexPair.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.PropertyInfo.DataTypes">
            <summary>
            Specifies the property type.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.PropertyInfo.DataTypes.Alarm">
            <summary>
            Alarm.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.PropertyInfo.DataTypes.Element">
            <summary>
            Element.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.PropertyInfo.DataTypes.View">
            <summary>
            View.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.PropertyInfo.DataTypes.Service">
            <summary>
            Service.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.ClientRequestMessage">
            <summary>
            Messages that are sent by subscribers, requesting a response message of some kind.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.ClientRequestMessage.#ctor">
            <summary>
            Required for serialization
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.GetParameterMessage">
            <summary>
            Represents a message to request a parameter value.
            </summary>
            <remarks>
            The response message is a <see cref="T:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage"/> containing the value of the requested parameter.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetParameterMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.GetParameterMessage"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetParameterMessage.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.GetParameterMessage"/> class using the Agent ID, element ID and parameter ID.
            </summary>
            <param name="dmaId">The Agent ID of the element.</param>
            <param name="elId">The element ID.</param>
            <param name="parameterId">The parameter ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetParameterMessage.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.GetParameterMessage"/> class using the Agent ID, element ID, parameter ID and the display key.
            </summary>
            <param name="dmaId">The Agent ID of the element.</param>
            <param name="elId">The element ID.</param>
            <param name="parameterId">The parameter ID.</param>
            <param name="displayKey">The display key.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetParameterMessage.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.GetParameterMessage"/> class using the Agent ID, element ID, parameter ID and the display key.
            </summary>
            <param name="dmaId">The Agent ID of the element.</param>
            <param name="elId">The element ID.</param>
            <param name="parameterId">The parameter ID.</param>
            <param name="key">The display key or primary key.</param>
            <param name="usePrimaryKey"><c>true</c> if <paramref name="key"/> denotes the primary key; otherwise <c>false</c>.</param>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterMessage.UsePrimaryKey">
            <summary>
            Gets or sets a value indicating whether the key to be used is the primary key.
            </summary>
            <value>If <c>true</c>, the primary key will be used for retrieving the data, otherwise the display key will be used.</value>
            <remarks>
            <para> Default: <c>false</c>.</para>
            <para>Feature introduced in DataMiner 10.1.11 (RN 30694).</para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterMessage.ElId">
            <summary>
            ID of the element for which to receive the current parameter value.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetParameterMessage.GetElementID">
            <summary>
            Retrieves the element ID.
            </summary>
            <returns>The element ID.</returns>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterMessage.ParameterId">
            <summary>
            ID of the parameter for which to receive the current value.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterMessage.TableIndex">
            <summary>
            If the <see cref="F:Skyline.DataMiner.Net.Messages.GetParameterMessage.ParameterId"/> references a dynamic table column,
            a primary or display key specifying the row needs to be specified.
            Which type of key depends on the <see cref="P:Skyline.DataMiner.Net.Messages.GetParameterMessage.UsePrimaryKey"/> property.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetParameterMessage.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.GetTrendDataMessage">
            <summary>
            Represents a message to request trend data from a DataMiner Agent.
            </summary>
            <remarks>Use this message to execute queries on the trend data tables for a certain element. Results in a <see cref="T:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage"/> response.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.#ctor">
            <summary>
            Initializes a new instance of the GetTrendDataMessage class representing a message to request trend data from a DataMiner Agent.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.GetTrendDataMessage"/> class representing a message to request trend data from a DataMiner Agent.
            </summary>
            <param name="dmaid">The DataMiner Agent ID.</param>
            <param name="eid">The element ID.</param>
            <param name="pid">The parameter ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.GetTrendDataMessage"/> class representing a message to request trend data from a DataMiner Agent.
            </summary>
            <param name="dmaid">The DataMiner Agent ID.</param>
            <param name="eid">The element ID.</param>
            <param name="pid">The parameter ID.</param>
            <param name="key">The key of the row.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.GetTrendDataMessage"/> class representing a message to request trend data from a DataMiner Agent.
            </summary>
            <param name="dmaid">The DataMiner Agent ID.</param>
            <param name="eid">The element ID.</param>
            <param name="pid">The parameter ID.</param>
            <param name="key">The key of the row.</param>
            <param name="raw">Indicates whether raw data should be returned.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.GetTrendDataMessage"/> class representing a message to request trend data from a DataMiner Agent.
            </summary>
            <param name="dmaid">The DataMiner Agent ID.</param>
            <param name="eid">The element ID.</param>
            <param name="pid">The parameter ID.</param>
            <param name="key">The key of the row.</param>
            <param name="raw">Indicates whether raw data should be returned.</param>
            <param name="dateTimeUTC">Indicates whether UTC timestamps are used.</param>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.ElementID">
            <summary>
            Gets or sets the ID of the element for which you want to request trend data.
            </summary>
            <value>The element ID</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.GetElementID">
            <summary>
            Retrieves the element ID for messages that are about an element.
            </summary>
            <returns>The ID of the element this message is about.</returns>
            <remarks>
            <para>Together with TargetedClientRequestMessage.DataMinerID, this info is used to auto fill out the HostingDataMinerID.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.ParameterID">
            <summary>
            Gets or sets the parameter ID.
            </summary>
            <value>Parameter ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.TableIndex">
            <summary>
            Gets or sets the primary key.
            </summary>
            <value>The primary key.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.Fields">
            <summary>
            List of table columns (fields) to get. To include a count, add a "COUNT(*)" field.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.WhereClause">
            <summary>
            Gets or sets the optional extra SQL where clause to further limit the trend data.
            </summary>
            <value>Optional extra SQL where clause to further limit the trend data.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.OrderClause">
            <summary>
            Gets or sets an optional SQL order clause.
            </summary>
            <value>Optional SQL order clause.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.AlternativePidClause">
            <summary>
            Gets or sets a clause which can be used to select an alternative PID next to the one selected by ParameterID/TableIndex(e.g. "iPid = -1").
            </summary>
            <value>Alternative clause to select another PID next to the one selected by ParameterID/TableIndex.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.Parameters">
            <summary>
            List of parameters to include [7.0.1+]
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.TrendingType">
            <summary>
            Gets or sets the type of trending data that is requested.
            </summary>
            <value>The requested type of trend data.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.TrendOption">
            <summary>
            Gets or sets a value indicating whether trend data should be filled up.
            </summary>
            <value>Whether trending data should be filled up.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.SkipCache">
            <summary>
            When <c>true</c>, data will never be resolved from the trendcache.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.AverageTrendIntervalType">
            <summary>
            Gets or sets the type of average trend interval that is requested.
            </summary>
            <value>The type of average trend interval that is requested.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.StartTime">
            <summary>
            Start time of trending
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.EndTime">
            <summary>
            End time of trending
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.Raw">
            <summary>
            Gets or sets a value indicating whether to return the raw data.
            </summary>
            <value><c>true</c> if raw data must be returned; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.DateTimeUTC">
            <summary>
            Gets or sets a value indicating whether the timestamps returned will be in UTC. StartTime and EndTime will be interpreted as UTC.
            </summary>
            <value>If set to true, all DateTime values in the Ge tTrendDataMessage have to be specified in UTC format. Also, in the response, all DateTime values will be in UTC format.</value>
            <remarks>The default value is false (i.e. local time).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.Limit">
            <summary>
            Gets or sets the maximum number of rows to return.
            </summary>
            <value>Maximum number of rows to return.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.Flatten">
            <summary>
            Gets or sets a flag to set when you want bigger data like hour records and day records to be flattened.
            </summary>
            <value>Flag to set when you want bigger data like hour records and day records to be flattened.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.ReturnAsObjects">
            <summary>
            Gets or sets a value indicating whether the Values or Records property in the corresponding GetTrendDataResponseMessage will be set.
            </summary>
            <value>When set to true, the Records property of the corresponding GetTrendDataResponseMessage will be set, otherwise the Values property will be set.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.RetrievalWithPrimaryKey">
            <summary>
            RetrievalWithPrimaryKey is true when the ParameterIndexPair (in Parameters) contains the primary key (even in the case of a display column)
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataMessage.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage">
            <summary>
            Represents a response to a <see cref="T:Skyline.DataMiner.Net.Messages.GetParameterMessage"/>.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.Value">
            <summary>
            The current parameter Value (raw).
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.DataMinerID">
            <summary>
            The DataMiner Agent ID.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.ElId">
            <summary>
            The element ID.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.ParameterId">
            <summary>
            The parameter ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.TableIndex">
            <summary>
            Gets or sets the table index.
            </summary>
            <value>The table index.</value>
            <remarks>For table column parameters, the row index about which this object contains data.</remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.DisplayType">
            <summary>
            The parameter display type.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.DisplayValue">
            <summary>
            The display value.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.LastChange">
            <summary>
            The time of last change.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.LastPoll">
            <summary>
            The time of last poll.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.UserName">
            <summary>
            The name of the user or process that caused the last change of the parameter.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.AlarmLevel">
            <summary>
            The alarm level for the parameter.
            </summary>
            <remarks>
            If the parameter is masked, AlarmLevel.Masked is returned.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.ActualAlarmLevel">
            <summary>
            Gets or sets the actual alarm level, even if the parameter is masked.
            </summary>
            <value>The actual alarm level, even if the parameter is masked.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.LatchLevel">
            <summary>
            Gets or sets the latch alarm level.
            </summary>
            <value>The latch alarm level.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.IsAverageTrended">
            <summary>
            Gets or sets a value indicating whether average trending is enabled.
            </summary>
            <value><c>true</c> if average trending is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.IsRealTimeTrended">
            <summary>
            Gets or sets a value indicating whether real-time trending is enabled.
            </summary>
            <value><c>true</c> if real-time trending is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.IsMasked">
            <summary>
            Gets or sets a value indicating whether this parameter is masked.
            </summary>
            <value><c>true</c> if masked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.IsValidValue">
            <summary>
            Gets or sets a value indicating whether this is a valid value (i.e. last poll for this parameter succeeded).
            </summary>
            <value><c>true</c> if valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.IsTrended">
            <summary>
            Gets or sets a value indicating whether this parameter is trended.
            </summary>
            <value><c>true</c> if trended; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetParameterResponseMessage.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage">
            <summary>
            Represents a response message to a <see cref="T:Skyline.DataMiner.Net.Messages.GetTrendDataMessage"/> request.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage"/> class.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage.Result">
            <summary>
            Gets or sets the number of retrieved trend records.
            </summary>
            <value>The number of retrieved trend records.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage.ColumnNames">
            <summary>
            Gets or sets the column names.
            </summary>
            <value>The column names.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage.Records">
            <summary>
            Gets or sets the records.
            </summary>
            <value>The records.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Messages.GetTrendDataResponseMessage.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Messages.ResponseMessage">
            <summary>
            Abstract class grouping all messages that are sent in response to client request messages.
            You can also use <c>ResponseMessageWithInfo</c> to add some error info to the response.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException">
            <summary>
            Thrown when a <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> with a <see cref="T:Skyline.DataMiner.Net.Profiles.ProtocolParameterReference"/> with an invalid link to a MediationSnippet is exported.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException.MediationSnippetId">
            <summary>
            Gets the mediation snippet ID.
            </summary>
            <value>The mediation snippet ID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException"/> class using the specified snippet GUID.
            </summary>
            <param name="mediationSnippetGuid">The snippet GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException"/> class using the specified message and snippet GUID.
            </summary>
            <param name="message">The message.</param>
            <param name="mediationSnippetGuid">The snippet GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException.#ctor(System.String,System.Exception,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException"/> class using the specified message, inner exception and snippet GUID.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
            <param name="mediationSnippetGuid">The snippet GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.MediationSnippetNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException">
            <summary>
            Thrown when a profile parameter passed to the ProfileParameterExporter can not be found.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException.ProfileParameterId">
            <summary>
            Gets the profile parameter ID.
            </summary>
            <value>The profile parameter ID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException"/> class using the specified profile parameter ID.
            </summary>
            <param name="profileParameterId">The profile parameter ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException"/> class using the specified message and profile parameter ID.
            </summary>
            <param name="message">The message.</param>
            <param name="profileParameterId">The profile parameter ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException.#ctor(System.String,System.Exception,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException"/> class using the specified message and profile parameter ID.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
            <param name="profileParameterId">The profile parameter ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.Exceptions.ProfileParameterNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProfileManager.Export.ProfileParameterExportResult">
            <summary>
            Returned when exporting <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> using the <c>ProfileParameterExporter</c>
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileManager.Export.ProfileParameterExportResult.FileBytes">
            <summary>
            The file containing the exported <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> and <see cref="T:Skyline.DataMiner.Net.MediationSnippets.MediationSnippet"/>.
            </summary>
            <remarks>
            This can be passed to an instance of a ProfileParameterImporter to import the parameters.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Export.ProfileParameterExportResult.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Export.ProfileParameterExportResult"/> using the specified file bytes.
            </summary>
            <param name="fileBytes">The file bytes.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException">
            <summary>
            Thrown by the ProfileParameterImporter when a <see cref="T:Skyline.DataMiner.Net.MediationSnippets.MediationSnippet"/> in the package could not be imported.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException.MediationSnippetId">
            <summary>
            Gets the ID of the <see cref="T:Skyline.DataMiner.Net.MediationSnippets.MediationSnippet"/> that could not be imported.
            </summary>
            <value>The ID of the <see cref="T:Skyline.DataMiner.Net.MediationSnippets.MediationSnippet"/> that could not be imported. Empty GUID if the ID was not recoverable from the import package.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException.EntryPath">
            <summary>
            Gets or sets the path to the invalid Entry within the upgrade package.
            </summary>
            <value>The path to the invalid Entry within the upgrade package.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException"/> class using the specified mediation snippet ID and entry path.
            </summary>
            <param name="mediationSnippetId">The mediation snippet ID.</param>
            <param name="entryPath">The entry path.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException.#ctor(System.String,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException"/> class using the specified message, mediation snippet ID and entry path.
            </summary>
            <param name="message">The message.</param>
            <param name="mediationSnippetId">The mediation snippet ID.</param>
            <param name="entryPath">The entry path.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException.#ctor(System.String,System.Exception,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException"/> class using the specified message, inner exception, mediation snippet ID and entry path.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
            <param name="mediationSnippetId">The mediation snippet ID.</param>
            <param name="entryPath">The entry path.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidMediationSnippetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException">
            <summary>
            Thrown by the ProfileParameterImporter when a <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> could not be imported.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException.ProfileParameterId">
            <summary>
            Gets the ID of the <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> that could not be imported.
            </summary>
            <value>The ID of the <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/> that could not be imported. Empty GUID if the ID was not recoverable from the import package.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException.EntryPath">
            <summary>
            Gets or sets the path to the invalid Entry within the upgrade package.
            </summary>
            <value>The path to the invalid Entry within the upgrade package.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException"/> class using the specified profile parameter ID and entry path.
            </summary>
            <param name="profileParameterId">The profile parameter ID</param>
            <param name="entryPath">The entry path.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException.#ctor(System.String,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException"/> class using the specified message, profile parameter ID and entry path.
            </summary>
            <param name="message">The message.</param>
            <param name="profileParameterId">The profile parameter ID</param>
            <param name="entryPath">The entry path.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException.#ctor(System.String,System.Exception,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException"/> class using the specified message, inner exception, profile parameter ID and entry path.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
            <param name="profileParameterId">The profile parameter ID</param>
            <param name="entryPath">The entry path.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.Exceptions.InvalidProfileParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProfileManager.Import.ProfileParameterImportResult">
            <summary>
            Returned by the ProfileParameterImporter when importing <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/>s
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileManager.Import.ProfileParameterImportResult.ImportedParameters">
            <summary>
            Gets the list of <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/>s that was imported.
            </summary>
            <value>The list of <see cref="T:Skyline.DataMiner.Net.Profiles.Parameter"/>s that was imported.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileManager.Import.ProfileParameterImportResult.ImportedMediationSnippets">
            <summary>
            Gets the list of <see cref="T:Skyline.DataMiner.Net.MediationSnippets.MediationSnippet"/>s that was imported.
            </summary>
            <value>The list of <see cref="T:Skyline.DataMiner.Net.MediationSnippets.MediationSnippet"/>s that was imported. One or more of the imported parameters will have a link to one of these snippets.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileManager.Import.ProfileParameterImportResult.#ctor(System.Collections.Generic.List{Skyline.DataMiner.Net.Profiles.Parameter},System.Collections.Generic.List{Skyline.DataMiner.Net.MediationSnippets.MediationSnippet})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileManager.Import.ProfileParameterImportResult"/> class using the specified imported parameters and mediation snippets.
            </summary>
            <param name="importedParameters">The imported parameters.</param>
            <param name="importedMediationSnippets">The imported mediation snippets.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Records.RecordCellDefinition">
            <summary>
            Represents a record cell definition.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Records.RecordCellDefinition.SupportedTypes">
            <summary>
            List of the supported types. The supported types are: <see cref="T:System.String"/>, <see cref="T:System.Double"/>, <see cref="T:System.Int64"/>, <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordCellDefinition.ID">
            <summary>
            Gets or sets the record cell definition ID.
            </summary>
            <value>The record cell definition ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordCellDefinition.Name">
            <summary>
            Gets or sets the record cell definition name.
            </summary>
            <value>The record cell definition name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordCellDefinition.CellType">
            <summary>
            Gets or sets the cell type.
            </summary>
            <value>The cell type.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.RecordCellDefinition"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinition.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinition.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinition.Equals(Skyline.DataMiner.Net.Records.RecordCellDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinition.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Records.RecordCellDefinitionID">
            <summary>
            Represents a record cell definition ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordCellDefinitionID.Id">
            <summary>
            Gets the record cell definition ID.
            </summary>
            <value>The record cell definition ID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinitionID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.RecordCellDefinitionID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinitionID.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.RecordCellDefinitionID"/> class with the specified ID.
            </summary>
            <param name="id">The GUID to use as ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinitionID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinitionID.Build(Skyline.DataMiner.Net.Ownership.SimpleByteReader)">
            <summary>
            Creates a new <see cref="T:Skyline.DataMiner.Net.Records.RecordCellDefinitionID"/> instance from the specified <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/>.
            </summary>
            <param name="reader">The <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/> instance.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Records.RecordCellDefinitionID"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCellDefinitionID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string that represents the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Records.RecordDefinition">
            <summary>
            Defines the cells of record, defining the name and type of each cell.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordDefinition.ID">
            <summary>
            Gets or sets the record definition ID.
            </summary>
            <value>The record definition ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordDefinition.Name">
            <summary>
            Gets or sets the record definition name.
            </summary>
            <value>The record definition name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordDefinition.CellDefinitions">
            <summary>
            Gets the record cell definitions.
            </summary>
            <value>The record cell definitions.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordDefinition.Skyline#DataMiner#Net#ManagerStore#ITrackLastModified#LastModified">
            <summary>
            Gets the last modifcation time.
            </summary>
            <value>The last modification time.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.RecordDefinition"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinition.ToJson">
            <summary>
            Retrieves the JSON representation of this object.
            </summary>
            <returns>The JSON representation of this object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinition.FromJson(System.String)">
            <summary>
            Deserializes the specified JSON string into a new instance of this class.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>The deserialized object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="json"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinition.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinition.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinition.Equals(Skyline.DataMiner.Net.Records.RecordDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinition.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinition.ToFilter``1">
            <summary>
            Converts this record definition to an ID-based filter of the specified type.
            </summary>
            <typeparam name="T">The filter element type.</typeparam>
            <returns>The created filter element of the specified type.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Records.RecordDefinitionID">
            <summary>
            Represents a record definition ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordDefinitionID.Id">
            <summary>
            Gets the record definition ID.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinitionID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.RecordDefinitionID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinitionID.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.RecordDefinitionID"/> class with the specified ID.
            </summary>
            <param name="id">The GUID to use as ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinitionID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinitionID.Build(Skyline.DataMiner.Net.Ownership.SimpleByteReader)">
            <summary>
            Creates a new <see cref="T:Skyline.DataMiner.Net.Records.RecordDefinitionID"/> instance from the specified <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/>.
            </summary>
            <param name="reader">The <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/> instance.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Records.RecordDefinitionID"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordDefinitionID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string that represents the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Records.Record">
            <summary>
            Represents a record consisting of cell values complying with its corresponding record definition.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.Record.ID">
            <summary>
            Gets or sets the record ID.
            </summary>
            <value>The record ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.Record.RecordDefinitionID">
            <summary>
            Gets or sets the record definition ID.
            </summary>
            <value>The record definition ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.Record.Cells">
            <summary>
            Gets the record cells.
            </summary>
            <value>The record cells.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.Record.Skyline#DataMiner#Net#ManagerStore#ITrackLastModified#LastModified">
            <summary>
            Gets or sets the last modification time.
            </summary>
            <value>The last modification time.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.Record.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.Record"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.Record.AsJsonSerializableDictionary">
            <summary>
            Returns this Job as a JSON serializable dictionary.
            </summary>
            <returns>The JSON serializable dictionary representation of this Job.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.Record.ToJson">
            <summary>
            Retrieves the JSON representation of this object.
            </summary>
            <returns>The JSON representation of this object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.Record.FromJson(System.String)">
            <summary>
            Deserializes the specified JSON string into a new instance of this class.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>The deserialized object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="json"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.Record.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.Record.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.Record.Equals(Skyline.DataMiner.Net.Records.Record)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.Record.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.Record.ToFilter``1">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement`1"/> instance for this object.
            </summary>
            <typeparam name="T">The type of the filter element.</typeparam>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement`1"/> instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Records.RecordCell">
            <summary>
            Represents a record cell.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordCell.CellDefinitionID">
            <summary>
            Gets or sets the cell definition ID.
            </summary>
            <value>The cell definition ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordCell.Value">
            <summary>
            Gets the cell value.
            </summary>
            <value>The cell value.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.RecordCell"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCell.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCell.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCell.Equals(Skyline.DataMiner.Net.Records.RecordCell)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordCell.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Records.RecordID">
            <summary>
            Represents a record ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Records.RecordID.Id">
            <summary>
            Gets the record ID.
            </summary>
            <value>The record ID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.RecordID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordID.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Records.RecordID"/> class with the specified ID.
            </summary>
            <param name="id">The GUID to use as ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordID.Build(Skyline.DataMiner.Net.Ownership.SimpleByteReader)">
            <summary>
            Creates a new <see cref="T:Skyline.DataMiner.Net.Records.RecordID"/> instance from the specified <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/>.
            </summary>
            <param name="reader">The <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/> instance.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Records.RecordID"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Records.RecordID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string that represents the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor">
            <summary>
            Represents an auto-increment field descriptor.
            </summary>
            <remarks>
            <para>This descriptor defines a field that should have an ID value that is unique across all jobs (in the whole DataMiner system).</para>
            <para>It only supports the <see cref="T:System.Int64"/> type as value and it contains:</para>
            <list type="bullet">
            <item>
            	<description>An ID of an AutoIncrementer.</description>
            </item>
            <item>
            	<description>An IDFormat string</description>
            </item>
            </list>
            <para>If the job does not have the required field values for these kinds of descriptors, they will be automatically added during creation/updating of the job.</para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.SupportedAutoIncrementTypes">
            <summary>
            The supported auto-increment types.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.IDFormat">
            <summary>
            Gets or sets the ID format.
            </summary>
            <value>The ID format.</value>
            <remarks>
            The format how the number should be displayed as a string.
            See <see cref="M:System.String.Format(System.String,System.Object[])"/> on the syntax of this string.
            Can be <see langword="null"/> if no formatting should be done.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.AutoIncrementerID">
            <summary>
            Gets or sets the auto-incrementer ID.
            </summary>
            <value>The auto-incrementer ID.</value>
            <remarks>
            The reference to an AutoIncrementer. Multiple fields can reference the same one.
            Can be a random new GUID if a new AutoIncrementer should be created.
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.ContainsValidSupportedType(Skyline.DataMiner.Net.Sections.SectionDefinitionError@)">
            <summary>
            Determines whether the field type is supported.
            </summary>
            <param name="error">The error if the field type is not supported, otherwise <see langword="null"/>.</param>
            <returns><c>true</c> if the field type is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.IschangedInASafeWay(Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Determines whether the field descriptor is changed in a safe way.
            </summary>
            <param name="other">The other field descriptor.</param>
            <returns><c>true</c> if it is changed in a safe way; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.Equals(Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.AutoIncrementFieldDescriptor.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.FieldDescriptor">
            <summary>
            Represents a field descriptor. A field descriptor defines the behavior and look of a field.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.FieldDescriptor.SupportedTypes">
            <summary>
            The supported types.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.ID">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.Validators">
            <summary>
            Gets the field validators.
            </summary>
            <value>The field validators.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.FieldType">
            <summary>
            Gets or sets the type of the field.
            </summary>
            <value>The field type.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.IsOptional">
            <summary>
            Gets or sets a value indicating whether this field is optional.
            </summary>
            <value><c>true</c> if this field is optional; otherwise, <c>false</c>.</value>
            <remarks>
            <para>When set to <c>false</c>, the sections must always contain a value for this field.</para>
            <para>From DataMiner 9.6.11 (RN 22824, RN 23048) onwards, when you configure a job section, it is now possible to turn mandatory fields into optional fields and vice versa, even if those fields are in use.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.IsHidden">
            <summary>
            Gets or sets a value indicating whether this field is hidden.
            </summary>
            <value><c>true</c> if this field is hidden; otherwise, <c>false</c>.</value>
            <remarks>When set to <c>true</c>, the fields that use this <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> will not be displayed when viewing a <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/>.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.IsReadonly">
            <summary>
            Gets or sets a value indicating whether this field is read-only.
            </summary>
            <value><c>true</c> if this field is read-only; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Read-only fields can only be updated from a script, not from the UI. Also, read-only fields will be ignored when you apply a job template.</para>
            <para>Feature introduced in DataMiner 9.6.11 (RN 22758).</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
            <value>The tooltip.</value>
            <remarks>The client will display this tooltip when the user hovers over the name of the field.
            Feature introduced in DataMiner 9.6.9 (RN 22204).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.ContainsValidSupportedType">
            <summary>
            Determines whether the specified type in <see cref="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.FieldType"/> is a supported type.
            </summary>
            <returns><c>true</c> if the specified type is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.GetDictFieldName">
            <summary>
            Retrieves the ID string.
            </summary>
            <returns>The ID string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.IsValueOfValidType(Skyline.DataMiner.Net.Sections.IValueWrapper)">
            <summary>
            Determines whether the specified value has the valid type.
            </summary>
            <param name="valueWrapper">The value to check for the valid type.</param>
            <returns><c>true</c> if the type of value is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.ContainsValidSupportedType(Skyline.DataMiner.Net.Sections.SectionDefinitionError@)">
            <summary>
            Determines whether the specified type in <see cref="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.FieldType"/> is a supported type.
            </summary>
            <param name="error">The error message in case the type is unsupported; otherwise <see langword="null" />.</param>
            <returns><c>true</c> if the specified type is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.Equals(Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.IschangedInASafeWay(Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Determines whether the field descriptor is changed in a safe way.
            </summary>
            <param name="other">The other field descriptor.</param>
            <returns><c>true</c> if it is changed in a safe way; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptor.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.FieldDescriptorID">
            <summary>
            Represents a field descriptor ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldDescriptorID.Id">
            <summary>
            Gets the GUID.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptorID.#ctor">
             <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptorID"/> class.
             </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptorID.#ctor(System.Guid)">
             <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptorID"/> class using the specified GUID.
             </summary>
             <param name="id">The field descriptor ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptorID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptorID.Build(Skyline.DataMiner.Net.Ownership.SimpleByteReader)">
            <summary>
            Creates a new <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptorID"/> instance from the specified <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/>.
            </summary>
            <param name="reader">The <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/> instance.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptorID"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldDescriptorID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string that represents the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
            <remarks>The resulting string is formatted as follows: "FieldDescriptorID_[GUID]", where [GUID] represents the value of the <see cref="P:Skyline.DataMiner.Net.Sections.FieldDescriptorID.Id"/> property.</remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.FieldValue">
            <summary>
            Represents a field value.
            </summary>
            <remarks>A <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/> contains a value and a reference its corresponding field descriptor (<see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/>).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldValue.FieldDescriptorID">
            <summary>
            Gets or sets the field descriptor ID.
            </summary>
            <value>The field descriptor ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.FieldValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.#ctor(Skyline.DataMiner.Net.Sections.FieldDescriptorID)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/> class using the specified field descriptor ID.
            </summary>
            <param name="existingDescriptorID">The field descriptor ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.#ctor(Skyline.DataMiner.Net.Sections.FieldDescriptorID,Skyline.DataMiner.Net.Sections.IValueWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/> class using the specified field descriptor ID and value.
            </summary>
            <param name="existingDescriptorID">The field descriptor ID.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.#ctor(Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/> class using the specified field descriptor.
            </summary>
            <param name="existingDescriptor">The field descriptor.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="existingDescriptor"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.#ctor(Skyline.DataMiner.Net.Sections.FieldDescriptor,Skyline.DataMiner.Net.Sections.IValueWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/> class using the specified field descriptor.
            </summary>
            <param name="existingDescriptor">The field descriptor.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="existingDescriptor"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.GetDictFieldName">
            <summary>
            Retrieves the ID string.
            </summary>
            <returns>The ID string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.GetFieldDescriptor">
            <summary>
            Retrieves the field descriptor.
            </summary>
            <returns>The field descriptor.</returns>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">The FieldValue was not yet stitched to the FieldDescriptor.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.Stitch(System.Func{Skyline.DataMiner.Net.Sections.FieldDescriptorID,Skyline.DataMiner.Net.Sections.FieldDescriptor})">
            <summary>
            Stitches the FieldValue to the corresponding FieldDescriptor.
            </summary>
            <param name="fieldDescriptorProvider">The corresponding field description provider.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.Equals(Skyline.DataMiner.Net.Sections.FieldValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.FieldValue.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor">
            <summary>
            Represents a generic enum field descriptor. This is a collection of display key pairs.
            </summary>
            <remarks><para>The supported types for display key pairs are (Note: these cannot be mixed):</para>
            <list type="bullet">
            <item>
            <description>display: <see cref="T:System.String"/>, key: <see cref="T:System.String"/></description>
            </item>
            <item>
            <description>display: <see cref="T:System.String"/>, key: <see cref="T:System.Int32"/></description>
            </item>
            </list>
            <para>Each value of this field descriptor must have one of the available key values of the generic enum.</para>
            <para>Note: A <see cref="T:Skyline.DataMiner.Net.GenericEnums.IGenericEnumEntry"/> can be set to hidden, e.g. to implement a soft delete of options.</para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor.SupportedGenericEnumTypes">
            <summary>
            The supported generic enum types.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor.GenericEnumInstance">
            <summary>
            Gets or sets the generic enum instance.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor.IsValueOfValidType(Skyline.DataMiner.Net.Sections.IValueWrapper)">
            <summary>
            Determines whether the specified value has the valid type.
            </summary>
            <param name="valueWrapper">The value to check for the valid type.</param>
            <returns><c>true</c> if the type of value is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor.ContainsValidSupportedType(Skyline.DataMiner.Net.Sections.SectionDefinitionError@)">
            <summary>
            Determines whether the specified type in <see cref="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.FieldType"/> is a supported type.
            </summary>
            <param name="error">The section definition error.</param>
            <returns><c>true</c> if the specified type is supported; otherwise, <c>false</c>.</returns>
            <remarks>If the type is supported, <paramref name="error"/> is <see langword="null" />.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor.Equals(Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor.IschangedInASafeWay(Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Determines whether the field descriptor is changed in a safe way.
            </summary>
            <param name="other">The other field descriptor.</param>
            <returns><c>true</c> if it is changed in a safe way; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumFieldDescriptor.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.IValueWrapper">
            <summary>
            Represents a value wrapper.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.IValueWrapper.Type">
            <summary>
            Gets the type of the value.
            </summary>
            <value>The type of the value.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.IValueWrapper.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.IValueWrapper.Collect(System.Collections.IList)">
            <summary>
            Adds this object to the specified collection.
            </summary>
            <param name="collection">The collection to add this object to.</param>
            <returns>The specified collection with this item added.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor">
            <summary>
            Represents a record field descriptor. This <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptor"/> has a reference to a <see cref="T:Skyline.DataMiner.Net.Records.RecordDefinition"/>.
            </summary>
            <remarks>The value of a <see cref="T:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor"/> is always a GUID that is a reference to a <see cref="T:Skyline.DataMiner.Net.Records.Record"/> complying with the <see cref="T:Skyline.DataMiner.Net.Records.RecordDefinition"/>.</remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor.SupportedRecordKeyTypes">
            <summary>
            The supported record key types.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor.RecordDefinitionID">
            <summary>
            Gets or sets the record definition ID.
            </summary>
            <value>The record definition ID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor.ContainsValidSupportedType(Skyline.DataMiner.Net.Sections.SectionDefinitionError@)">
            <summary>
            Determines whether the field type is supported.
            </summary>
            <param name="error">The error if the field type is not supported, otherwise <see langword="null"/>.</param>
            <returns><c>true</c> if the field type is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor.Equals(Skyline.DataMiner.Net.Sections.RecordFieldDescriptor)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor.IschangedInASafeWay(Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Determines whether the field descriptor is changed in a safe way.
            </summary>
            <param name="other">The other field descriptor.</param>
            <returns><c>true</c> if it is changed in a safe way; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RecordFieldDescriptor.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor">
            <summary>
            Represents a reservation field descriptor. The value of this field descriptor should always be a <see cref="T:System.Guid"/> of a ReservationInstance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor.SupportedIdTypes">
            <summary>
            The supported types.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor.ContainsValidSupportedType(Skyline.DataMiner.Net.Sections.SectionDefinitionError@)">
            <summary>
            Determines whether the field type is supported.
            </summary>
            <param name="error">The error if the field type is not supported, otherwise <see langword="null"/>.</param>
            <returns><c>true</c> if the field type is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor.Equals(Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor.IschangedInASafeWay(Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Determines whether the field descriptor is changed in a safe way.
            </summary>
            <param name="other">The other field descriptor.</param>
            <returns><c>true</c> if it is changed in a safe way; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor">
            <summary>
            This field descriptor has a <see cref="P:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor.StaticText"/> property. Every field of this type will always have this string as value.
            </summary>
            <remarks>
            <para>The value itself is not saved in the job, which makes sure that the <see cref="P:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor.StaticText"/> can always be changed freely. When a job is displayed, the value for this kind of field should always be retrieved from the <see cref="T:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor"/> itself.</para>
            <para>The FieldValue for this type of FieldDescriptor must not contain any values, it should be empty, but if something were to be present, it can always be safely ignored.</para>
            <para>Feature introduced in DataMiner 9.6.9 (RN 22207).</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor.StaticText">
            <summary>
            Gets or sets the static text.
            </summary>
            <value>The static text.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor.ContainsValidSupportedType(Skyline.DataMiner.Net.Sections.SectionDefinitionError@)">
            <summary>
            Determines whether the specified type in <see cref="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.FieldType"/> is a supported type.
            </summary>
            <param name="error">The section definition error.</param>
            <returns><c>true</c> if the specified type is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor.Equals(Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor.IschangedInASafeWay(Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Determines whether the field descriptor is changed in a safe way.
            </summary>
            <param name="other">The other field descriptor.</param>
            <returns><c>true</c> if it is changed in a safe way; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticTextFieldDescriptor.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.ValueWrapper`1">
            <summary>
            Represents a wrapped value.
            </summary>
            <typeparam name="T">The type of the value that is wrapped.</typeparam>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.ValueWrapper`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.ValueWrapper`1.Skyline#DataMiner#Net#Sections#IValueWrapper#Value">
            <summary>
            Gets the value.
            </summary>
            <alue>The value.</alue>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.ValueWrapper`1.Skyline#DataMiner#Net#Sections#IValueWrapper#Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ValueWrapper`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.ValueWrapper`1"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ValueWrapper`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.ValueWrapper`1"/> class using the specified value.
            </summary>
            <param name="value">The value to wrap.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ValueWrapper`1.Equals(Skyline.DataMiner.Net.Sections.ValueWrapper{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ValueWrapper`1.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ValueWrapper`1.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ValueWrapper`1.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ValueWrapper`1.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ValueWrapper`1.Collect(System.Collections.IList)">
            <summary>
            Adds the value of this object to the specified collection.
            </summary>
            <param name="collection">The collection to add this object to.</param>
            <returns>The specified collection with this item added.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.ValueWrapperFactory">
            <summary>
            Represents a value wrapper factory.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ValueWrapperFactory.Create(System.Object)">
            <summary>
            Creates a value wrapper out of the specified object.
            </summary>
            <param name="value">The object to wrap.</param>
            <returns>The wrapped value object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">Failed to create a wrapped value object from the specified object.</exception>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.CustomSectionDefinition">
             <summary>
             Represents a custom section definition. This type of section definition can be created and updated by the user. The fields and validators are chosen freely.
             </summary>
             <example>
             <code>
             JobManagerHelper jobManagerHelper = new JobManagerHelper(msg => protocol.SLNet.RawConnection.HandleMessages(msg));
            
             var sectionDefinition = new CustomSectionDefinition
             {
             Name = "MyCustomSectionDefinition"
             };
            
             var fieldDescriptor = new FieldDescriptor
             {
            		Name = "MyStringField",
            		FieldType = typeof(string),
             	IsOptional = true,
             };
            
             sectionDefinition.AddOrReplaceFieldDescriptor(fieldDescriptor);
             sectionDefinition = jobManagerHelper.SectionDefinitions.Create(sectionDefinition) as CustomSectionDefinition;
             </code>
             </example>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.ID">
            <summary>
            Gets or sets the section definition ID.
            </summary>
            <value>The section definition ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.SectionValidators">
            <summary>
            Gets the section validators.
            </summary>
            <value>The section validators.</value>
            <remarks>
            <para>The section validators define certain restrictions or relations between fields of this section definition which that be kept valid.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.ReservationLinkInfo">
            <summary>
            Gets or sets the reservation link info.
            </summary>
            <value>The reservation link info.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.IsHidden">
            <summary>
            Gets or sets a value indicating whether this section definition is hidden.
            </summary>
            <value><c>true</c> if this section definition is hidden; otherwise, <c>false</c>.</value>
            <remarks>If <c>true</c>, the sections that use this section definition will not be displayed when a <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> is viewed.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.CustomSectionDefinition"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.SetID(Skyline.DataMiner.Net.Sections.SectionDefinitionID)">
            <summary>
            Sets the section definition ID.
            </summary>
            <param name="id">The section definition ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.GetID">
            <summary>
            Retrieves the section definition ID.
            </summary>
            <returns>The section definition ID.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.GetName">
            <summary>
            Retrieves the name of this custom section definition.
            </summary>
            <returns>The name of this custom section definition.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.GetAllFieldDescriptors">
            <summary>
            Retrieves all field descriptors.
            </summary>
            <returns>The field descriptors.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.GetAllSectionValidators">
            <summary>
            Retrieves all section validators.
            </summary>
            <returns>The section validators.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.GetReservationLinkInfo">
            <summary>
            Retrieves the reservation link info.
            </summary>
            <returns>The reservation link info.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.GetIsHidden">
            <summary>
            Retrieves a value indicating whether this section definition is hidden.
            </summary>
            <returns><c>true</c> if this section definition is hidden; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.AddOrReplaceFieldDescriptor(Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Adds or replaces the specified field descriptor.
            </summary>
            <param name="descriptor">The field descriptor to add or replace.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.RemoveFieldDescriptor(Skyline.DataMiner.Net.Sections.FieldDescriptorID)">
            <summary>
            Removes the field descriptor with the specified ID.
            </summary>
            <param name="id">The ID of the field descriptor to remove.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.Equals(Skyline.DataMiner.Net.Sections.CustomSectionDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.CustomSectionDefinition.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.ReservationLinkInfo">
            <summary>
            Represents reservation link info.
            </summary>
            <remarks>
            If a section contains links to a ReservationInstances using the <see cref="T:Skyline.DataMiner.Net.Sections.ReservationFieldDescriptor"/>, this object describes
            more details about those links.
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.ReservationLinkInfo.BookingElementID">
            <summary>
            Gets or sets the ID of the booking element.
            </summary>
            <value>The ID of the booking element.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.ReservationLinkInfo.CreateBookingScript">
            <summary>
            Gets or sets the ID of the booking script.
            </summary>
            <value>The ID of the booking script.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationLinkInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.ReservationLinkInfo"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationLinkInfo.#ctor(Skyline.DataMiner.Net.ElementID,Skyline.DataMiner.Net.AutomationScriptID)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.ReservationLinkInfo"/> class using the specified booking element ID and script.
            </summary>
            <param name="bookingElementID">The booking element ID.</param>
            <param name="createBookingScript">The create booking script.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationLinkInfo.Equals(Skyline.DataMiner.Net.Sections.ReservationLinkInfo)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationLinkInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationLinkInfo.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ReservationLinkInfo.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.SectionDefinition">
            <summary>
            Represents a section definition. A section definition defines which fields belong to a section.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinition.Skyline#DataMiner#Net#IManager#Objects#IManagerIdentifiableObject{Skyline#DataMiner#Net#Sections#SectionDefinitionID}#ID">
            <summary>
            Gets the section definition ID.
            </summary>
            <value>The section definition ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinition.Skyline#DataMiner#Net#ManagerStore#ITrackLastModified#LastModified">
            <summary>
            Gets or sets the time this definition was modified.
            </summary>
            <value>The time this definition was modified.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.GetID">
            <summary>
            Retrieves the section definition ID.
            </summary>
            <returns>The section definition ID.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.GetName">
            <summary>
            Retrieves the name of this custom section definition.
            </summary>
            <returns>The name of this custom section definition.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.GetReservationLinkInfo">
            <summary>
            Retrieves the reservation link info.
            </summary>
            <returns>The reservation link info.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.GetIsHidden">
            <summary>
            Retrieves a value indicating whether this section definition is hidden.
            </summary>
            <returns><c>true</c> if this section definition is hidden; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.GetAllFieldDescriptors">
            <summary>
            Retrieves all field descriptors.
            </summary>
            <returns>The field descriptors.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.GetAllSectionValidators">
            <summary>
            Retrieves all section validators.
            </summary>
            <returns>The section validators.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.GetFieldDescriptorById(Skyline.DataMiner.Net.Sections.FieldDescriptorID)">
            <summary>
            Retrieves the field descriptor with the specified ID.
            </summary>
            <param name="id">The field descriptor ID.</param>
            <returns>The field descriptor that corresponds with the specified ID or <see langword="null"/> if no field descriptor with the specified ID was found.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.ToJson">
            <summary>
            Retrieves the JSON representation of this <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> object.
            </summary>
            <returns>The JSON representation of this <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.FromJson(System.String)">
            <summary>
            Deserializes the specified JSON string into a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> class.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>The deserialized object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="json"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.Equals(Skyline.DataMiner.Net.Sections.SectionDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinition.ToFilter``1">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement`1"/> instance for this object.
            </summary>
            <typeparam name="T">The type of the filter element.</typeparam>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement`1"/> instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError">
            <summary>
            Represents a section definition error.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason">
            <summary>
            Defines the section definition error reason.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason.StaticSectionDefinitionsCantBeChanged">
            <summary>
            Static section definitions cannot be changed.
            </summary>
            <remarks>
            <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinition"/> of sub-type <see cref="T:Skyline.DataMiner.Net.Sections.StaticSectionDefinition"/>s can never be created/updated/deleted.
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason.FieldTypeNotSupported">
            <summary>
            Field type not supported.
            </summary>
            <remarks>
            A given type <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.NotSupportedType"/> was used as a <see cref="P:Skyline.DataMiner.Net.Sections.FieldDescriptor.FieldType"/> in <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinition"/>,
            but it is not one of the <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SupportedTypes"/>.
            
            <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.NotSupportedType"/> contains the type that is not supported</para>
            <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SupportedTypes"/> contains the supported types</para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason.SectionDefinitionInUseByJobs">
            <summary>
            Section definition in use by jobs.
            </summary>
            <remarks>
            The <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinition"/> could not be updated because it is being used by some <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.JobIDs"/>.
            /// 
            <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinition"/> contains the requested change to the section definitions</para>
            <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.OriginalSectionDefinition"/> contains the original section definitions</para>
            <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.JobIDs"/> contains the job ids</para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason.SectionDefinitionInUseByJobDomains">
             <summary>
             Section definition in use by job domains.
             </summary>
             <remarks>
             The <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinition"/> could not be deleted because it is used by at least one JobDomain.
            
             <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinition"/> contains the SectionDefinition that could not be deleted</para>
             <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.JobDomainIDs"/> contains the IDs of the JobDomains that use this SectionDefinition</para>
             </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason.GenericEnumEntryInUseByJobs">
             <summary>
             Generic enum entry in use by jobs.
             </summary>
             <remarks>
             The <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.GenericEnumEntry"/> could not be deleted or updated because it is used by at least one Job.
            
             <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.GenericEnumEntry"/> contains the GenericEnumEntry that could not be deleted or updated</para>
             <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.JobIDs"/> contains the IDs of the Jobs that could use this GenericEnumEntry</para>
             </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason.SectionDefinitionInUseByDomInstances">
            <summary>
            Section definition in use by DOM instance.
            </summary>
            <remarks>
            The <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> could not be updated because it is being used by at least one DomInstance.
            /// 
            <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinition"/> contains the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> that could not be updated</para>
            <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.OriginalSectionDefinition"/> contains the original <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/></para>
            <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.DomInstanceIds"/> contains the IDs of the DomInstances that use this <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/></para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason.SectionDefinitionInUseByDomDefinitions">
             <summary>
             Section definition in use by DOM definitions.
             </summary>
             <remarks>
             The <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> could not be deleted because it is used by at least one DomDefinition.
            
             <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinition"/> contains the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/> that could not be deleted</para>
             <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.DomDefinitionIds"/> contains the IDs of the DomDefinitions that use this <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/></para>
             </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason.GenericEnumEntryInUseByDomInstances">
             <summary>
             Generic enum entry in use by DOM instances.
             </summary>
             <remarks>
             The <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.GenericEnumEntry"/> could not be deleted or updated because it is used by at least one DomInstance.
            
             <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.GenericEnumEntry"/> contains the <see cref="T:Skyline.DataMiner.Net.GenericEnums.IGenericEnumEntry"/> that could not be deleted or updated</para>
             <para><see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.DomInstanceIds"/> contains the IDs of the DomInstances that use this <see cref="T:Skyline.DataMiner.Net.GenericEnums.IGenericEnumEntry"/></para>
             </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.ErrorReason">
            <summary>
            Gets or sets the section definition error reason.
            </summary>
            <value>The section definition error reason.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinitionID">
            <summary>
            Gets or sets the section definition ID.
            </summary>
            <value>The section definition ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SectionDefinition">
            <summary>
            Gets or sets the section definition.
            </summary>
            <value>The section definition.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.GenericEnumEntry">
            <summary>
            Gets or sets the generic enum entry.
            </summary>
            <value>The generic enum entry.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.OriginalSectionDefinition">
            <summary>
            Gets or sets the original section definition.
            </summary>
            <value>The original section definition.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.NotSupportedType">
            <summary>
            Gets or sets the unsupported type.
            </summary>
            <value>The unsupported type.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.FieldDescriptors">
            <summary>
            Gets or sets the field descriptors.
            </summary>
            <value>The field descriptors.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.SupportedTypes">
            <summary>
            Gets or sets the supported types.
            </summary>
            <value>The supported types.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.JobIDs">
            <summary>
            Gets or sets the job IDs.
            </summary>
            <value>The job IDs.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.JobDomainIDs">
            <summary>
            Gets or sets the job domain IDs.
            </summary>
            <value>The job domain IDs.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.DomInstanceIds">
            <summary>
            Gets or sets the DOM instance IDs.
            </summary>
            <value>The job DOM instance IDs.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionError.DomDefinitionIds">
            <summary>
            Gets or sets the DOM definition IDs.
            </summary>
            <value>The job DOM definition IDs.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionError.#ctor(Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason,Skyline.DataMiner.Net.Sections.SectionDefinitionID)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError"/> class with the specified error reason and section definition ID.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="id">The section definition ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionError.#ctor(Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason,System.Type,System.Collections.Generic.List{System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError"/> class with the specified error reason, the unsupported type and the supported types.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="notSupportedType">The unsupported type.</param>
            <param name="supportedTypes">The supported types.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionError.#ctor(Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason,Skyline.DataMiner.Net.Sections.SectionDefinition,System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.JobID})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError"/> class using the specified error reason, section definition and jobs.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="sectionDefinition">The section definition.</param>
            <param name="jobs">The jobs.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionError.#ctor(Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError"/> class using the specified error reason.
            </summary>
            <param name="errorReason">The error reason.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionError.#ctor(Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason,Skyline.DataMiner.Net.Sections.SectionDefinition,Skyline.DataMiner.Net.Sections.SectionDefinition,System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.JobID})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError"/> class with the specified error reason, the original section definition, the section definition and jobs.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="originalSectionDefinition">The original section definition.</param>
            <param name="sectionDefinition">The section definition.</param>
            <param name="jobs">The jobs.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionError.#ctor(Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason,Skyline.DataMiner.Net.Sections.SectionDefinition,System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.JobDomainID})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError"/> class with the specified error reason, section definition and job domain IDs.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="sectionDefinition">The section definition.</param>
            <param name="jobDomainIDs">The job domain IDs.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionError.#ctor(Skyline.DataMiner.Net.Sections.SectionDefinitionError.Reason,Skyline.DataMiner.Net.GenericEnums.IGenericEnumEntry,System.Collections.Generic.List{Skyline.DataMiner.Net.Jobs.JobID})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionError"/> class with the specified error reason, generic enum entry and job IDs.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="genericEnumEntry">The generic enum entry.</param>
            <param name="jobIds">The job IDs.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionError.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers">
            <summary>
            Defines section definition exposers that can be used to create SectionDefinition filters.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers.ID">
            <summary>
            ID exposer.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers.Name">
            <summary>
            Name exposer.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers.FieldDescriptorIDs">
            <summary>
            Field descriptor IDs exposer.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers.FieldDescriptorNames">
            <summary>
            Field descriptor names exposer.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers.TableName">
            <summary>
            The table name.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers.CreateFullTableDefinition">
            <summary>
            Creates a full table definition.
            </summary>
            <returns>The full table definition.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers.CreateFullTableDefinitionForDomManager(System.String)">
            <summary>
            Create a full table definition for DOM manager.
            </summary>
            <param name="moduleId">The module ID.</param>
            <returns>The full table definition for DOM manager.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers.CreateFullTableDefinition(System.String)">
            <summary>
            Create a full table definition using the specified table name..
            </summary>
            <param name="tableName">The table name.</param>
            <returns>The full table definition.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionExposers.Initialize">
            <summary>
            Initializes the exposers.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.SectionDefinitionExposerExtensions">
            <summary>
            Defines extension methods for <see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer`2"/>.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionExposerExtensions.Equal(Skyline.DataMiner.Net.Messages.SLDataGateway.Exposer{Skyline.DataMiner.Net.Sections.SectionDefinition,System.Guid},Skyline.DataMiner.Net.Sections.SectionDefinitionID)">
            <summary>
            Equal exposer extension.
            </summary>
            <param name="idExposer">The ID exposer.</param>
            <param name="id">The section definition ID.</param>
            <returns>A ManagedFilter&lt;SectionDefinition, Guid&gt; instance.</returns>
            <example>
            <code>
            JobManagerHelper jobManagerHelper = new JobManagerHelper(msg => protocol.SLNet.RawConnection.HandleMessages(msg));
            
            var sectionDefinition = jobManagerHelper.SectionDefinitions.Read(SectionDefinitionExposers.Name.Equal("MyCustomSectionDefinition")).FirstOrDefault() as CustomSectionDefinition;
            </code>
            </example>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.SectionDefinitionID">
            <summary>
            Represents a section definition ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionID.Id">
            <summary>
            Gets the GUID.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionDefinitionID.ModuleId">
            <summary>
            Gets or sets the module ID.
            </summary>
            <value>The module ID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionID.#ctor">
             <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionID"/> class.
             </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionID.#ctor(System.Guid)">
             <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionID"/> class using the specified GUID.
             </summary>
             <param name="id">The section definition ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionID.Build(Skyline.DataMiner.Net.Ownership.SimpleByteReader)">
            <summary>
            Creates a new <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptorID"/> instance from the specified <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/>.
            </summary>
            <param name="reader">The <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/> instance.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Sections.FieldDescriptorID"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string that represents the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
            <remarks>The resulting string is formatted as follows: "SectionDefinitionID_[GUID]", where [GUID] represents the value of the <see cref="P:Skyline.DataMiner.Net.Sections.SectionDefinitionID.Id"/> property.</remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.SectionDefinitionNotAttachedException">
            <summary>
            The exception that is thrown when a section definition is not attached.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionNotAttachedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionNotAttachedException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionNotAttachedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionNotAttachedException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionDefinitionNotAttachedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinitionNotAttachedException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not <see langword="null"/>, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition">
            <summary>
            Represents a default Job section definition containing the fields "Name", "Start Time" and "End Time".
            </summary>
            <remarks>Every <see cref="T:Skyline.DataMiner.Net.Jobs.Job"/> is required to have exactly one section that uses this section definition.</remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.NameFieldDescriptorID">
            <summary>
            The descriptor ID of the name field.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.StartTimeFieldDescriptorID">
            <summary>
            The descriptor ID of the start time field.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.EndTimeFieldDescriptorID">
            <summary>
            The descriptor ID of the end time field.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.DefaultJobSectionID">
            <summary>
            The section definition ID of the default Job section.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.Instance">
            <summary>
            Gets a new instance of <see cref="T:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition"/>.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.GetDefaultID">
            <summary>
            Retrieves the default section ID.
            </summary>
            <returns>The default section ID.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.GetDefaultName">
            <summary>
            Retrieves the default name.
            </summary>
            <returns>The default name.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.GetDefaultFieldDescriptors">
            <summary>
            Retrieves the default field descriptors.
            </summary>
            <returns>The default field descriptors.</returns>
            <remarks>The default field descriptors are "Name", "Start Time" and "End Time".</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.GetDefaultSectionValidators">
            <summary>
            Retrieves the default section validators.
            </summary>
            <returns>The default section validators.</returns>
            <remarks>The default validators consist of a <see cref="T:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator"/> for validating the start time and end time.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.Equals(Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionDefinition.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.DefaultJobSectionExtensions">
             <summary>
             Defines extension methods on <see cref="T:Skyline.DataMiner.Net.Sections.ISectionContainer"/>.
             </summary>
             <example>
             <para>The following example retrieves the name of the Job with the specified Job ID.</para>
             <code>
             private string GetJobNameByID(JobManagerHelper helper, Guid jobId)
             {
            		var jobs = helper.Jobs.Read(JobExposers.ID.Equal(jobId));
            		
            		if (jobs.Count == 0)
            		{
            			return null;
            		}
            		
            		Job job = jobs.First();
            
            		return job.GetJobName();
             }
             </code>
             </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionExtensions.GetJobName(Skyline.DataMiner.Net.Jobs.Job)">
            <summary>
            Gets the job name that is set in the default job section definition of the specified section container.
            </summary>
            <param name="job">The job.</param>
            <returns>The job name or an empty string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionExtensions.GetJobStartTime(Skyline.DataMiner.Net.Jobs.Job)">
            <summary>
            Gets the start time that is set in the default job section definition of the specified section container.
            </summary>
            <param name="job">The job.</param>
            <returns>The start time or <see langword="null"/>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionExtensions.GetJobEndTime(Skyline.DataMiner.Net.Jobs.Job)">
            <summary>
            Gets the end time that is set in the default job section definition of the specified section container.
            </summary>
            <param name="job">The job.</param>
            <returns>The end time or <see langword="null"/>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionExtensions.SetJobName(Skyline.DataMiner.Net.Jobs.Job,System.String)">
            <summary>
            Sets the job name of the section container to the specified string.
            </summary>
            <param name="job">The job.</param>
            <param name="name">The job name.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionExtensions.SetJobStartTime(Skyline.DataMiner.Net.Jobs.Job,System.DateTime)">
            <summary>
            Sets the job start time of the section container to the specified string.
            </summary>
            <param name="job">The job.</param>
            <param name="start">The start time.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.DefaultJobSectionExtensions.SetJobEndTime(Skyline.DataMiner.Net.Jobs.Job,System.DateTime)">
            <summary>
            Sets the job end time of the section container to the specified string.
            </summary>
            <param name="job">The job.</param>
            <param name="end">The end time.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.StaticSectionDefinition">
            <summary>
            Represents a section definition that can only be changed under certain conditions.
            </summary>
            <remarks>
            Most of the structure of these section definitions is enforced by the server.
            The allowed changes on these section definitions are:
            <list type="bullet">
            <item>
               <description>The name of the section definition</description>
            </item>
            <item>
               <description>The name of its fields</description>  
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.CustomFieldNames">
            <summary>
            Gets the custom field names.
            </summary>
            <value>The custom field names.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.Registry">
            <summary>
            Gets the static section definition registry.
            </summary>
            <value>The static section definition registry.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetAllFieldDescriptors">
            <summary>
            Retrieves all field descriptors of this section definition.
            </summary>
            <returns>All field descriptors of this section definition.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetAllSectionValidators">
            <summary>
            Retrieves all section validators.
            </summary>
            <returns>The section validators.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetName">
            <summary>
            Retrieves the name of this section definition.
            </summary>
            <returns>The name of this section definition.</returns>
            <remarks>This call returns the custom name. If no custom name was specified, the default name is returned.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetID">
            <summary>
            Retrieves the section definition ID.
            </summary>
            <returns>The section definition ID.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetReservationLinkInfo">
            <summary>
            Retrieves the reservation link info.
            </summary>
            <returns>The reservation link info.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetIsHidden">
            <summary>
            Retrieves a value indicating whether this section definition is hidden.
            </summary>
            <returns><c>true</c> if this section definition is hidden; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetDefaultID">
            <summary>
            Retrieves the default section definition ID.
            </summary>
            <returns>The default section definition ID.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetDefaultName">
            <summary>
            Retrieves the default name.
            </summary>
            <returns>The default name.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetDefaultFieldDescriptors">
            <summary>
            Retrieves the default field descriptors.
            </summary>
            <returns>The default field descriptors.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetDefaultSectionValidators">
            <summary>
            Retrieves the default section validators.
            </summary>
            <returns>The default section validators.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.SetCustomFieldName(Skyline.DataMiner.Net.Sections.FieldDescriptorID,System.String)">
            <summary>
            Sets the custom name of the specified field descriptor.
            </summary>
            <param name="fieldDescriptor">The field descriptor for which the custom name should be set.</param>
            <param name="name">The custom name.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="name"/> is null, empty or whitespace</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.RemoveCustomFieldName(Skyline.DataMiner.Net.Sections.FieldDescriptorID)">
            <summary>
            Removes the custom field name of the specified field descriptor.
            </summary>
            <param name="fieldDescriptor">The field descriptor for which to remove the custom name.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.SetCustomName(System.String)">
            <summary>
            Sets the custom name of this section definition.
            </summary>
            <param name="customName">The custom name.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.Equals(Skyline.DataMiner.Net.Sections.StaticSectionDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.StaticSectionDefinition.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.ISectionContainer">
            <summary>
            Represents a container for sections.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ISectionContainer.GetSections">
            <summary>
            Retrieves the sections.
            </summary>
            <returns>The sections.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ISectionContainer.SetSections(System.Collections.Generic.IEnumerable{Skyline.DataMiner.Net.Sections.Section})">
            <summary>
            Sets the sections.
            </summary>
            <param name="sections">The sections.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.Section">
            <summary>
            Represents a Job section. A section is a grouping of fields.
            </summary>
            <remarks>A section has a reference to its corresponding <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/>, which defines which fields (<see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/>) can or must go in the section.</remarks>
            <example>
            <code>
            JobManagerHelper jobManagerHelper = new JobManagerHelper(msg => protocol.SLNet.RawConnection.HandleMessages(msg));
            
            var sectionDefinition = jobManagerHelper.SectionDefinitions.Read(SectionDefinitionExposers.Name.Equal("MyCustomSectionDefinition")).FirstOrDefault() as CustomSectionDefinition;
            var fieldDescriptor = sectionDefinition.GetAllFieldDescriptors().FirstOrDefault(x => x.Name == "MyStringField");
            
            var section = new Section(sectionDefinition);
            section.AddOrUpdateValue(fieldDescriptor, "My field value.");
            </code>
            </example>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.Section.ID">
            <summary>
            Gets or sets the section ID.
            </summary>
            <value>The section ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.Section.FieldValues">
            <summary>
            Gets the field values.
            </summary>
            <value>The field values.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.Section.SectionDefinitionID">
            <summary>
            Gets or sets the section definition ID.
            </summary>
            <value>The section definition ID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.#ctor(Skyline.DataMiner.Net.Sections.SectionDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> class using the specified section definition.
            </summary>
            <param name="existingSectionDefinition">The section definition.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="existingSectionDefinition"/> is <see langword="null"/>.</exception>
            <remarks>As the corresponding section definition is provided, this section will be already stitched.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.#ctor(Skyline.DataMiner.Net.Sections.SectionDefinitionID)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> class using the specified section definition ID.
            </summary>
            <param name="sectionDefinitionID">Section definition ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.GetSectionDefinition">
            <summary>
            Retrieves the section definition.
            </summary>
            <returns>The section definition.</returns>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">This section was not yet stitched to a section definition.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.GetFieldValueById(Skyline.DataMiner.Net.Sections.FieldDescriptorID)">
            <summary>
            Retrieves the field value of the field with the specified ID.
            </summary>
            <param name="id">The ID of the field descriptor.</param>
            <returns>The field value or <see langword="null"/> if no field with the specified ID is found.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.RemoveFieldValueById(Skyline.DataMiner.Net.Sections.FieldDescriptorID)">
            <summary>
            Removes all field values with the specified field descriptor ID.
            </summary>
            <param name="id">The field descriptor ID.</param>
            <returns><c>true</c> if field values have been removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.AddOrReplaceFieldValue(Skyline.DataMiner.Net.Sections.FieldValue)">
            <summary>
            Adds or replaces the specified field value.
            </summary>
            <param name="value">The field value to add or replace.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.Stitch(System.Func{Skyline.DataMiner.Net.Sections.SectionDefinitionID,Skyline.DataMiner.Net.Sections.SectionDefinition})">
            <summary>
            Stitches this section with the corresponding section definition.
            </summary>
            <param name="sectionDefinitionProvider">A section definition provider.</param>
            <remarks>This method call will also stitch all field values of the corresponding field descriptors.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.ToJson">
            <summary>
            Retrieves the JSON representation of this <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> object.
            </summary>
            <returns>The JSON representation of this <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.FromJson(System.String)">
            <summary>
            Deserializes the specified JSON string into a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> class.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>The deserialized object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="json"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/>  with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> class using the specified serialization info and streaming context.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.Equals(Skyline.DataMiner.Net.Sections.Section)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.Section.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.SectionID">
            <summary>
            Represents a section ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.SectionID.Id">
            <summary>
            Gets the GUID.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionID.#ctor">
             <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionID"/> class.
             </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionID.#ctor(System.Guid)">
             <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.SectionID"/> class using the specified GUID.
             </summary>
             <param name="id">The section ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionID.Build(Skyline.DataMiner.Net.Ownership.SimpleByteReader)">
            <summary>
            Creates a new <see cref="T:Skyline.DataMiner.Net.Sections.SectionID"/> instance from the specified <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/>.
            </summary>
            <param name="reader">The <see cref="T:Skyline.DataMiner.Net.Ownership.SimpleByteReader"/> instance.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Sections.SectionID"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string that represents the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
            <remarks>The resulting string is formatted as follows: "SectionID_[GUID]", where [GUID] represents the value of the <see cref="P:Skyline.DataMiner.Net.Sections.SectionID.Id"/> property.</remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.SectionUtils">
            <summary>
            Defines extension methods on <see cref="T:Skyline.DataMiner.Net.Sections.ISectionContainer"/> and <see cref="T:Skyline.DataMiner.Net.Sections.Section"/>.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionUtils.AddOrUpdateFieldValue``1(Skyline.DataMiner.Net.Sections.ISectionContainer,Skyline.DataMiner.Net.Sections.SectionDefinition,Skyline.DataMiner.Net.Sections.FieldDescriptor,``0)">
            <summary>
            Adds or updates the specified field of the specified section in the specified container to the specified value.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="container">The section container.</param>
            <param name="sectionDefinition">The section definition.</param>
            <param name="fieldDescriptor">The field descriptor.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="container"/>, <paramref name="sectionDefinition"/> or <paramref name="fieldDescriptor"/> is <see langword="null"/>.</exception>
            <remarks>The first <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> found for the given <paramref name="sectionDefinition"/> gets <paramref name="value"/> as its value for <paramref name="fieldDescriptor"/>. If no <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> is found, a new one is created and added.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionUtils.AddOrUpdateValue``1(Skyline.DataMiner.Net.Sections.Section,Skyline.DataMiner.Net.Sections.FieldDescriptor,``0)">
            <summary>
            Adds or updates the value of the specified field of the specified section.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="section">The section that holds the field.</param>
            <param name="fieldDescriptor">The field descriptor ID of the field to add or update.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="section"/> or <paramref name="fieldDescriptor"/> is <see langword="null"/>.</exception>
            <remarks>Adds or updates the specified <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> with a <see cref="T:Skyline.DataMiner.Net.Sections.FieldValue"/> that points to the given <paramref name="fieldDescriptor"/> and contains a <see cref="T:Skyline.DataMiner.Net.Sections.ValueWrapper`1"/> with value <paramref name="value"/>.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionUtils.GetFieldValue``1(Skyline.DataMiner.Net.Sections.ISectionContainer,Skyline.DataMiner.Net.Sections.SectionDefinition,Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Retrieves the field value of the specified field in the specified section in the specified container.
            </summary>
            <typeparam name="T">The type to use for the returned <see cref="T:Skyline.DataMiner.Net.Sections.ValueWrapper`1"/> instance.</typeparam>
            <param name="container">The section container.</param>
            <param name="sectionDefinition">The section definition.</param>
            <param name="fieldDescriptor">The field descriptor.</param>
            <returns>The value or <see langword="null" /> if the field was not found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="container"/>, <paramref name="sectionDefinition"/> or <paramref name="fieldDescriptor"/> is <see langword="null"/>.</exception>
            <remarks>Returns the value of the first <see cref="T:Skyline.DataMiner.Net.Sections.Section"/> for the given <paramref name="sectionDefinition"/>.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.SectionUtils.GetValue``1(Skyline.DataMiner.Net.Sections.Section,Skyline.DataMiner.Net.Sections.FieldDescriptorID)">
            <summary>
            Returns the <see cref="T:Skyline.DataMiner.Net.Sections.ValueWrapper`1"/> for the specified <paramref name="fieldDescriptorID"/>.
            </summary>
            <typeparam name="T">The type to use for the returned <see cref="T:Skyline.DataMiner.Net.Sections.ValueWrapper`1"/> instance.</typeparam>
            <param name="section">The section that holds the field.</param>
            <param name="fieldDescriptorID">The field descriptor ID of the field to retrieve.</param>
            <returns>The value or <see langword="null" /> if the field was not found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="section"/> or <paramref name="fieldDescriptorID"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.EmailAddressValidator">
            <summary>
            Represents an e-mail address validator.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.EmailAddressValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.EmailAddressValidator"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.EmailAddressValidator.Validate(Skyline.DataMiner.Net.Sections.IValueWrapper,Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Validates the specified value against the specified field descriptor.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="descriptor">The field descriptor to validate against.</param>
            <returns><c>true</c> if the specified value validates against the specified field descriptor; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.EmailAddressValidator.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.EmailAddressValidator.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.EmailAddressValidator.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.EmailAddressValidator.Equals(Skyline.DataMiner.Net.Sections.EmailAddressValidator)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.GenericEnumValidator">
            <summary>
            Represents a generic enum validator.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.GenericEnumValidator"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumValidator.Validate(Skyline.DataMiner.Net.Sections.IValueWrapper,Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Validates the specified value against the specified field descriptor.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="descriptor">The field descriptor to validate against.</param>
            <returns><c>true</c> if the specified value validates against the specified field descriptor; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumValidator.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumValidator.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumValidator.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.GenericEnumValidator.Equals(Skyline.DataMiner.Net.Sections.GenericEnumValidator)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.IFieldValidator">
            <summary>
            Represents a field validator.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.IFieldValidator.Validate(Skyline.DataMiner.Net.Sections.IValueWrapper,Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Validates the specified value against the specified field descriptor.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="descriptor">The field descriptor to validate against.</param>
            <returns><c>true</c> if the specified value validates against the specified field descriptor; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.ISectionValidator">
            <summary>
            Section validator interface.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.ISectionValidator.Validate(Skyline.DataMiner.Net.Sections.Section)">
            <summary>
            Validates the specified section.
            </summary>
            <param name="section">The section to validate.</param>
            <returns><c>true</c> if the specified section validates against this validator; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.RegexValidator">
            <summary>
            Represents a validator that validates against a regular expression.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.RegexValidator.RegexPattern">
            <summary>
            Gets or sets the regular expression pattern.
            </summary>
            <value>The regular expression pattern.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.RegexValidator.RegexOptions">
            <summary>
            Gets or sets the regular expression options.
            </summary>
            <value>The regular expression options.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RegexValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.RegexValidator"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RegexValidator.Validate(Skyline.DataMiner.Net.Sections.IValueWrapper,Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Validates the specified value against the specified field descriptor.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="descriptor">The field descriptor to validate against.</param>
            <returns><c>true</c> if the specified value validates against the specified field descriptor; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RegexValidator.Equals(Skyline.DataMiner.Net.Sections.RegexValidator)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RegexValidator.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RegexValidator.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.RegexValidator.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator">
            <summary>
            Represents a time range validator. This validator defines that there are two <see cref="T:System.DateTime"/> fields in the <see cref="T:Skyline.DataMiner.Net.Sections.SectionDefinition"/>, where one represents the start time and the other the end time. This validator validates whether the end time is always later than the start time.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator.StartTimeID">
            <summary>
            Gets or sets the field descriptor ID of the start time field.
            </summary>
            <value>The field descriptor ID of the start time field.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator.EndTimeID">
            <summary>
            Gets or sets the field descriptor ID of the end time field.
            </summary>
            <value>The field descriptor ID of the end time field.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator.#ctor(Skyline.DataMiner.Net.Sections.FieldDescriptorID,Skyline.DataMiner.Net.Sections.FieldDescriptorID)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator"/> class with the specified start and end time.
            </summary>
            <param name="startTimeID">The field descriptor ID of the start time field.</param>
            <param name="endTimeID">The field descriptor ID of the end time field.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator.Validate(Skyline.DataMiner.Net.Sections.Section)">
            <summary>
            Validates the specified section.
            </summary>
            <param name="section">The section to validate.</param>
            <returns><c>true</c> if the specified section validates against this validator; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator.Equals(Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.TimeRangeSectionValidator.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.UriValidator">
            <summary>
            Represents a URI validator.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.UriValidator.Kind">
            <summary>
            Gets or sets the kind of URI.
            </summary>
            <value>The kind of URI.</value>
            <remarks>
            <c>System.UriKind</c> to check:
            <list type="bullet">
                <item><description>System.UriKind.Absolute</description></item>
                <item><description>System.UriKind.Relative</description></item>
                <item><description>System.UriKind.RelativeOrAbsolute</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.UriValidator.AcceptedUriSchemes">
            <summary>
            Gets or sets the accepted URI schemes.
            </summary>
            <value>The accepted URI schemes.</value>
            <remarks>
            Set of accepted uri schemes.
            <list type="bullet">
                <item><description>System.Uri.UriSchemeFile</description></item>
                <item><description>System.Uri.UriSchemeFtp</description></item>
                <item><description>System.Uri.UriSchemeGopher</description></item>
                <item><description>System.Uri.UriSchemeHttp</description></item>
                <item><description>System.Uri.UriSchemeHttps</description></item>
                <item><description>System.Uri.UriSchemeMailto</description></item>
                <item><description>System.Uri.UriSchemeNetPipe</description></item>
                <item><description>System.Uri.UriSchemeNetTcp</description></item>
                <item><description>System.Uri.UriSchemeNews</description></item>
                <item><description>System.Uri.UriSchemeNntp</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Sections.UriValidator.CheckWellFormed">
            <summary>
            Gets or sets the value indicating whether this validator checks for well-formedness.
            </summary>
            <value><c>true</c> to check for well-formedness; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UriValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.UriValidator"/> class.
            </summary>
            <remarks>The instance created by this constructor allows relative or absolute URIs, does not check for well-formedness and has no schemes set.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UriValidator.#ctor(System.UriKind,System.Collections.Generic.HashSet{System.String},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.UriValidator"/> class using the specified URI kinds and schemes allowed and well-formedness indication.
            </summary>
            <param name="uriKind">The kind of URIs allowed.</param>
            <param name="acceptedUriSchemes">The accepted URI schemes.</param>
            <param name="checkWellFormed"><c>true</c> to check for well-formedness; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UriValidator.Validate(Skyline.DataMiner.Net.Sections.IValueWrapper,Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Validates the specified value against the specified field descriptor.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="descriptor">The field descriptor to validate against.</param>
            <returns><c>true</c> if the specified value validates against the specified field descriptor; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UriValidator.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UriValidator.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UriValidator.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UriValidator.Equals(Skyline.DataMiner.Net.Sections.UriValidator)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Sections.UserNameValidator">
            <summary>
            Represents a validator for validating user names.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UserNameValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Sections.UserNameValidator"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UserNameValidator.Validate(Skyline.DataMiner.Net.Sections.IValueWrapper,Skyline.DataMiner.Net.Sections.FieldDescriptor)">
            <summary>
            Validates the specified value against the specified field descriptor.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="descriptor">The field descriptor to validate against.</param>
            <returns><c>true</c> if the specified value validates against the specified field descriptor; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UserNameValidator.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UserNameValidator.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UserNameValidator.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Sections.UserNameValidator.Equals(Skyline.DataMiner.Net.Sections.UserNameValidator)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.ServiceProfiles.ServiceProfileDefinitionCrudHelperComponent">
            <summary>
            Service profile definition CRUD helper.
            </summary>
            <remarks>Feature introduced in DataMiner 10.0.8 (RN 25515).</remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.ServiceProfiles.ServiceProfileInstanceCrudHelperComponent">
            <summary>
            Service profile instance CRUD helper.
            </summary>
            <remarks>Feature introduced in DataMiner 10.0.8 (RN 25515).</remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Tickets.TicketingHelper">
            <summary>
            Ticketing helper class.
            </summary>
            <remarks>
            <para>Feature introduced in DataMiner 9.6.4 (RN 20344).</para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingHelper.TicketAttachmentFolderName">
            <summary>
            Ticket attachments folder name.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingHelper.TicketAttachmentFilePath">
            <summary>
            Ticket attachments file path.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingHelper.Tickets">
            <summary>
            Gets the tickets.
            </summary>
            <value>The tickets.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingHelper.TicketFieldResolvers">
            <summary>
            Gets the ticket field resolver CRUD helper component.
            </summary>
            <value>The ticket field resolver CRUD helper component.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingHelper.TicketHistories">
            <summary>
            Gets the ticket histories.
            </summary>
            <value>The ticket histories.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingHelper.Attachments">
            <summary>
            Gets the attachments.
            </summary>
            <value>The attachments.</value>
            <remarks>
            <para>Feature introduced in DataMiner 10.0.8 (RN 25612).</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingHelper.#ctor(System.Func{Skyline.DataMiner.Net.Messages.DMSMessage[],Skyline.DataMiner.Net.Messages.DMSMessage[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Tickets.TicketingHelper"/> class.
            </summary>
            <param name="messageHandler">The message handler.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingHelper.SendDriverSync(Skyline.DataMiner.Net.ElementID,System.DateTime,System.Collections.Generic.List{System.Tuple{System.DateTime,Skyline.DataMiner.Net.Ticketing.Ticket}})">
            <summary>
            Synchronizes tickets to an external system.
            </summary>
            <param name="id">The element ID of the element running the Ticketing protocol.</param>
            <param name="timeStamp">The time stamp of the last polling cycle to the external ticketing system.</param>
            <param name="managerObjects">The tickets to save or merge on the DataMiner Agent.</param>
            <returns>The merged tickets.</returns>
            <remarks>
            <para>Method used when syncing tickets to an external system. The DriverSyncer will check and return all latest changes related to a resolver linked to the given ElementID. When a list of tickets is given, these tickets will be saved or merged on the DMA. The merged tickets will also be returned.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingHelper.DeleteMaskedTicketFieldResolver(System.Guid)">
            <summary>
            Removes the specified masked ticket field resolvers and all tickets linked to that resolver.
            </summary>
            <param name="ticketFieldResolverGuid">The GUID of the masked ticket domain.</param>
            <returns>Output string with notifications and/or errors that occurred.</returns>
            <remarks>
            <para>An error will be returned in the following cases:</para>
            <list type="bullet">
            <item>
            	<description>If the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> does not exist.</description>
            </item>
            <item>
            	<description>If the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> is not masked.</description>
            </item>
            <item>
            	<description>If the user has not been granted the “Ticketing Gateway/Configure” permission.</description>
            </item>
            <item>
            	<description>If something went wrong while deleting the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> or any of the linked tickets.</description>
            </item>
            </list>
            <para>Feature introduced in DataMiner 9.6.10 (RN 22403).</para>
            </remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Tickets.TicketingManagerError">
            <summary>
            Represents an error that occurred during CRUD operations with the Ticketing manager.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason.TicketFieldResolverInUseByTickets">
             <summary>
             The TicketFieldResolver still has tickets linked to it.
            
             <see cref="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.RelatedTickets"/> contains the ticket IDs
             </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason.NotInitialized">
            <summary>
            The manager has not been initialized.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason.LegacyError">
             <summary>
             Error reason for legacy error messages.
            
             <see cref="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.LegacyErrorMessage"/> contains the error message
             </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason.TicketLinkedToNonExistingTicketFieldResolver">
             <summary>
             The ticket that is created/updated has a link to
             a TicketFieldResolver that does not exist
            
             <see cref="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.TicketFieldResolverId"/> contains the ID of
             the nonexistent TicketFieldResolver
             </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason.TicketFieldResolverIsUnknownOrNotMasked">
            <summary>
            The TicketFieldResolver that was tried to be removed
            does not exist, or is not masked
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason.UnexpectedException">
             <summary>
             An unexpected exception occurred.
            
             <see cref="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Exception"/> contains the exception
             </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason.TicketLinkedToMaskedTicketFieldResolver">
            <summary>
            The ticket that is created/updated has a link to
            a TicketFieldResolver that is masked
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason.TicketDoesNotContainStateField">
            <summary>
            The ticket is linked to a TicketFieldResolver that defines a StateFieldDescriptor,
            but no field for this descriptor was found on the ticket, or the value was null for this field.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason.TicketFieldDescriptorNamesContainInvalidCharacters">
            <summary>
            The FieldName of a TicketFieldDescriptor contains invalid characters. 
            <see cref="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.InvalidTicketFieldDescriptorNames"/> contains the invalid TicketFieldDescriptor names
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.ErrorReason">
            <summary>
            Gets or sets the error reason.
            </summary>
            <value>The error reason.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.RelatedTickets">
            <summary>
            Gets or sets the related tickets.
            </summary>
            <value>The related tickets.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.TicketFieldResolverId">
            <summary>
            Gets or sets the ticket field resolver ID.
            </summary>
            <value>The ticket field resolver ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.LegacyErrorMessage">
            <summary>
            Gets or sets the legacy error message.
            </summary>
            <value>The legacy error message.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.InvalidTicketFieldDescriptorNames">
            <summary>
            Gets or sets the invalid ticket field descriptor names.
            </summary>
            <value>The invalid ticket field descriptor names.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingManagerError.#ctor(Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason,System.Collections.Generic.List{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Tickets.TicketingManagerError"/> class with the specified error reason and the related tickets.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="relatedTickets">The related tickets.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingManagerError.#ctor(Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Tickets.TicketingManagerError"/> class with the specified error reason and the ticket field resolver ID.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="ticketFieldResolverId">The ticket field resolver ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingManagerError.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Tickets.TicketingManagerError"/> class with the specified legacy error message.
            </summary>
            <param name="legacyErrorMessage">The legacy error message.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingManagerError.#ctor(Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Tickets.TicketingManagerError"/> class with the specified error reason.
            </summary>
            <param name="errorReason">The error reason.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingManagerError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Tickets.TicketingManagerError"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingManagerError.#ctor(Skyline.DataMiner.Net.Tickets.TicketingManagerError.Reason,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Tickets.TicketingManagerError"/> class with the specified error reason invalid characters.
            </summary>
            <param name="errorReason">The error reason.</param>
            <param name="ticketsInvalidCharacters">The invalid characters.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Tickets.TicketingManagerError.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem">
            <summary>
            Represents an item of a tree view control.
            </summary>
            <example>
            <code>
            var treeViewItem = new TreeViewItem("displayValue", "keyValue", false) { CheckingBehavior = TreeViewItem.TreeViewItemCheckingBehavior.None };
            </code>
            </example>
        </member>
        <member name="P:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.ChildItems">
            <summary>
            Gets or sets the items that are child items of this item.
            </summary>
            <value>The items that are child items of this item, if any.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.ItemType">
            <summary>
            Gees or sets the item type.
            </summary>
            <value>The item type.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.IsChecked">
            <summary>
            Gets or sets a value indicating whether the item is selected.
            </summary>
            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>
            <remarks>Do not fill in this property for TreeViewItems that have child items.The selection of such a parent item depends on the selected child items. If some of the child items are selected, the parent item is only partially selected and its value will not be included in the destination variable. If all child items are selected, the parent item is automatically also selected.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.IsCollapsed">
            <summary>
            Gets or sets a value indicating whether the item is collapsed.
            </summary>
            <value><c>true</c> if collapsed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.DisplayValue">
            <summary>
            Gets or sets the string value displayed for this item in the UI.
            </summary>
            <value>The string value displayed for this item in the UI.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.KeyValue">
            <summary>
            Gets or sets the string value that is used as a key to retrieve the selected state of the item.
            </summary>
            <value>The string value that is used as a key to retrieve the selected state of the item. This is the value that will be used in the destination variable.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.#ctor(System.String,System.String,System.Collections.Generic.List{Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem"/> class.
            </summary>
            <param name="displayValue">The display value.</param>
            <param name="keyValue">The key value.</param>
            <param name="childItems">The child items.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.#ctor(System.String,System.String,System.Boolean,System.Collections.Generic.List{Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem"/> class.
            </summary>
            <param name="displayValue">The display value.</param>
            <param name="keyValue">The key value.</param>
            <param name="isChecked">Indication of whether the item is selected by default.</param>
            <param name="childItems">The child items.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.ToCode">
            <summary>
            Returns a string representation of this dialog box item.
            </summary>
            <returns>A string representation of this dialog box item.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.FromCode(System.String)">
            <summary>
            Parses the specified string and returns the corresponding <see cref="T:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem"/> instance.
            </summary>
            <returns>A new <see cref="T:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem"/> instance that corresponds with the specified string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.Equals(Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.TreeViewItemType">
            <summary>
            Specifies the tree view item type.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.TreeViewItemType.Empty">
            <summary>
            Empty.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.AutomationUI.Objects.TreeViewItem.TreeViewItemType.CheckBox">
            <summary>
            Checkbox.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Automation.AutomationEntryPoint">
            <summary>
            Represents an Automation entry point.
            </summary>
            <remarks>
            <para>This type is used in the ExecuteScriptMessage to specify a custom entry point. For more information on how to define a custom entry point method, see AutomationEntryPointAttribute class.</para>
            </remarks>
            <example>
            <code>
            var customEntryPoint = new Skyline.DataMiner.Net.Automation.AutomationEntryPoint();
            
            customEntryPoint.EntryPointType = Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.AutomationEntryPointTest;
            customEntryPoint.Parameters.AddRange(new object[] { "message", new List&lt;int&gt;() { 1, 2, 3, 4, 5 } });
            
            var executeScriptMessage = new ExecuteScriptMessage() { CustomEntryPoint = customEntryPoint, ScriptName = SCRIPT_NAME };
            </code>
            </example>
        </member>
        <member name="T:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types">
            <summary>
            Defines the entry point types.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.SRMServiceInfoStateChanges">
            <summary>
            SRM service info state changes.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.OnSrmQuarantineTrigger">
            <summary>
            An OnSrmQuarantineTrigger entry point is defined with:
            [AutomationEntryPoint(AutomationEntryPointType.Types.SrmQuarantineTrigger)]
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.OnSrmStartActionsFailure">
            <summary>
            An OnSrmStartActionsFailure entry point is defined with:
            [AutomationEntryPoint(AutomationEntryPointType.Types.OnSrmStartActionsFailure)]
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.InstallAppPackage">
            <summary>
            App package installation script
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.ConfigureApp">
            <summary>
            App package configure script
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.UninstallApp">
            <summary>
            App package uninstallation script
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.OnSrmBookingsUpdatedByReference">
            <summary>
            An OnSrmBookingsUpdatedByReference entry point is defined with:
            [AutomationEntryPoint(AutomationEntryPointType.Types.OnSrmBookingsUpdatedByReference)]
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.OnDomInstanceCrud">
            <summary>
            An OnDomInstanceCrud entry point is defined with:
            [AutomationEntryPoint(AutomationEntryPointType.Types.OnDomInstanceCrud)]
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.OnTicketCrud">
            <summary>
            Ticket CRUD operation script. Feature introduced in DataMiner 10.1.6 (RN 29191).
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.OnDomAction">
            <summary>
            An OnTicketCrud entry point is defined with:
            [AutomationEntryPoint(AutomationEntryPointType.Types.OnDomAction)]
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Types.AutomationEntryPointTest">
            <summary>
            Automation entry point for testing purposes.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.EntryPointType">
            <summary>
            Gets or sets the entry point type.
            </summary>
            <value>The entry point type.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.Parameters">
            <summary>
            Gets or sets the parameters for the custom entry point method.
            </summary>
            <value>The parameters for the custom entry point method.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Automation.AutomationEntryPoint.#ctor">
            <summary>
            Initializes a new class of the <see cref="T:Skyline.DataMiner.Net.Automation.AutomationEntryPoint"/> class.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Connection">
            <summary>
            Represents a connection.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig">
            <summary>
            Represents a ticket field configuration override. This class is used to define a TicketField when creating a correlation ticket action.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.FieldName">
            <summary>
            Gets or sets the field name.
            </summary>
            <value>The name of the ticket field.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.AlarmPropertyExposerName">
            <summary>
            Gets or sets the alarm property exposer name.
            </summary>
            <value>The name of the exposer used to retrieve the alarm property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.CustomPropertyName">
            <summary>
            Gets or sets the custom property name.
            </summary>
            <value>The name of the custom property when using a custom alarm property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.CustomPropertyType">
            <summary>
            Gets or sets the custom property type.
            </summary>
            <value>The type of the custom property when using a custom alarm property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value that will be used when there is no alarm property defined or <see cref="P:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.AlarmPropertyExposerName"/> has value "StaticText".</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.TicketFieldConcatItems">
            <summary>
            Gets or sets a list of extra variable or static fields that will be concatenated to the first field value defined by <see cref="P:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.AlarmPropertyExposerName"/> if the field type of this ticket field is a string.
            </summary>
            <value>A list of extra variable or static fields that will be concatenated to the first field value defined by <see cref="P:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.AlarmPropertyExposerName"/> if the field type of this ticket field is a string.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.#ctor(System.String,System.String,System.String,System.String,Skyline.DataMiner.Net.Messages.PropertyInfo.DataTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig"/> class using the specified field name, default value, alarm property exposer name and name and type of the custom property.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="alarmPropertyExposerName">The alarm property exposer name.</param>
            <param name="customPropertyName">The custom property name.</param>
            <param name="customPropertyType">The custom property type.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TicketFieldOverrideConfig class using the specified field name and default value.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig.#ctor(System.String,System.String,System.String,Skyline.DataMiner.Net.Messages.PropertyInfo.DataTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig"/> class using the specified field name, alarm property exposer name and the name and type of the custom property.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="alarmPropertyExposerName">The alarm property exposer name.</param>
            <param name="customPropertyName">The custom property name.</param>
            <param name="customPropertyType">The custom property type.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Exceptions.DataMinerCOMException">
            <summary>
            The exception that is thrown when a COM exception occurrs.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Exceptions.DataMinerException">
            <summary>Base class for all DataMiner-related exceptions</summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Exceptions.DataMinerException.ErrorCode">
            <summary>Gets the error code (HRESULT).</summary>
            <remarks>By default, this is COR_E_EXCEPTION (0x80131500)</remarks>
            <value></value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Exceptions.DataMinerException.SubErrorCode">
            <summary>
            Extra error code (DataMinerErrorCode.NoError by default), e.g. more detail on authentication errors.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Exceptions.DataMinerException.ExtraSerializationInfo">
            <summary>
            Extra information that needs to be serialized when wrapping
            a DataMinerException in a SoapException
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException">
            <summary>
            The exception that is thrown when JSON deserialization fails.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.Json">
            <summary>
            Gets or sets the JSON string.
            </summary>
            <value>The JSON string.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.ExceptionStack1">
            <summary>
            Gets or sets the first exception stack.
            </summary>
            <value>The first exception stack.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.ExceptionStack2">
            <summary>
            Gets or sets the second exception stack.
            </summary>
            <value>The second exception stack.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException"/>.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException"/> with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException"/> with the specified message and error code.
            </summary>
            <param name="message">The error message.</param>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException"/> with the specified message, error code and serialization info.
            </summary>
            <param name="message">The error message.</param>
            <param name="errorCode">The error code.</param>
            <param name="extraSerializationInfo">The serialization info.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException"/> with the specified message and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.#ctor(System.String,System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException"/> with the specified message, inner exception and JSON string.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
            <param name="json">The JSON string.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.#ctor(System.String,System.Exception,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException"/> with the specified message, inner exception and JSON string.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
            <param name="json">The JSON string.</param>
            <param name="exception2">The second exception stack.</param>
        </member>
        <member name="P:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException.Message">
            <summary>
            Gets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="T:Skyline.DataMiner.Net.Exceptions.DataMinerSecurityException">
            <summary>
            The exception that is thrown when the user that is attempting to authenticate does not have sufficient rights to access the DataMiner Agent.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProfileDefinitionID">
            <summary>
            Represents a profile definition ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileDefinitionID.Id">
            <summary>
            Gets the GUID.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileDefinitionID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileDefinitionID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileDefinitionID.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileDefinitionID"/> class using the specified GUID.
            </summary>
            <param name="id">The GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileDefinitionID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileDefinitionID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string representation of the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProfileInstanceID">
            <summary>
            Represents a profile instance ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileInstanceID.Id">
            <summary>
            Gets the GUID.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileInstanceID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileInstanceID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileInstanceID.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileInstanceID"/> class using the specified GUID.
            </summary>
            <param name="id">The GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileInstanceID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileInstanceID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string representation of the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProfileParameterID">
            <summary>
            Represents a profile parameter ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProfileParameterID.Id">
            <summary>
            Gets the GUID.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileParameterID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileParameterID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileParameterID.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProfileParameterID"/> class using the specified GUID.
            </summary>
            <param name="id">The GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileParameterID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProfileParameterID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string representation of the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.ProtocolID">
            <summary>
            Represents a protocol ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProtocolID.ParentObjectRef">
            <summary>
            Gets or sets the parent object.
            </summary>
            <value>The parent object.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProtocolID.Name">
            <summary>
            Gets or sets the name of the protocol.
            </summary>
            <value>The name of the protocol.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.ProtocolID.Version">
            <summary>
            Gets or sets the version of the protocol.
            </summary>
            <value>The version of the protocol.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProtocolID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProtocolID"/> class using the specified name and version.
            </summary>
            <param name="name">The name of the protocol.</param>
            <param name="version">The version of the protocol.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.#ctor(System.String,System.String,Skyline.DataMiner.Net.DMAObjectRef)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.ProtocolID"/> class using the specified name, version and parent object reference.
            </summary>
            <param name="name">The name of the protocol.</param>
            <param name="version">The version of the protocol.</param>
            <param name="parentObjectRef">The parent object.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object, formatted as follows: [Name]/[Version].</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.Equals(Skyline.DataMiner.Net.ProtocolID)">
            <summary>
            Determines whether the specified <see cref="T:Skyline.DataMiner.Net.ProtocolID"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>Two <see cref="T:Skyline.DataMiner.Net.ProtocolID"/> objects are considered equal by this method if the <see cref="P:Skyline.DataMiner.Net.ProtocolID.Name"/>, <see cref="P:Skyline.DataMiner.Net.ProtocolID.Version"/> and <see cref="P:Skyline.DataMiner.Net.ProtocolID.ParentObjectRef"/> property values are equal.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.CompareTo(Skyline.DataMiner.Net.ProtocolID)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>
            <para>A value that indicates the relative order of the objects being compared. The return value can have the following meanings:</para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>This instance precedes <paramref name="other"/> in the sort order.</description>
            </item>
            <item>
            <term>Zero</term>
            <description>This instance occurs in the same position in the sort order as <paramref name="other"/>.</description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>This instance follows <paramref name="other"/> in the sort order.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            <para>A value that indicates the relative order of the objects being compared. The return value can have the following meanings:</para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Meaning</description>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>This instance precedes <paramref name="obj"/> in the sort order.</description>
            </item>
            <item>
            <term>Zero</term>
            <description>This instance occurs in the same position in the sort order as <paramref name="obj"/>.</description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>This instance follows <paramref name="obj"/> in the sort order.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/>  with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.ProtocolID.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for deserialization
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Skyline.DataMiner.Net.SimulationHelper.SimulationHelper">
            <summary>
            This helper class allows you to load, enable and disable element simulations at runtime from within protocol QActions or Automation scripts without having to restart DataMiner.
            </summary>
            <remarks>Available from DataMiner 10.1.6 (RN 29517) onwards.</remarks>
            <example>
            <para>This example shows how you can use this in an Automation script.</para>
            <code>
            var simulationHelper = new SimulationHelper(Engine.SLNet.SendMessages);
            simulationHelper.LoadSimulations();
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.SimulationHelper.SimulationHelper.#ctor(System.Func{Skyline.DataMiner.Net.Messages.DMSMessage[],Skyline.DataMiner.Net.Messages.DMSMessage[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.SimulationHelper.SimulationHelper"/> class.
            </summary>
            <param name="messageHandler">Message handler.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="messageHandler"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.SimulationHelper.SimulationHelper.DisableSimulation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Disables a simulation on a specific element.
            <remarks>
            <note type="note">
            <para>The simulation needs to be loaded in memory of DataMiner at startup. If that was not the case, all simulations can be reloaded with <see cref="M:Skyline.DataMiner.Net.SimulationHelper.SimulationHelper.LoadSimulations(System.Int32)"/>.</para>
            </note>
            </remarks>
            </summary>
            <param name="hostingDataMinerId">The hosting Agent ID of the element.</param>
            <param name="dataMinerId">The DataMiner ID of the element.</param>
            <param name="elementId">The element ID of the element.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.SimulationHelper.SimulationHelper.EnableSimulation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Enables a simulation on the specified element.
            <remarks>
            <note type="note">
            <para>The simulation needs to be loaded in memory of DataMiner at startup. If that was not the case, all simulations can be reloaded with <see cref="M:Skyline.DataMiner.Net.SimulationHelper.SimulationHelper.LoadSimulations(System.Int32)"/>.</para></note>
            </remarks>
            </summary>
            <param name="hostingDataMinerId">The hosting Agent ID of the element.</param>
            <param name="dataMinerId">The DataMiner ID of the element.</param>
            <param name="elementId">The element ID of the element.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.SimulationHelper.SimulationHelper.LoadSimulations(System.Int32)">
            <summary>
            Loads all simulation files stored under the Simulations folder on a specific agent.
            </summary>
            <param name="dataMinerId">The DataMiner ID of the Agent that needs to load the simulations.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.AlarmPropertyNameDoesNotExistException">
            <summary>
            The exception that is thrown when no alarm property exists with the specified name.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.AlarmPropertyNameDoesNotExistException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.AlarmPropertyNameDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.AlarmPropertyNameDoesNotExistException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.AlarmPropertyNameDoesNotExistException"/> class using the specified message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.AlarmPropertyNameDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.AlarmPropertyNameDoesNotExistException"/> class using the specified message and inner exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not <see langword="null"/>, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.FailedParseAlarmPropertyException">
            <summary>
            The exception that is thrown when parsing failed for an alarm property.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.FailedParseAlarmPropertyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.FailedParseAlarmPropertyException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.FailedParseAlarmPropertyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.FailedParseAlarmPropertyException"/> class using the specified message.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.FailedParseAlarmPropertyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.FailedParseAlarmPropertyException"/> class using the specified message and inner exception.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.TicketFieldDoesNotExistException">
            <summary>
            The exception that is thrown when the ticket field does not exist.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketFieldDoesNotExistException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketFieldDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketFieldDoesNotExistException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketFieldDoesNotExistException"/> class using the specified message.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketFieldDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketFieldDoesNotExistException"/> class using the specified message and inner exception.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Helpers.ExecuteScriptOnTicketActionSettings">
            <summary>
            Used to define the scripts that should be executed for each CRUD action on a <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/>. No script will be executed when the name is null or empty.	
            </summary>
            <remarks>Feature introduced in DataMiner 10.1.6 (RN 29191).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.ExecuteScriptOnTicketActionSettings.OnCreate">
            <summary>
            Gets or sets the name of the scripts that should be executed for the create operation on a Ticket.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.ExecuteScriptOnTicketActionSettings.OnUpdate">
            <summary>
            Gets or sets the name of the scripts that should be executed for the update operation on a Ticket.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.ExecuteScriptOnTicketActionSettings.OnDelete">
            <summary>
            Gets or sets the name of the scripts that should be executed for the delete operation on a Ticket.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketChangedEventArgs">
            <summary>
            Event arguments for the <see cref="E:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.TicketChangedEvent"/> event.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketChangedEventArgs.isDelete">
            <summary>
            Indicates whether this is a delete.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketChangedEventArgs.ChangedTicket">
            <summary>
            The changed ticket.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketChangedEventArgs.ChangedHistory">
            <summary>
            The change history.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverChangedEventArgs">
            <summary>
            Event arguments for the <see cref="E:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.TicketFieldResolverChangedEvent"/> event.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverChangedEventArgs.isDelete">
            <summary>
            Indicates whether this ticket field resolver is deleted.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverChangedEventArgs.ChangedResolver">
            <summary>
            The changed ticket field resolver.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver">
            <summary>
            Resolves fields of a ticket from a DataMiner FieldName to a third-party FieldName and vice versa.
            </summary>
            <remarks>
            <para>The TicketFieldResolver contains a dictionary with all the names of the fields. Therefore, it is not allowed to have multiple <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> objects in the same <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> instance that share the same <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.FieldName"/>.</para>
            </remarks>
            <example>
            <para>Creating a default ticket field resolver:</para>
            <code>
            private TicketFieldResolver CreateDefaultResolver()
            {
            	var resolver = TicketFieldResolver.Factory.CreateDefaultResolver();
            	
            	string error;
            	
            	var success = Helper.SetTicketFieldResolver(out error, ref resolver);
            	if(!success)
            	{
            		throw new DataMinerException("Something went wrong during setting the TicketFieldResolver: " + error);	
            	}
            	
            	return resolver;
            }
            </code>
            <para>Creating a custom resolver:</para>
            <code>
            private TicketFieldResolver CreateCustomResolver()
            {
            	TicketFieldResolver resolver = TicketFieldResolver.Factory.CreateEmptyResolver("CustomResolver");
            	
            	// Specify the element that will use this ticket field resolver. Leave empty in case the resolver is not used by any element.
            	resolver.ElementUsingResolver = new Skyline.DataMiner.Net.ElementID(123, 456);
            	
            	// The generated empty resolver already contains a "State" field. Remove this in case this is undesired.
            	var fields = resolver.GetDataMinerFields2ThirdPartyFields();
            	
            	foreach(var fields in fields)
            	{
            		resolver.RemoveDataMinerField(field.Key);
            		resolver.RemoveThirdPartyField(field.Value);
            	}
            	
            	// Clear the custom states.
            	resolver.StateResolver.Clear();
            	
            	// Clear the link fields.
            	resolver.TicketLinkFields.Clear();
            	
            	// Add a "Links" field.
            	resolver.TicketLinkFields.Add("Links");
            	
            	// Create a state field.
            	// First, we create a StateEnum which contains the names and integer values of the states.
            	StateEnum dmaState = new StateEnum();
            	dmaState.EnumName = "MyStates";
            	dmaState.DynamicAdd("Created", 0);
            	dmaState.DynamicAdd("Started", 1);
            	dmaState.DynamicAdd("Paused", 2);
            	dmaState.DynamicAdd("Stopped", 3);
            	dmaState.DynamicAdd( "Closed", 4);
            	
            	// We now link our custom ticket states to a DataMiner <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketState"/>.
            	// I.e. "Created" has value 0 and gets linked to <see cref="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketState.Open"/>.
            	resolver.StateResolver.Add(0, TicketState.Open); // Created
            	resolver.StateResolver.Add(1, TicketState.Open); // Started
            	resolver.StateResolver.Add(2, TicketState.Open); // Paused
            	resolver.StateResolver.Add(3, TicketState.Closed); // Stopped
            	resolver.StateResolver.Add(4, TicketState.Closed); // Closed
            	
            	// Now we add a "State" field.
            	resolver.AddOrUpdateNames(
            		// Here, we add the descriptor for our "State" field.
            		new TicketFieldDescriptor()
            		{
            			FieldDisplayName = "State",
            			FieldName = "State",
            			FieldType = typeof(GenericEnumEntry&lt;int&gt;),
            			IsThirdParty = false,	// This is a DataMiner ticket field.
            			IsDataMinerMaster = true,	// When a clash of this field occurs, the value set by DataMiner is used.
            			Validator = new EnumValidator&lt;int&gt;(DmaState)
            		},
            		// And we link the "State" field to a third-party "Status" field.
            		new TicketFieldDescriptor()
            		{
            			FieldDisplayName = "Status",
            			FieldName = "Status",
            			FieldType = typeof(string),
            			IsThirdParty = true,	// This is a third-party ticket field.
            			Validator = new TypeValidator&lt;string&gt;
            		}
            	);
            	
            	// Add a "User Name" field.
            	resolver.AddOrUpdateNames(
            		new TicketFieldDescriptor()
            		{
            			FieldDisplayName = "User Name",
            			FieldName = "User",
            			FieldType = typeof(string),
            			IsThirdParty = false,	// This is a DataMiner ticket field.
            			Validator = new UserValidator() // We know this is a user.
            		},
            		new TicketFieldDescriptor()
            		{
            			FieldDisplayName = "Account Number",
            			FieldName = "Accnr",
            			FieldType = typeof(long),
            			IsThirdParty = true,	// This is a third-party ticket field.
            			Validator = new TypeValidator&lt;long&gt;	// The third-party system uses an account number instead of a user.
            		}
            	);
            	
            	// Create an email field.
            	resolver.AddOrUpdateNames(
            		new TicketFieldDescriptor()
            		{
            			FieldDisplayName = "Email Address",
            			FieldName = "Mail",
            			FieldType = typeof(string),
            			IsThirdParty = false,	// This is a DataMiner ticket field.
            			Validator = new EmailAddressValidator() // We know this has to be an email address.
            		},
            		new TicketFieldDescriptor()
            		{
            			FieldDisplayName = "Internal Address",
            			FieldName = "Addr",
            			FieldType = typeof(string),
            			IsThirdParty = true,	// This is a third-party ticket field.
            			Validator = new RegexValidator()	// The third-party system uses a string, but we can validate it with a regular expression.
            			{
            				RegexOptions = RegexOptions.IgnoreCase | RegexOptions.SingleLine,
            				RegexPattern = @"\A(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\.[a-z0-9]!#$%&amp;'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)\Z"
            			}
            		}
            	);
            	
            	// Add a "Quality" field.
            	resolver.AddOrUpdateNames(
            		new TicketFieldDescriptor()
            		{
            			FieldDisplayName = "Quality",
            			FieldName = "Quality",
            			FieldType = typeof(double),
            			IsThirdParty = false,	// This is a DataMiner ticket field.
            			Validator = new TypeValidator&lt;double&gt;() // A quality score.
            		},
            		new TicketFieldDescriptor()
            		{
            			FieldDisplayName = "Score",
            			FieldName = "Score",
            			FieldType = typeof(byte),
            			IsThirdParty = true,	// This is a third-party ticket field.
            			Validator = new TypeValidator&lt;byte&gt;	// The third-party system uses a byte to store this.
            		}
            	);
            	
            	// Save our custom ticket field resolver.
            	string error;
            	
            	if(!Helper.SetTicketFieldResolver(out error, ref resolver))
            	{
            		throw new DataMinerException("Something went wrong during setting the TicketFieldResolver: " + error")	
            	}
            	
            	return resolver;
            }
            </code>
            </example>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.Factory">
            <summary>
            The ticket field resolver factory.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.Module">
            <summary>
            Gets or sets the ticket module.
            </summary>
            <value>The ticket module.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.ID">
            <summary>
            Gets or sets the ID of this resolver.
            </summary>
            <value>The ID of this resolver.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.Name">
            <summary>
            Gets or sets the name of this resolver.
            </summary>
            <value>The name of this resolver.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.TicketLinkFields">
            <summary>
            Gets or sets the ticket link fields.
            </summary>
            <value>The ticket link fields.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.ElementUsingResolver">
            <summary>
            Gets or sets the ID of the element that uses the resolver.
            </summary>
            <value>The ID of the element that uses this resolver.</value>
            <remarks>
            <para>A <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> can only be used by one element, but one element can use multiple <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> instances.</para>
            <para>Without an element attached, the tickets will only be stored on the DataMiner System and will not be synchronized with a third-party system.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.StateResolver">
            <summary>
            Gets or sets the state resolver.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.VisualizationHints">
            <summary>
            Gets or sets the visualization hints.
            </summary>
            <value>The visualization hints.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.IsValid">
            <summary>
            Gets a value indicating whether this resolver is valid.
            </summary>
            <value><c>true</c> if this resolver is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.#cctor">
            <summary>
            Constructs the Default TicketFieldResolver.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> class using the specified GUID.
            </summary>
            <param name="g">The GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> class using the specified GUID and name.
            </summary>
            <param name="g">The GUID of the resolver.</param>
            <param name="Name">The name of the resolver.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetDataMinerFields2ThirdPartyFields">
            <summary>
            Retrieves a dictionary with the DataMiner fields serving as the keys and the third-party fields serving as the values.
            </summary>
            <returns>A dictionary with the DataMiner fields serving as the keys and the third-party fields serving as the values.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetThirdPartyFields2DataMinerFields">
            <summary>
            Retrieves a dictionary with the third-party fields serving as the keys and the DataMiner fields serve as the values.
            </summary>
            <returns>A dictionary with the third-party fields serving as the keys and the DataMiner fields serve as the values.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.AddOrUpdateNames(Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor,Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor)">
            <summary>
            Adds or updates this resolver with the specified fields.
            </summary>
            <param name="DataMinerField">The DataMiner field.</param>
            <param name="ThirdPartyField">The third-party ticketing system field.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="DataMinerField"/> is <see langword="null"/>.<br />
            -or-<br />
            <paramref name="ThirdPartyField"/> is <see langword="null"/>.<br />
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="DataMinerField"/> and <paramref name="ThirdPartyField"/> have the same FieldName.
            -or-<br/>
            The specified <paramref name="DataMinerField"/> object has a FieldName that is already used by an existing ThirdPartyField.<br />
            -or-<br/>
            The specified <paramref name="ThirdPartyField"/> object has a FieldName that is already used by an existing DataMinerField.<br />
            </exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.RemoveDataMinerField(Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor)">
            <summary>
            Removes the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> DataMiner field from the resolver.
            </summary>
            <param name="field">The DataMiner field.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.RemoveThirdPartyField(Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor)">
            <summary>
            Removes the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> third-party field from the resolver.
            </summary>
            <param name="field">The third-party field.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetThirdPartyField(Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor)">
            <summary>
            Gets the third-party <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> that corresponds with the specified DataMiner <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/>.
            </summary>
            <param name="dataMinerField">The DataMiner <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/>.</param>
            <returns>The third-party <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> that corresponds with the specified third-party <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> or <see langword="null" /> if the corresponding field was not found.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetDataMinerField(Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor)">
            <summary>
            Gets the DataMiner <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> that corresponds with the specified third-party <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/>.
            </summary>
            <param name="thirdPartyField">The third-party <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/>.</param>
            <returns>The DataMiner <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> that corresponds with the specified third-party <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> or <see langword="null" /> if the corresponding field was not found.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetFieldWithName(System.String)">
            <summary>
            Gets the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> with the specified name.
            </summary>
            <param name="name">The name of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> to retrieve.</param>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> with the specified name or <see langword="null"/> if no field with the specified name was found.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetInternalState(Skyline.DataMiner.Net.Ticketing.Ticket)">
            <summary>
            Gets the internal state of the specified ticket.
            </summary>
            <param name="ticket">The ticket for which the internal state should be retrieved.</param>
            <returns>The internal state.</returns>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.TicketStateFieldDescriptor">
            <summary>
            Gets or sets the ticket state field descriptor.
            </summary>
            <value>The ticket state field descriptor.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.DataTypeID">
            <summary>
            Gets the datatype ID.
            </summary>
            <value>The datatype ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.LastModified">
            <summary>
            Gets or sets the last modification time.
            </summary>
            <value>The last modification time.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.FiltersTo(Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver)">
            <summary>
            Returns a value indicating whether the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> has the same ID or name as this <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> object.
            </summary>
            <param name="filter">The <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> instance.</param>
            <returns><c>true</c> if the ID or name of the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> matches the ID or name of this <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> instance.</returns>
            <remarks>
            <para>When <see langword="null"/> is specified for <paramref name="filter"/>, <c>true</c> is returned</para>
            <para>When <see cref="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.ID"/> of <paramref name="filter"/> is set to <see cref="F:System.Guid.Empty"/>, <c>true</c> is returned.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.ToJson">
            <summary>
            Retrieves the JSON representation of this <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> object.
            </summary>
            <returns>The JSON representation of this <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.FromJson(System.String)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> instance of the specified JSON string.
            </summary>
            <param name="json">The JSON string representing a JSON serialized <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> object.</param>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetAllTicketStateGenericEnumEntries">
            <summary>
            Returns all GenericEnumEntries that represent a state for ticket
            that is linked to this TicketFieldResolver. These can be used
            to filter on the state field of a Ticket.
            </summary>
            <returns>An empty list when the <see cref="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.TicketStateFieldDescriptor"/> is invalid</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetAllTicketStateGenericEnumEntriesForState(Skyline.DataMiner.Net.Ticketing.Helpers.TicketState)">
            <summary>
            Returns a list of all GenericEnumEntries that represent the given state.
            These can be used to filter on the state field of a Ticket.
            </summary>
            <returns>An empty list when <see cref="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.TicketStateFieldDescriptor"/> or <see cref="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.StateResolver"/> are invalid</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver.GetTicketStateFilter(Skyline.DataMiner.Net.Ticketing.Helpers.TicketState)">
            <summary>
            Returns a Ticket filter that can be used to retrieve all Tickets linked
            to this TicketFieldResolver with the given state. 
            </summary>
            <returns>
            Null when no filter could be build because there are no state
            GenericEnumEntries available on this TicketFieldResolver.
            </returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketState">
            <summary>
            Ticket states that are used internally.
            </summary>
            <remarks>
            <para>Depending on whether the linked cause is open or cleared, a <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> can only be:</para>
            <list type="bullet">
             <item>Open and alarm active</item>
             <item>Open and alarm not active (Cause is cleared)</item>
             <item>Closed and alarm active</item>
             <item>Closed and alarm not active (Cause is cleared)</item>
            </list>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketState.Open">
            <summary>
            Open.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketState.Closed">
            <summary>
            Closed.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverExposers.Initialize">
            <summary>
            Guarantee that all static fields are initialized.
            Since C# makes use of the laziest initialization.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverFactory">
            <summary>
            Represents a <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> factory.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverFactory.DefaultID">
            <summary>
            The default ID.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverFactory.CreateDefaultResolver(System.Guid)">
            <summary>
            Creates a default ticket field resolver.
            </summary>
            <param name="ID">The ID of the ticket field resolver.</param>
            <returns>A default ticket field resolver.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverFactory.CreateEmptyResolver(System.String)">
            <summary>
            Creates an empty ticket field resolver with the specified name.
            </summary>
            <param name="name">The name of the ticket field resolver.</param>
            <returns>An empty ticket field resolver with the specified name.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverSettings">
            <summary>
            Contains all settings used by the ticket field resolver.
            </summary>
            <remarks>Available from DataMiner 10.1.6 (RN 29191) onwards.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolverSettings.ScriptSettings">
            <summary>
            Gets or sets the script settings containing the name of the scripts that should be executed for the corresponding CRUD operation on a ticket.
            </summary>
            <value>The script settings.</value>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketingGatewayEventArgs">
            <summary>
            Provides data for the <see cref="E:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.SendEvent"/> event.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketingGatewayEventArgs.requestMessage">
            <summary>
            Gets the request message.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.TicketingGatewayEventArgs.responseMessage">
            <summary>
            Gets or sets the response message.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketingGatewayEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketingGatewayEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.TicketingGatewayEventArgs.#ctor(Skyline.DataMiner.Net.Ticketing.Interfaces.ITicketingGatewayRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketingGatewayEventArgs"/> class using the specified request message.
            </summary>
            <param name="m">The request message.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Helpers.Visualization.TicketingVisualizationHints">
            <summary>
            Represents Ticketing visualization hints.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.Visualization.TicketingVisualizationHints.FieldOrder">
            <summary>
            Gets or sets the field order.
            </summary>
            <value>The field order.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.Visualization.TicketingVisualizationHints.VisualFieldEnums">
            <summary>
            Contains all the visual data linked with the values of certain enum field values.
            </summary>
            <remarks>
            <para>For every color linked to a selection box value, a <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.Visualization.VisualFieldEnum"/> should be added with the following properties:</para>
            <para>Feature introduced in DataMiner 10.0.5 (RN 25175).</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Helpers.Visualization.TicketingVisualizationHints.SearchDisplayField">
            <summary>
            Gets or sets the search display field.
            </summary>
            <value>The search display field.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Helpers.Visualization.TicketingVisualizationHints.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.Visualization.TicketingVisualizationHints"/> class.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.TicketHistoryKeyComparer">
            <summary>
            Represents a ticket history key comparer.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketHistoryKeyComparer.Compare(System.Tuple{System.DateTime,System.String},System.Tuple{System.DateTime,System.String})">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            <para>A signed integer that indicates the relative values of <paramref name="x"/> and <paramref name="y"/>, as shown in the following table.</para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Meaning</description>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description><paramref name="x"/> is less than <paramref name="y"/>.</description>
            </item>
            <item>
            <term>Zero</term>
            <description><paramref name="x"/> equals <paramref name="y"/>.</description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description><paramref name="x"/> is greater than <paramref name="y"/>.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper">
             <summary>
             Helper class for the Ticketing Gateway.
             </summary>
             <remarks>
             <para>This is the access point to the Ticketing Gateway. It provides an easy interface to communicate with the Ticketing Gateway.</para>
             <para>TicketingGatewayHelper does not keep a cache of tickets or resolvers. If client-side caching is required, it must be implemented by the client.The TicketingGateway running on the server does keep a cache, however. Its cache consists of all the open tickets.</para>
             </remarks>
             <example>
             <code>
             class Script
             {
            		private TicketingGatewayHelper helper;
            		private Connection connection;
            		
            		Script()
            		{
            			// Connect to SLNet. Protocols and automation scripts do not need this.
            			connection = new RemotingConnection("localhost");
            			connection.Authenticate();
            
            			helper = new TicketingGatewayHelper();
            			helper.HandleEventsAsync = false; // Most client applications will prefer blocking calls for event handling. If this is the case, set this property to false.
            			helper.RequestResponseEvent += HelperRequestResponseEvent;
            
            			// Attaching the following event handlers is optional.
            			helper.LoggingEvent += HelperLoggingEvent;
            			helper.TicketChangedEvent += HelperTicketChangedEvent;
            			helper.TicketFieldResolverChangedEvent += HelperTicketFieldResolverChangedEvent;
            		}
            
            		private void HelperRequestResponseEvent(object sender, IManagerRequestResponseEventArgs e)
            		{
            			e.responseMessage = connection.HandleSingleResponseMessage(e.responseMessage);
            		}
            
            		private void HelperLoggingEvent(object sender, IManagerErrorEventArgs e)
            		{
            			// ...
            		}
            
            		private void HelperTicketChangedEvent(object sender, TicketChangedEventArgs e)
            		{
            			var changedTicket = e.ChangedTicket;    // The changed ticket.
            			var changedHistory = e.ChangedHistory;  // The history entry that changed.
            			bool isDeleted = e.isDelete;    // Delete or add/update?
            		}
            
            		private void HelperTicketFieldResolverChangedEvent(object sender, TicketFieldResolverChangedEventArgs e)
            		{
            			var changedResolver = e.ChangedResolver; // The changed resolver.
            			bool isDeleted = e.isDelete; // Delete or add/update?
            		}
            	}
             </code>
             </example>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.IsLicensed">
            <summary>
            Gets a value indicating whether Ticketing is licensed.
            </summary>
            <value><c>true</c> if Ticketing is licensed; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.SendEvent">
            <summary>
            Occurs when the Helper wants to send a message to the server.
            </summary>
            <remarks>
            <para>Obsolete. Use <see cref="E:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.RequestResponseEvent" /> instead.</para>
            </remarks>
        </member>
        <member name="E:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.RequestResponseEvent">
            <summary>
            Occurs when the Helper wants to send a message to the server and expects a response.
            </summary>
        </member>
        <member name="E:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.LoggingEvent">
            <summary>
            Occurs when an error or notification should get logged.
            </summary>
        </member>
        <member name="E:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.TicketChangedEvent">
            <summary>
            Occurs when a ticket actually changes (add/update/delete).
            </summary>
        </member>
        <member name="E:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.TicketFieldResolverChangedEvent">
            <summary>
            Occurs when a TicketFieldResolver actually changes (add/update/delete).
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.HandleEventsAsync">
            <summary>
            Gets or sets a value indicating whether incoming events will be handled asynchronously.
            </summary>
            <value><c>true</c> if incoming events should be handled asynchronously; otherwise, <c>false</c>.</value>
            <remarks>Client applications will typically prefer blocking calls for event handling. If this is the case, set this property to <c>false</c>.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.Attachments">
            <summary>
            Gets the attachments.
            </summary>
            <value>The attachments.</value>
            <remarks>
            <para>Feature introduced in DataMiner 10.0.8 (RN 25612).</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.OnEventReceived(Skyline.DataMiner.Net.Messages.TicketingGatewayEventMessage)">
            <summary>
            Internal method for received eventmessages
            If <see cref="P:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.HandleEventsAsync"/> is <c>true</c>, the function will return immediately.
            If <see cref="P:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.HandleEventsAsync"/> is <c>false</c>, the function will return once the event is handled.
            </summary>
            <param name="message">TicketingGatewayEventMessage that is received.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.GetTraceDataLastCall">
            <summary>
            Retrieves the trace data of the last call.
            </summary>
            <returns>Retrieves the trace data of the last call.</returns>
            <remarks>
            <para>From DataMiner 9.6.10 (RN 22526) onwards, for each call that failed, an entry of type TicketingManagerError. Reason.LegacyError will now be added to the TraceData. The value of the error will be stored in the <see cref="P:Skyline.DataMiner.Net.Tickets.TicketingManagerError.LegacyErrorMessage"/> property.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.GetTickets(Skyline.DataMiner.Net.Ticketing.Ticket[])">
            <summary>
            Retrieves the tickets that match the specified  filters.
            </summary>
            <param name="filters">The filter to use when searching the tickets.</param>
            <returns>The tickets that match the specified filters.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.GetTickets(Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Ticketing.Ticket}[])">
            <summary>
            Retrieves the tickets that match the specified  filters.
            </summary>
            <param name="filters">The filter to use when searching the tickets.</param>
            <returns>The tickets that match the specified filters.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.GetTickets(System.Collections.Generic.IEnumerable{Skyline.DataMiner.Net.Ticketing.TicketLink},Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Ticketing.Ticket},System.Boolean)">
            <summary>
            Retrieves the tickets that match the specified  filters and links.
            </summary>
            <param name="links">The links to be used when searching the tickets.</param>
            <param name="filter">The filter to use when searching the tickets.</param>
            <param name="CacheOnly">Indicates whether to only check the cache (true) or also the DB (false).</param>
            <returns>The tickets that match the specified filter and links.</returns>
            <example>
            <para>Retrieving tickets by ticket field:</para>
            <code>
            public Ticket RetrieveTicketByField()
            {
            	var outputTickets = helper.GetTickets(filter: ReflectiveExposer.DictField&lt;Ticket, object&gt;("CustomTicketFields", "User").Equal("Jane"));
            	if (outputTickets.Count() != 1)
            		return null;
            		
            	return outputTickets.First();
            }
            </code>
            <para>Retrieving tickets by state:</para>
            <code>
            public Ticket RetrieveTicketByState()
            {
            	var outputTickets = helper.GetTickets(filter: ReflectiveExposer.DictField&lt;Ticket, object&gt;("CustomTicketFields", "State").Equal(0));
            	
            	//Alternatively: 
            	var alternative = helper.GetTickets(filter: ReflectiveExposer.DictField&lt;Ticket, object&gt;("CustomTicketFields", "State").Equal(new GenericEnumEntry&lt;int&gt;()
            	  {
            		  Name = "Created",
            		  Value = 0
            	  }));
            	  
            	if (outputTickets.Count() != 1)
            		return null;
            		
            	return outputTickets.First();
            }
            </code>
            <para>Retrieving tickets by link:</para>
            <code>
            public Ticket RetrieveTicketByLink()
            {
            	var outputTickets = helper.GetTickets(new TicketLink[] { TicketLink.Create(new Skyline.DataMiner.Net.ElementID(123, 456)) });
            	
            	if (outputTickets.Count() != 1)
            		return null;
            	
            	return outputTickets.First();
            }
            </code>
            <para>Retrieving tickets by ticket field resolver:</para>
            <code>
            public Ticket[] RetrieveTicketByResolverID(TicketFieldResolver resolver)
            {
            	var outputTickets = helper.GetTickets(filter: TicketingExposers.ResolverID.Equal(resolver.ID));
            	
            	return outputTickets.ToArray();
            }
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.NewPagingRequest(System.Int32,System.Int64@,System.Int32@,System.Int32,System.Collections.Generic.IEnumerable{Skyline.DataMiner.Net.Ticketing.TicketLink},Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement{Skyline.DataMiner.Net.Ticketing.Ticket},System.Boolean)">
            <summary>
            Requests tickets in a paged fashion. This method requests a new page.
            </summary>
            <param name="pagesize">The number of tickets that should be retrieved on one page.</param>
            <param name="pagingCookie">The paging cookie to use in the NextPagingRequest method to request the next page. If output is 0, no cookie could be created.</param>
            <param name="totalTickets">The total number of tickets this request would result in if done as a regular request (GetTickets). If output is -1, no total number could be calculated.</param>
            <param name="pageNumber">The page number you want to retrieve.</param>
            <param name="links">The links to be used when searching the tickets.</param>
            <param name="filter">The filter to use when searching the tickets.</param>
            <param name="CacheOnly">Indicates whether to only check the cache (true) or also the database (false).</param>
            <returns>A collection of tickets with the indicated page size, matching the links and filter.</returns>
            <remarks>
            <para>Instead of using the page number and calling a NewPagingRequest to retrieve the next page, we advise to use the <see cref="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.NextPagingRequest(System.Int64)"/> method instead.</para>
            </remarks>
            <example>
            <para>When you have a system with a lot of tickets, it can be more feasible to retrieve the tickets in a paged fashion, so the client application does not receive a large amount all at once, which it cannot all display anyway.</para>
            <para>The following example demonstrates how to use paging.</para>
            <code>
            private static long PagingCookie = -1;
            private static int PageSize = 2;
            private static int totalTickets = 10;
            
            private IEnumerable&lt;Ticket&gt; RetrieveNextPage()
            {
            	List&lt;Ticket&gt; result;
            	
            	// The maximum number of tickets retrieved by this method is pageSize * number of DataMiner Agents in the DataMiner System.
            	if (PagingCookie == -1)
            	{
            		result = Helper.NewPagingRequest(PageSize, out PagingCookie, out totalTickets, filter: TicketingExposers.DataMinerID.Equal(123)).ToList();
            	}
            	
            	result = Helper.NextPagingRequest(PagingCookie).ToList();
            	
            	if (result.Count &lt; PageSize)
            		PagingCookie = -1;
            		
            	return result;
            }
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.NextPagingRequest(System.Int64)">
            <summary>
            Requests the next page of a previously requested set of pages (retrieved via NewPagingRequest).
            </summary>
            <param name="pagingCookie">The pagingCookie retrieved from NewPagingRequest</param>
            <returns>The next page of the set.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.DriverSync(Skyline.DataMiner.Net.ElementID,System.DateTime,System.Tuple{System.DateTime,Skyline.DataMiner.Net.Ticketing.Ticket}[])">
            <summary>
            Synchronizes the ticketing driver with DataMiner.
            </summary>
            <param name="ElementID">The element ID of the element running the Ticketing protocol.</param>
            <param name="TimeStamp">The time stamp of the last polling cycle to the external ticketing system.</param>
            <param name="ChangedTickets">The tickets that have changed since the last time this method was used, with DateTime being the timestamp of the last change to the ticket, and Ticket being the changed ticket.</param>
            <returns>A collection of event messages containing all the verified and updated or deleted tickets.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.GetTicketsByLink(Skyline.DataMiner.Net.Ticketing.TicketLink[])">
            <summary>
            Retrieve Tickets, using links as input
            </summary>
            <param name="links">for every link, all available tickets will be given</param>
            <returns>Collection of Tickets which pass at least 1 of the given links.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.SetTickets(System.String@,Skyline.DataMiner.Net.Ticketing.Ticket[]@)">
            <summary>
            Adds or edits the specified tickets.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="tickets">The tickets to add/edit.</param>
            <returns><c>true</c> if adding/editing the tickets succeeded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.SetTicket(System.String@,Skyline.DataMiner.Net.Ticketing.Ticket@)">
            <summary>
            Adds or edits a ticket.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="ticket">The ticket to add or edit.</param>
            <returns><c>true</c> if adding/editing the ticket succeeded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.RemoveTickets(System.String@,Skyline.DataMiner.Net.Ticketing.Ticket[])">
            <summary>
            Removes the specified tickets.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="tickets">The tickets that should be removed.</param>
            <returns><c>true</c> if removing the ticket succeeded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.GetTicketHistory(Skyline.DataMiner.Net.Ticketing.TicketID[])">
            <summary>
            Retrieves the history of the specified tickets.
            </summary>
            <param name="ticketIDs">The ticket IDs of the tickets for which the history should be retrieved.</param>
            <returns>The requested collection of TicketHistory objects.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.SetTicketFieldResolvers(System.String@,Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver[]@)">
            <summary>
            Adds or edits the specified ticket field resolvers.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="resolvers">The ticket field resolvers to add/edit.</param>
            <returns><c>true</c> if adding/editing the ticket field resolvers succeeded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.SetTicketFieldResolver(System.String@,Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver@)">
            <summary>
            Adds or edits the specified ticket field resolver.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="resolver">The ticket field resolver to add/edit.</param>
            <returns><c>true</c> if adding/editing the ticket field resolver succeeded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.RemoveTicketFieldResolvers(System.String@,Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver[])">
            <summary>
            Removes the specified ticket field resolvers.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="resolvers">The ticket field resolvers that should be removed.</param>
            <returns><c>true</c> if removing the ticket field resolvers succeeded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.RemoveMaskedTicketFieldResolver(System.String@,System.Guid)">
            <summary>
            Removes the specified masked ticket field resolvers and all tickets linked to that resolver.
            </summary>
            <param name="error">Output string with notifications and/or errors that occurred.</param>
            <param name="maskedResolverGuid">The GUID of the masked resolver to remove.</param>
            <returns><c>true</c> if removing the masked ticket field resolver succeeded; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>An error will be returned in the following cases:</para>
            <list type="bullet">
            <item>
            	<description>If the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> does not exist.</description>
            </item>
            <item>
            	<description>If the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> is not masked.</description>
            </item>
            <item>
            	<description>If the user has not been granted the “Ticketing Gateway/Configure” permission.</description>
            </item>
            <item>
            	<description>If something went wrong while deleting the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> or any of the linked tickets.</description>
            </item>
            </list>
            <para>Feature introduced in DataMiner 9.6.10 (RN 22403).</para>
            <para>For Ticketing with Elastic search, use the TicketingHelper.DeleteMaskedTicketDomain(Guid) method.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.GetTicketFieldResolvers(Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver[])">
            <summary>
            Retrieves the non-masked ticket field resolvers corresponding to one or more filters.
            </summary>
            <param name="filters">A collection of filters. Each filter will be processed separately and the results will be added to the final response.</param>
            <returns>The requested ticket field resolvers.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.GetMaskedTicketFieldResolvers(Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver[])">
            <summary>
            Retrieves the masked resolvers corresponding to one or more filters.
            </summary>
            <param name="filters">A collection of filters. Each filter will be processed separately and the results will be added to the final response.</param>
            <returns>The requested ticket field resolvers.</returns>
            <example>
            <para>If the following is specified within a script, any resolvers that are masked will be retrieved and an information event will be generated with information about them:</para>
            <code>
            private void ShowMaskedResolvers(Engine engine)
            {
            	var maskedTicketFieldResolvers = helper.GetMaskedTicketFieldResolvers();
            	foreach (TicketFieldResolver maskedTicketFieldResolver in maskedTicketFieldResolvers)
            	{
            		engine.GenerateInformation(string.Format("Resolver \"{0}\", which is configured to be linked to \"{1}\", is masked.", maskedTicketFieldResolver.Name, maskedTicketFieldResolver.ElementUsingResolver.ToString()));
            	}
            }
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.IsInitialized">
            <summary>
            Retrieves a value indicating whether it is initialized.
            </summary>
            <returns><c>true</c> if initialized; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.OnEventReceived(Skyline.DataMiner.Net.IManager.Messages.IManagerEventMessage)">
            <summary>
            Handles an incoming event message. If Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.HandleEventsAsync is true, the event message is handled asynchronously and this method will return immediately. If Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.HandleEventsAsync is false, the event message is handled in a blocking fashion.
            </summary>
            <param name="message">TicketingGatewayEventMessage that is received.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingGatewayHelper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/>  with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Interfaces.ITicketFieldValidator">
            <summary>
            Ticket field validator interface.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Interfaces.ITicketFieldValidator.Validate(Skyline.DataMiner.Net.Ticketing.Ticket,System.Object)">
            <summary>
            Validates the specified objects.
            </summary>
            <param name="ticket">The ticket.</param>
            <param name="obj">The value to validate.</param>
            <returns><c>true</c> if the specified value in <paramref name="obj"/> is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Interfaces.ITicketingGatewayRequestMessage">
            <summary>
            Ticketing gateway request message interface.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Interfaces.ITicketingGatewayRequestMessage.HostingDataMinerID">
            <summary>
            Gets or sets the ID of the hosting DataMiner Agent.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Ticket">
            <summary>
            Represents a ticket used by the Ticketing Gateway.
            </summary>
            <example>
            <code>
            private Ticket CreateTicket(TicketFieldResolver resolver)
            {
            	Ticket ticket = new Ticket();
            	ticket.CustomFieldResolverID = resolver.ID;
            	ticket.CustomTicketFields["State"] = new GenericEnumEntry&lt;int&gt;() { Name = "Created", Value = 0 };
            	ticket.CustomTicketFields["Status"] = "Created";
            	ticket.CustomTicketFields["User"] = "Geoffrey";
            	ticket.CustomTicketFields["Accnr"] = (long)789456123;
            	ticket.CustomTicketFields["Mail"] = "Geoffry@KingsLanding.gov";
            	ticket.CustomTicketFields["Addr"] = "789456123@internal.gov";
            	ticket.CustomTicketFields["Quality"] = 0.9;
            	ticket.CustomTicketFields["Score"] = 0x54;
            	ticket.Links.Add("Links", new TicketLink[]{ new TicketLink(new Skyline.DataMiner.Net.ElementID(123, 456)) });
            
            	string error;
            	if(!Helper.SetTicket(out error, ref ticket))
            	{
            		throw new DataMinerException("Something went wrong while creating the ticket: " + error);
            	}
            	
            	return ticket;
            }
            </code>
            <para>The code snippet shown in the example uses hard-coded values for the ticket fields. In real implementations, these values will be known either by user input or by polling the third-party ticketing system.</para>
            </example>
        </member>
        <member name="E:Skyline.DataMiner.Net.Ticketing.Ticket.PropertyChanged">
            <summary>
            The event that is triggered when a property of the Ticket object changes.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Ticket.Module">
            <summary>
            Gets or sets the module to which a ticket belongs.
            </summary>
            <value>The module to which a ticket belongs.</value>
            <remarks>Depending on this module type, different licenses will be checked.</remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Ticket.CreationDate">
            <summary>
            Gets the creation time of this ticket.
            </summary>
            <valeu>The creation time of this ticket.</valeu>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Ticket.DataTypeID">
            <summary>
            Gets a string representation of the ticket ID of this ticket.
            </summary>
            <value>The string representation of this ticket.</value>
            <remarks>
            <para>The string is formatted as follows: Ticket-[ID.DataMinerID]-[ID.TID].</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Ticket.ID">
            <summary>
            Gets or sets the unique identifier of this ticket.
            </summary>
            <value>The unique identifier of this ticket.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Ticket.UID">
            <summary>
            This is the unique identifier of the ticket.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Ticket.CustomFieldResolverID">
            <summary>
            Gets or sets the ID of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> associated with this ticket.
            </summary>
            <value>The ID of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> associated with this ticket.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Ticket.CustomTicketFields">
            <summary>
            Gets or sets the custom ticket fields of this ticket.
            </summary>
            <value>The custom ticket fields of this ticket.</value>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Ticket.WasStitched">
            <summary>
            Gets a value indicating whether this object was stitched.
            </summary>
            <value><c>true</c> if stitched; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> class.
            </summary>
            <remarks>Constructs a ticket with default values.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.#ctor(Skyline.DataMiner.Net.Ticketing.TicketID)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> class using the specified ticket ID.
            </summary>
            <param name="id">The ticket ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> class using the specified ticket GUID.
            </summary>
            <param name="uid">The ticket GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.GetChangedProperties(Skyline.DataMiner.Net.Ticketing.Ticket)">
            <summary>
            Compares this ticket to another ticket and returns a set of all the properties that are different.
            </summary>
            <param name="other">The ticket to compare with.</param>
            <returns>All the properties that differ between this ticket and the specified ticket.</returns>
            <remarks>
            <para>We consider the "other" ticket to be more up to date than this ticket.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.GetTicketField(System.String)">
            <summary>
            Gets the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketField"/> with specified name.
            </summary>
            <param name="FieldName">The name of the field.</param>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketField" /> with the specified name or <see langword="null" /> if no field with the specified name was found.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.GetTicketFields">
            <summary>
            Gets the fields of this ticket.
            </summary>
            <returns>The fields of this ticket.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.GetTicketLinks">
            <summary>
            Gets the links of this ticket.
            </summary>
            <returns>The links of this ticket.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.AddTicketLink(System.String,Skyline.DataMiner.Net.Ticketing.TicketLink)">
            <summary>
            Adds the specified ticket link to the links set with the specified key.
            </summary>
            <param name="Key">The key of the links set.</param>
            <param name="link">The link to add.</param>
            <returns><c>true</c> if the specified link was added; otherwise, <c>false</c>.</returns>
            <remarks>In case the link for the specified key was already present, <c>false</c> is returned.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.RemoveTicketLink(System.String,Skyline.DataMiner.Net.Ticketing.TicketLink)">
            <summary>
            Removes the specified ticket link.
            </summary>
            <param name="Key">The key of the links set.</param>
            <param name="link">The link to remove.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.SetCreationDate(System.DateTime)">
            <summary>
            If you are a client. Don't use this!
            </summary>
            <param name="CreationDate"></param>
            <remarks>Don't use this.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.GetTicketLinksJson">
            <summary>
            Gets the links of this ticket in JSON format.
            </summary>
            <returns>The links of this ticket in JSON format.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.GetFileFriendlyTicketLinks">
            <summary>
            Gets the file-friendly links of this ticket in JSON format.
            </summary>
            <returns>The file-friendly links of this ticket in JSON format.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.Equals(Skyline.DataMiner.Net.Ticketing.Ticket)">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>Tickets are considered equal if their ID is the same.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.FiltersTo(Skyline.DataMiner.Net.Ticketing.Ticket)">
            <summary>
            Checks if this object qualifies for the specified filter.
            </summary>
            <param name="obj">Object used as filter.</param>
            <returns><c>true</c> if this ticket matches the specified filter; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>Currently, <see cref="P:Skyline.DataMiner.Net.Ticketing.Ticket.CustomTicketFields" /> is not filtered on.</para>
            <para>This ticket matches the specified filter in case the filter is <see langword="null"/> or the filter ticket ID either equals the ID of this ticket or is <see langword="null"/>.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.ToJson">
            <summary>
            Converts this ticket to a JSON string.
            </summary>
            <returns>The JSON representation of this ticket.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.FromJson(System.String)">
            <summary>
            Parses the specified JSON string and creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> object.
            </summary>
            <param name="json">The JSON string from which to create a <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/>.</param>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException">Invalid JSON string.</exception>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.ToIndexedJson">
            <summary>
            Converts this Ticket to a JSON string
            </summary>
            <returns>The JSON string</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.FromIndexedJson(System.String)">
            <summary>
            Converts a JSON string to a Ticket object.
            </summary>
            <param name="json">The JSON string to parse to <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> instance.</param>
            <returns>Ticket object parsed from the JSON string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>Tickets are considered equal if their ID is the same.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.ToStringArray">
            <summary>
            Converts this ticket to a string array.
            </summary>
            <returns>The string array.</returns>
            <remarks>
            <para>The string array has tree items and is structured as follows:</para>
            <list type="bullet">
            <item><description>[0]: DataMiner Agent ID.</description></item>
            <item><description>[1]: Ticket ID</description></item>
            <item><description>[2]: JSON representation of the ticket.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.ToFilter``1">
            <summary>
            Returns a new <see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement`1"/> instance based on this ticket.
            </summary>
            <typeparam name="T">The type to which the resulting filter element should be cast.</typeparam>
            <returns>The filter element base on this ticket.</returns>
            <remarks>
            <para>This method creates a new <see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.FilterElement`1"/> instance based on the DataMiner Agent ID and ticket ID of this ticket and casts it to the specified type.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.TicketFieldAsCustomSerializableJson">
            <summary>
            Returns a <see cref="T:Skyline.DataMiner.Net.ToolsSpace.Collections.JSONSerializableDictionary"/> instance with the custom ticket fields.
            </summary>
            <returns>A <see cref="T:Skyline.DataMiner.Net.ToolsSpace.Collections.JSONSerializableDictionary"/> instance with the custom ticket fields.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.MergeWithAlarmProperties(Skyline.DataMiner.Net.Ticketing.Ticket,Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver,Skyline.DataMiner.Net.Messages.AlarmEventMessage)">
            <summary>
            Merges the alarm properties from the AlarmEventMessage in the ticket fields when the TicketFieldResolver defines an AlarmFilterField.
            </summary>
            <param name="baseTicket">To be merged ticket.</param>
            <param name="resolver">Resolver that defines the ticket fields.</param>
            <param name="alarm">AlarmEventMessage that contains all alarm data.</param>
            <returns>Merged ticket.</returns>
            <exception cref="T:Skyline.DataMiner.Net.Ticketing.FailedParseAlarmPropertyException">Failed parsing alarm property.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Ticketing.AlarmPropertyNameDoesNotExistException">An exposer with the specified name does not exist.</exception>
            <remarks>Feature introduced in DataMiner 9.6.5 (21202).</remarks>
            <example>
            <code>
            Ticket newTicket = Ticket.MergeWithAlarmProperties(new Ticket(), ticketFieldResolver, alarm);
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.MergeWithOverrideProperties(Skyline.DataMiner.Net.Ticketing.Ticket,System.Collections.Generic.List{Skyline.DataMiner.Net.Correlation.TicketFieldOverrideConfig},Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver,Skyline.DataMiner.Net.Messages.AlarmEventMessage)">
            <summary>
            Merges the alarm properties and default values in the ticket fields as defined in the override fields.
            </summary>
            <param name="baseTicket">To be merged Ticket.</param>
            <param name="overrideFields">Override fields that define the ticket fields.</param>
            <param name="resolver">Resolver that is linked to the ticket.</param>
            <param name="alarm">AlarmEventMessage that contains all alarm data.</param>
            <returns>Merged Ticket.</returns>
            <exception cref="T:Skyline.DataMiner.Net.Ticketing.FailedParseAlarmPropertyException">Failed parsing alarm property.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Ticketing.AlarmPropertyNameDoesNotExistException">An exposer with the specified name does not exist.</exception>
            <exception cref="T:Skyline.DataMiner.Net.Ticketing.TicketFieldDoesNotExistException">One of the override fields define a ticket field that is not  in the resolver.</exception>
            <remarks>Feature introduced in DataMiner 9.6.5 (21202).</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.Stitch(System.Func{System.Guid,Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver})">
            <summary>
            Stitches this ticket with the specified ticket provider.
            </summary>
            <param name="ticketProvider">The ticket provider.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Ticket.GetTicketFieldResolver">
            <summary>
            Returns the TicketFieldResolver when the Ticket has been stitched
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.TicketingExposers">
             <summary>
             Defines ticketing exposers.
             </summary>
             <example>
             <para>Retrieving tickets by ticket field resolver:</para>
             <code>
             public Ticket[] RetrieveTicketByResolverID(TicketFieldResolver resolver)
             {
             	var outputTickets = helper.GetTickets(filter: TicketingExposers.ResolverID.Equal(resolver.ID));
            
             	return outputTickets.ToArray();
            	}
             </code>
             </example>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.TableName">
            <summary>
            The table name.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingExposers.CreateFullTableDefinition">
            <summary>
            Creates the full table definition.
            </summary>
            <returns>The full table definition.</returns>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.DataMinerID">
            <summary>
            Exposes the <see cref="P:Skyline.DataMiner.Net.Ticketing.TicketID.DataMinerID"/> property of the <see cref="P:Skyline.DataMiner.Net.Ticketing.Ticket.ID"/> of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.TicketID">
            <summary>
            Exposes the <see cref="P:Skyline.DataMiner.Net.Ticketing.TicketID.TID"/> property of the <see cref="P:Skyline.DataMiner.Net.Ticketing.Ticket.ID"/> of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.FullID">
            <summary>
            Exposes the full ID of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.UniqueID">
            <summary>
            Exposes the unique ID of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket">
            <summary>
            Exposes the <see cref="M:Skyline.DataMiner.Net.Ticketing.Ticket.ToJson"/> method of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.ResolverID">
            <summary>
            Exposes the <see cref="P:Skyline.DataMiner.Net.Ticketing.Ticket.CustomFieldResolverID"/> property of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.CreationDate">
            <summary>
            Exposes the <see cref="F:Skyline.DataMiner.Net.Ticketing.Ticket.CreationDate"/> property of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Module">
            <summary>
            Exposes the <see cref="P:Skyline.DataMiner.Net.Ticketing.Ticket.Module"/> property of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.CustomTicketFields">
            <summary>
            Exposes the <see cref="P:Skyline.DataMiner.Net.Ticketing.Ticket.CustomTicketFields"/> property of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.TicketLinks">
            <summary>
            Exposes the file friendly ticket links of a <see cref="F:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Ticket"/> instance.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketingExposers.Initialize">
            <summary>
            Guarantee that all static fields are initialized.
            Since C# makes use of the laziest initialization.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketField">
            <summary>
            Represents a ticket field of a <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> instance.
            </summary>
            <remarks>Used by a ticket to define what exactly the field contains.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketField.FieldName">
            <summary>Gets or sets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketField.Value">
            <summary>Gets or sets the value of the field.</summary>
            <value>The value of the field.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketField"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketField.Equals(Skyline.DataMiner.Net.Ticketing.Objects.TicketField)">
            <summary>
            Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketField"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketField.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor">
            <summary>
            Describes a ticket field used by <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/>.
            </summary>
            <remarks>A <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> is uniquely identified by <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.FieldName"/>.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.FieldName">
            <summary>
            Gets or sets the uniquely identifiable name of the field.
            </summary>
            <value>The uniquely identifiable name of the field.</value>
            <remarks>
            <para>From DataMiner 10.1.11 onwards (RN 30962), the field name must meet the following requirements:</para>
            <para>It cannot start with an underscore character (“_”).</para>
            <para>It cannot contain any of the following characters:</para>
            <list type="bullet">
            <item><description>. (period)</description></item>
            <item><description># (number sign)</description></item>
            <item><description>* (asterisk)</description></item>
            <item><description>, (comma)</description></item>
            <item><description>" (double quote)</description></item>
            <item><description>' (single quote)</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.FieldDisplayName">
            <summary>
            Gets or sets the display name of the field.
            </summary>
            <value>The display name of the field.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.FieldType">
             <summary>
             Gets or sets the type of value that will be saved in the field.
             </summary>
             <value>The type of value that will be saved in the field.</value>
            <remarks>Usually basic types will be used (e.g. string, int, double), but any serializable type known to SLNet is supported.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.ShowColumnInTicketOverview">
            <summary>
            Gets or sets a value indicating whether this field should be shown in the ticket overview.
            </summary>
            <value><c>true</c> if this field should be shown in the ticket overview; otherwise, <c>false</c>.</value>
            <remarks>This default value of this property is <c>true</c>.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.SingleSelectionFilter">
            <summary>
            Gets or sets a value indicating whether single filtering on the values of this field is allowed.
            </summary>
            <value><c>true</c> if single filtering on the values of this field is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.MultiSelectionFilter">
            <summary>
            Gets or sets a value indicating whether multiple filtering on the values of this field is allowed.
            </summary>
            <value><c>true</c> if multiple filtering on the values of this field is allowed; otherwise, false.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.IsRequired">
            <summary>
            Gets or sets a value indicating whether this field is a required field (i.e. <see langword="null"/> is not allowed).
            </summary>
            <value><c>true</c> if this is a required field; otherwise, false.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.DefaultValue">
            <summary>
            Gets or sets the default value for this field when creating a new ticket.
            </summary>
            <value>The default value for this field when creating a new ticket.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.Validator">
            <summary>
             Gets or sets the <see cref="T:Skyline.DataMiner.Net.Ticketing.Interfaces.ITicketFieldValidator"/> object used to validate the value of the field.
            </summary>
            <value>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Interfaces.ITicketFieldValidator"/> object used to validate the value of the field.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.IsThirdParty">
            <summary>
            Gets or sets a value indicating whether this is a third-party field (i.e. a field from an external ticketing system).
            </summary>
            <value><c>true</c> if this is a third-party field; otherwise, false.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.IsThirdPartyMaster">
            <summary>
            Gets or sets a value indicating whether the third-party is master of this field.
            </summary>
            <value><c>true</c> if DataMiner is master of this field; otherwise, <c>false</c>.</value>
            <remarks>
            <para>The master will get priority when concurrent modifications happen.</para>
            <para>If both this property and <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.IsDataMinerMaster"/> are set to false, then clash resolving is done based on time stamps.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.IsDataMinerMaster">
            <summary>
            Gets or sets a value indicating whether DataMiner is master of this field.
            </summary>
            <value><c>true</c> if DataMiner is master of this field; otherwise, <c>false</c>.</value>
            <remarks>
            <para>The master will get priority when concurrent modifications happen.</para>
            <para>If both this property and <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.IsThirdPartyMaster"/> are set to false, then clash resolving is done based on time stamps.</para>
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.IsPlaceHolder">
            <summary>
            Gets a value indicating whether this is a placeholder.
            </summary>
            <value><c>true</c> if this <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor" /> is a placeholder; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.ThirdPartyPlaceHolder">
            <summary>
            Gets the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> instance representing a third-party ticket field placeholder.
            </summary>
            <value>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> instance representing a third-party ticket field placeholder.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.DataMinerPlaceHolder">
            <summary>
            Gets the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> instance representing a DataMiner ticket field placeholder.
            </summary>
            <value>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> instance representing a DataMiner ticket field placeholder.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.AlarmProperty">
            <summary>
            Gets or sets the name of the linked alarm property field.
            </summary>
            <value>The name of the linked alarm property field.</value>
            <remarks>Feature introduced in DataMiner 9.6.5 (RN 21202).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.CustomAlarmPropertyName">
            <summary>
            Gets or sets the name of the linked custom property.
            </summary>
            <value>The name of the linked custom property.</value>
            <remarks>Feature introduced in DataMiner 9.6.5 (RN 21202).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.CustomAlarmPropertyType">
            <summary>
            Gets or sets the type of the linked custom property.
            </summary>
            <value>The type of the linked custom property.</value>
            <remarks>Feature introduced in DataMiner 9.6.5 (RN 21202).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.StaticTextValue">
            <summary>
            Defines the string that will be filled in the TicketField.
            This value is used when <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.AlarmProperty"/> has value "StaticText"
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.TicketFieldConcatItems">
            <summary>
            Defines a list of extra variable or static fields that will be concatenated
            to the first field value defined by <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.AlarmProperty"/>
            if <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.FieldType"/> equals String.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.ToJson">
            <summary>
            Creates a JSON string representation of this <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> object.
            </summary>
            <returns>The JSON string representation of this <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.FromJson(System.String)">
            <summary>
            Parses the specified JSON string and creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> object.
            </summary>
            <param name="json">The JSON string from which to create a <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/>.</param>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException">Invalid JSON string.</exception>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.Equals(Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>Only checks if <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.FieldName"/> is the same.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketFieldDescriptor.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory">
            <summary>
            Represents the history of a specific ticket.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.GroupSeparator">
            <summary>
            The group separator.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey">
            <summary>
            Represents a key to uniquely identify a ticket history entry.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.Version">
            <summary>
            Gets or sets the version number.
            </summary>
            <value>The version number.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.Time">
            <summary>
            Gets or sets the time stamp.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.User">
            <summary>
            The username.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.CreateFromString(System.String)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey"/> instance from the specified string.
            </summary>
            <param name="encodedKey">The encoded history key.</param>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey"/> instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>The history is considered equal if the <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.Version"/> of the specified history key equals the <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.Version"/> of this object.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.CompareTo(Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="other">An <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey"/> instance to compare with this instance.</param>
            <returns>
            <para>A value that indicates the relative order of the objects being compared. The return value can have the following meanings:</para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>This instance precedes <paramref name="other"/> in the sort order.</description>
            </item>
            <item>
            <term>Zero</term>
            <description>This instance occurs in the same position in the sort order as <paramref name="other"/>.</description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>This instance follows <paramref name="other"/> in the sort order.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.HistoryKey.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            <para>A value that indicates the relative order of the objects being compared. The return value can have the following meanings:</para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>This instance precedes <paramref name="obj"/> in the sort order.</description>
            </item>
            <item>
            <term>Zero</term>
            <description>This instance occurs in the same position in the sort order as <paramref name="obj"/>.</description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>This instance follows <paramref name="obj"/> in the sort order.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty">
            <summary>
            Contains the data of a property change in the ticket history.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty.IsCustomField">
            <summary>
            Gets a value indicating whether the change relates to a custom field.
            </summary>
            <value><c>true</c> if the change relates to a custom field; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty.PropertyChanged">
            <summary>
            Gets or sets the type of change.
            </summary>
            <value>The type of change.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty.#ctor(System.String,System.Object,Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.PropertyChangedEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty"/> class using the specified name, value and optionally the type of change.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <param name="propertyChanged">The type of change.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>Tickets are considered equal if their name is the same.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ID">
            <summary>
            Gets or sets the ID of the ticket to which this history relates.
            </summary>
            <value>The ID of the ticket to which this history relates.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.UID">
            <summary>
            UID of the ticket for which this History applies
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.History">
            <summary>
            Gets or sets the ticket history.
            </summary>
            <value>The ticket history.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.#ctor(Skyline.DataMiner.Net.Ticketing.TicketID)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> class using the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/>.
            </summary>
            <param name="id">The ticket ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.#ctor(Skyline.DataMiner.Net.Ticketing.TicketID,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> class using the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/> and GUID.
            </summary>
            <param name="id">The ticket ID to which this <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> object relates to.</param>
            <param name="uid">The GUID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.#ctor(Skyline.DataMiner.Net.Ticketing.Ticket,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> class using the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> and username.
            </summary>
            <param name="ticket">The ticket to which this <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> object relates to.</param>
            <param name="userName">The username.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.AddHistoryEntry(System.String,System.Collections.Generic.HashSet{Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty})">
            <summary>
            Adds a new entry to the ticket history.
            </summary>
            <param name="user">The username.</param>
            <param name="value">The changed properties.</param>
            <returns><c>true</c> if the entry was added; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.AddHistoryEntry(System.DateTime,System.String,System.Collections.Generic.HashSet{Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ChangedProperty})">
            <summary>
            Adds a new entry to the ticket history.
            </summary>
            <param name="time">The time stamp.</param>
            <param name="user">The username.</param>
            <param name="value">The changed properties.</param>
            <returns><c>true</c> if the entry was added; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.FiltersTo(Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory)">
            <summary>
            Retrieves a value indicating whether the specified ticket history relates to the same ticket.
            </summary>
            <param name="oneFilter">The ticket history to filter to.</param>
            <returns><c>true</c> if the <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ID"/> of <paramref name="oneFilter"/> is equal to the <see cref="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ID"/> of this ticket history; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.ToJson">
            <summary>
            Creates a JSON string representation of this <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> object.
            </summary>
            <returns>The JSON string representation of this <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.FromJson(System.String)">
            <summary>
            Parses the specified JSON string and creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> object.
            </summary>
            <param name="json">The JSON string from which to create a <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/>.</param>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException">Invalid JSON string.</exception>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory"/> object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.PropertyChangedEnum">
            <summary>
            Specifies the type of change.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.PropertyChangedEnum.Added">
            <summary>
            Added.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.PropertyChangedEnum.Changed">
            <summary>
            Changed.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.PropertyChangedEnum.Deleted">
            <summary>
            Deleted.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.DataTypeID">
            <summary>
            Gets the datatype ID.
            </summary>
            <value>The datatype ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistory.LastModified">
            <summary>
            Gets or sets the last modification date.
            </summary>
            <value>The last modification date.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Objects.TicketHistoryExposers.Initialize">
            <summary>
            Guarantee that all static fields are initialized.
            Since C# makes use of the laziest initialization.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.TicketID">
            <summary>
            Represents a ticket ID.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.TicketID.DataMinerID">
            <summary>
            Gets or sets the DataMiner Agent ID.
            </summary>
            <value>The DataMiner Agent ID.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.TicketID.TID">
            <summary>
            Gets or sets the ticket ID.
            </summary>
            <value>The ticket ID.</value>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketID.Default">
            <summary>
            Gets a new <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/> instance.
            </summary>
            <value>A new <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/> instance.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.#ctor(Skyline.DataMiner.Net.Ticketing.TicketID)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/> class using the specified ticket ID.
            </summary>
            <param name="tid">The ticket ID.</param>
            <remarks><see cref="P:Skyline.DataMiner.Net.Ticketing.TicketID.DataMinerID"/> and <see cref="P:Skyline.DataMiner.Net.Ticketing.TicketID.TID"/> are set to -1.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/> class using the specified DataMiner Agent ID and ticket ID.
            </summary>
            <param name="dataMinerId">The DataMiner Agent ID.</param>
            <param name="tid">The ticket ID.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.Equals(Skyline.DataMiner.Net.Ticketing.TicketID)">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>Tickets are considered equal if their Agent ID and ticket ID are the same.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.FromString(System.String)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/> instance based on the specified string.
            </summary>
            <param name="strTicketID">The string representing a ticket ID.</param>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketID"/> instance or <see langword="null"/> if the provided string was invalid.</returns>
            <remarks><paramref name="strTicketID"/> should have the following format: "DataMinerAgentID/TicketID".</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.CompareTo(Skyline.DataMiner.Net.Ticketing.TicketID)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>A value that indicates the relative order of the objects being compared. The return value can have the following meanings:
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>This instance precedes <paramref name="other"/> in the sort order.</description>
            </item>
            <item>
            <term>Zero</term>
            <description>This instance occurs in the same position in the sort order as <paramref name="other"/>.</description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>This instance follows <paramref name="other"/> in the sort order.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A value that indicates the relative order of the objects being compared. The return value can have the following meanings:
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>This instance precedes <paramref name="obj"/> in the sort order.</description>
            </item>
            <item>
            <term>Zero</term>
            <description>This instance occurs in the same position in the sort order as <paramref name="obj"/>.</description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>This instance follows <paramref name="obj"/> in the sort order.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.ToFileFriendlyString">
            <summary>
            Returns a file-friendly string that represents the current object.
            </summary>
            <returns>A file-friendly string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.ToAttachmentString">
            <summary>
            Returns a string that is formatted as follows: "{DataMinerID}_{TID}".
            </summary>
            <returns>A string that is formatted as follows: "{DataMinerID}_{TID}".</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketID.GetGuid">
            <summary>
            Returns a Guid that is build using the <see cref="P:Skyline.DataMiner.Net.Ticketing.TicketID.DataMinerID"/> and
            the <see cref="P:Skyline.DataMiner.Net.Ticketing.TicketID.TID"/> integers
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.TicketLink`1">
            <summary>
            Represents a generic ticket link.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.TicketLink`1.Value">
            <summary>
            Gets or sets the linked object.
            </summary>
            <value>The linked object.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink`1" /> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink`1" /> class using the specified linked object.
            </summary>
            <param name="Value">The linked object.</param>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.TicketLink">
            <summary>
            Represents a link between a ticket and a DataMiner object.
            </summary>
            <remarks>
            <para>Currently, you can link to the following objects:</para>
            <list type="bullet">
            <item><description><see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.AlarmID"/></description></item>
            <item><description><see cref="T:Skyline.DataMiner.Net.ElementID"/></description></item>
            <item><description><see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.ParameterID"/></description></item>
            <item><description><see cref="T:Skyline.DataMiner.Net.ProtocolID"/></description></item>
            <item><description><see cref="T:SLNetTypes.DataMiner.Net.RedundancyGroupID"/></description></item>
            <item><description><see cref="T:SLNetTypes.DataMiner.Net.ServiceID"/></description></item>
            <item><description><see cref="T:Skyline.DataMiner.Net.ViewID"/></description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.TicketLink.Value">
            <summary>
            Gets or sets the linked object.
            </summary>
            <value>The linked object.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink" /> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.Create(Skyline.DataMiner.Net.Messages.SLDataGateway.AlarmID)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object that links to the specified <see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.AlarmID"/> object.
            </summary>
            <param name="id">The alarm ID.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.Create(Skyline.DataMiner.Net.ElementID)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object that links to the specified <see cref="T:Skyline.DataMiner.Net.ElementID"/> object.
            </summary>
            <param name="id">The element ID.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.Create(SLNetTypes.DataMiner.Net.ServiceID)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object that links to the specified <see cref="T:SLNetTypes.DataMiner.Net.ServiceID"/> object.
            </summary>
            <param name="id">The service ID.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.Create(SLNetTypes.DataMiner.Net.RedundancyGroupID)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object that links to the specified <see cref="T:SLNetTypes.DataMiner.Net.RedundancyGroupID"/> object.
            </summary>
            <param name="id">The redundancy group ID.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.Create(Skyline.DataMiner.Net.Messages.SLDataGateway.ParameterID)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object that links to the specified <see cref="T:Skyline.DataMiner.Net.Messages.SLDataGateway.ParameterID"/> object.
            </summary>
            <param name="id">The parameter ID.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.Create(Skyline.DataMiner.Net.ViewID)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object that links to the specified <see cref="T:Skyline.DataMiner.Net.ViewID"/> object.
            </summary>
            <param name="id">The view ID.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.Create(Skyline.DataMiner.Net.ProtocolID)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object that links to the specified <see cref="T:Skyline.DataMiner.Net.ProtocolID"/> object.
            </summary>
            <param name="id">The protocol ID.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.Create(SLNetTypes.DataMiner.Net.ReservationInstanceID)">
            <summary>
            Creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object that links to the specified <see cref="T:SLNetTypes.DataMiner.Net.ReservationInstanceID"/> object.
            </summary>
            <param name="id">The reservation instance ID.</param>
            <returns>The created <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.FromJson(System.String)">
            <summary>
            Parses the specified JSON string and creates a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.
            </summary>
            <param name="json">The JSON string from which to create a <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/>.</param>
            <exception cref="T:Skyline.DataMiner.Net.Exceptions.DataMinerJsonDeserializationException">Invalid JSON string.</exception>
            <returns>The <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.ToJson">
            <summary>
            Creates a JSON string representation of this <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.
            </summary>
            <returns>The JSON string representation of this <see cref="T:Skyline.DataMiner.Net.Ticketing.TicketLink"/> object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.TicketLink.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.TicketModule">
            <summary>
            Ticket module.
            </summary>
            <remarks>
            Different modules to which a <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> or <see cref="T:Skyline.DataMiner.Net.Ticketing.Helpers.TicketFieldResolver"/> can belong.
            </remarks>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.TicketModule.Ticketing">
            <summary>
            Ticketing
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.EmailAddressValidator">
            <summary>
            Represents an e-mail address validator.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.EmailAddressValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.EmailAddressValidator"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.EmailAddressValidator.Validate(Skyline.DataMiner.Net.Ticketing.Ticket,System.Object)">
            <summary>
            Verifies whether the specified string has the form of a valid e-mail address.
            </summary>
            <param name="ticket">A <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> instance.</param>
            <param name="obj">The string to be verified.</param>
            <returns><c>true</c> if <paramref name="obj"/> has the form of a valid e-mail address; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.EnumValidator`1">
            <summary>
            Represents a generic enum validator.
            </summary>
            <typeparam name="T">The underlying type of the generic enum to validate.</typeparam>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.EnumValidator`1.genericEnum">
            <summary>
            Gets the generic enum this validator corresponds with.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.EnumValidator`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.EnumValidator`1"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.EnumValidator`1.#ctor(Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.EnumValidator`1"/> class with the specified generic enum.
            </summary>
            <param name="genericEnum">The generic enum.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.EnumValidator`1.Validate(Skyline.DataMiner.Net.Ticketing.Ticket,System.Object)">
            <summary>
            Verifies whether the specified object is known by the corresponding generic enum.
            </summary>
            <param name="ticket">A <see cref="T:Skyline.DataMiner.Net.Ticketing.Ticket"/> instance.</param>
            <param name="obj">The object to be verified.</param>
            <returns>
            <para><c>true</c> if <paramref name="obj"/> is of type <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1"/> and this entry is defined in the generic enum; otherwise, <c>false</c>.</para>
            <para><c>true</c> if <paramref name="obj"/> is of type <typeparamref name="T"/> and this value is defined in the generic enum; otherwise, <c>false</c>.</para>
            </returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.ExpressionValidator">
            <summary>
            Represents a validator validating against an expression.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.ExpressionValidator.Validator">
            <summary>
            Gets or sets the validating expression.
            </summary>
            <value>The validating expression.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.ExpressionValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.ExpressionValidator"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.ExpressionValidator.Validate(Skyline.DataMiner.Net.Ticketing.Ticket,System.Object)">
            <summary>Validates the specified object against the expression.</summary>
            <param name="obj">The object to validate.</param>
            <param name="ticket">The ticket to use with the expression.</param>
            <returns><c>true</c> if <paramref name="obj"/> is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1">
            <summary>
            Represents a "generic" custom enum.
            </summary>
            <typeparam name="T">The underlying type of the enum.</typeparam>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.EnumName">
            <summary>
            Gets or sets the name of the enum.
            </summary>
            <value>The name of the enum.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.AllowInstanceExceptions">
            <summary>
            Gets or sets a value indicating whether instance exceptions are allowed.
            </summary>
            <value><c>true</c> if instance exceptions are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Count">
            <summary>
            Gets the number of entries this generic enum contains.
            </summary>
            <value>The number of entries this generic enum contains.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
            <exception cref="T:System.ArgumentException">The value of a set operation is not between 0 and <see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Count"/> -1 (only in case <see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.AllowInstanceExceptions"/> is <c>true</c>).</exception>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Name">
            <summary>
            Gets the name of the entry at the index specified in <see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Index"/> or updates the <see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Index"/> with the index that corresponds with the set name.
            </summary>
            <value>The name of the entry.</value>
            <exception cref="T:System.ArgumentException">The value of a set operation is not a defined name (only in case <see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.AllowInstanceExceptions"/> is <c>true</c>).</exception>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Value">
            <summary>
            Gets the value of the entry at the currently selected index or updates the <see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Index"/> with the index that corresponds with the set value.
            </summary>
            <value>The value of the entry.</value>
            <exception cref="T:System.ArgumentException">The value of a set operation is not a defined value (only in case <see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.AllowInstanceExceptions"/> is <c>true</c>).</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1"/> class.
            </summary>
            <remarks><see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.AllowInstanceExceptions"/> is <c>true</c> by default.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.GetNames">
            <summary>
            Retrieves the names of the entries defined in this enum.
            </summary>
            <returns>The names of the entries defined in this enum.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.GetNames(`0)">
            <summary>
            Retrieves the names of the entries that have the specified value as value.
            </summary>
            <param name="value">The value.</param>
            <returns>The names of the entries that have the specified value as value. In case no entries have the specified value, an empty array is returned</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.GetValues">
            <summary>
            Retrieves the values for the entries defined in this enum.
            </summary>
            <returns>The values for the entries defined in this enum.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.GetEntries">
            <summary>
            Retrieves the entries defined in this enum.
            </summary>
            <returns>The entries defined in this enum.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.GetIndices(`0)">
            <summary>
            Retrieves the indices of the entries that have the specified value as value.
            </summary>
            <param name="value">The value.</param>
            <returns>The indices of the entries that have the specified value as value.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.IndexOf(System.String)">
            <summary>
            Retrieves the index of the entry with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The index of the entry with the specified name. If there is no entry with the specified name, -1 is returned.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.ValueOf(System.String)">
            <summary>
            Retrieves the value of the entry with the specified name.
            </summary>
            <param name="name">The name of the entry for which the value must be retrieved.</param>
            <returns>The value of the entry with the specified name.</returns>
            <exception cref="T:System.ArgumentException">There is no entry with the specified name.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.FirstNameWith(`0)">
            <summary>
            Retrieves the name of the first entry with the specified value.
            </summary>
            <param name="value">The value of the entry.</param>
            <returns>The name of the first entry with the specified value.</returns>
            <exception cref="T:System.ArgumentException">There is no entry with the specified value.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.FirstIndexWith(`0)">
            <summary>
            Retrieves the index of the first entry with the specified value.
            </summary>
            <param name="value">The value of the entry.</param>
            <returns>The index of the first entry with the specified value.</returns>
            <exception cref="T:System.ArgumentException">There is no entry with the specified value.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.NameAt(System.Int32)">
            <summary>
            Retrieves the name of the entry at the specified index.
            </summary>
            <param name="index">The index of the entry.</param>
            <returns>The name of the entry at the specified index.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The specified index is not in the range [0, <see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Count"/> -1].</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.ValueAt(System.Int32)">
            <summary>
            Retrieves the value of the entry at the specified index.
            </summary>
            <param name="index">The index of the entry.</param>
            <returns>The value of the entry at the specified index.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The specified index is not in the range [0, <see cref="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.Count"/> -1].</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.IsDefinedName(System.String)">
            <summary>
            Retrieves a value indicating whether this enum has an entry with the specified name.
            </summary>
            <param name="name">The name of the entry.</param>
            <returns><c>true</c> if this enum has an entry with the specified name; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.IsDefinedValue(`0)">
            <summary>
            Retrieves a value indicating whether this enum has an entry with the specified value.
            </summary>
            <param name="value">The value of the entry.</param>
            <returns><c>true</c> if this enum has an entry with the specified value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.IsDefinedIndex(System.Int32)">
            <summary>
            Gets a value indicating whether this enum has an entry with the specified index.
            </summary>
            <param name="index">The index of the entry.</param>
            <returns><c>true</c> if this enum has an entry with the specified index; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.DynamicAdd(System.String,`0)">
            <summary>
            Adds an entry with the specified name and value.
            </summary>
            <param name="name">The name of the entry.</param>
            <param name="value">The value of the entry.</param>
            <exception cref="T:System.InvalidOperationException">There is already an entry with the specified name.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1">
            <summary>
            Represents an entry of a <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnum`1"/> instance.
            </summary>
            <typeparam name="T">The underlying type of the entry.</typeparam>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.Name">
            <summary>
            Gets or sets the name of the entry.
            </summary>
            <value>The name of the entry.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.Value">
            <summary>
            Gets or sets the value of the entry.
            </summary>
            <value>The value of the entry.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.Skyline#DataMiner#Net#Ticketing#Validators#IGenericEnumEntry#ValueType">
            <summary>
            Gets the type of the enum entry value.
            </summary>
            <value>The type of the enum entry value.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.Skyline#DataMiner#Net#Ticketing#Validators#IGenericEnumEntry#Value">
            <summary>
            Gets the value of the enum entry.
            </summary>
            <value>The value of the enum entry.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.Create(System.String,`0)">
            <summary>
            Creates a new entry with the specified name and value.
            </summary>
            <param name="name">The name of the entry.</param>
            <param name="value">The value of the entry.</param>
            <returns>The newly created entry.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.op_Implicit(Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry{`0})~`0">
            <summary>
            Conversion operator from <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1"/> to <typeparamref name="T"/>.
            </summary>
            <param name="entry">The entry to convert.</param>
            <returns>The converted entry.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.ToFormattedString">
            <summary>
            Returns a string formatted as follows: name/value.
            </summary>
            <returns>A string formatted as follows: name/value.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>If <paramref name="obj"/> is of type <typeparamref name="T"/>, then this method returns <c>true</c> if the value is equal; otherwise, <c>false</c>.</para>
            <para>If <paramref name="obj"/> is of type <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1"/>, then this method returns <c>true</c> if the name and value are equal; otherwise, <c>false</c></para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1.Equals(Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry{`0})">
            <summary>
             Determines whether the specified <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.GenericEnumEntry`1"/> object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
            <remarks>
            <para>Entries are considered equal if their name and value are the same.</para>
            </remarks>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.IGenericEnumEntry">
            <summary>
            Generic enum entry interface.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.IGenericEnumEntry.Name">
            <summary>
            Gets the name of the enum entry.
            </summary>
            <value>The name of the enum entry.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.IGenericEnumEntry.Value">
            <summary>
            Gets the value of the enum entry.
            </summary>
            <value>The value of the enum entry.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.IGenericEnumEntry.ValueType">
            <summary>
            Gets the type of the enum entry value.
            </summary>
            <value>The type of the enum entry value.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.IGenericEnumEntry.ToFormattedString">
            <summary>
            Returns a string formatted as follows: name/value.
            </summary>
            <returns>A string formatted as follows: name/value.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.RegexValidator">
             <summary>
             Represents a regular expression validator.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.RegexValidator.RegexPattern">
            <summary>
            Gets or sets the regular expression.
            </summary>
            <value>The regular expression.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.RegexValidator.RegexOptions">
            <summary>
            Gets or sets the regular expression options.
            </summary>
            <value>The regular expression options.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.RegexValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.RegexValidator"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.RegexValidator.Validate(Skyline.DataMiner.Net.Ticketing.Ticket,System.Object)">
            <summary>
            Validates the specified string.
            </summary>
            <param name="ticket">The ticket.</param>
            <param name="obj">The string to validate.</param>
            <returns><c>true</c> if the specified string matches the regular expression; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.RequiredTypeValidator`1">
            <summary>
            Represents a required field validator.
            </summary>
            <typeparam name="T">The type to validate against.</typeparam>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.RequiredTypeValidator`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.RequiredTypeValidator`1"/> class.
            </summary>
            <remarks>Creates a generic type validator that rejects <see langword="null"/> values.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.RequiredTypeValidator`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.RequiredTypeValidator`1"/> class using a Boolean to indicate whether null reference values are allowed .
            </summary>
            <param name="required"><c>true</c> if the field is required (value must not be <see langword="null"/>, <c>false</c> if the field is not required (<see langword="null"/> value is allowed).</param>
            <remarks>Creates a generic type validator where you can specify whether <see langword="null"/> values are allowed.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.RequiredTypeValidator`1.Validate(Skyline.DataMiner.Net.Ticketing.Ticket,System.Object)">
            <summary>
            Verifies whether the specified value is allowed.
            </summary>
            <param name="ticket">The ticket.</param>
            <param name="obj">The item to validate.</param>
            <returns>
            <para><c>false</c> if the value is <see langword="null"/> and the field is required.</para>
            <para>If the value is not <see langword="null"/>, the value is validated against the expected type <typeparamref name="T"/>.</para>
            </returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum">
            <summary>
            Represents a state enum.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum"/> class.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default">
            <summary>
            Class for constructing the default <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum"/>.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.EnumName">
            <summary>
            Default state enum name.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.States">
            <summary>
            Holds predefined state names.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.States.Undefined">
            <summary>
            The "Undefined" state.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.States.New">
            <summary>
            The "New" state.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.States.Assigned">
            <summary>
            The "Assigned" state.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.States.InProgress">
            <summary>
            The "In progress" state.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.States.OnHold">
            <summary>
            The "On Hold" state.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.States.Solved">
            <summary>
            The "Solved" state.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.States.Closed">
            <summary>
            The "Closed" state.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Default.DefaultEnum">
            <summary>
            Gets a default state enum.
            </summary>
            <remarks>
            <para>A state enum with name "StateEnum" and the following entries is returned:</para>
            <list type="bullet">
            <item>
            <description>Undefined</description>
            </item>
            <item>
            <description>New</description>
            </item>
            <item>
            <description>Assigned</description>
            </item>
            <item>
            <description>InProgress</description>
            </item>
            <item>
            <description>OnHold</description>
            </item>
            <item>
            <description>Solved</description>
            </item>
            <item>
            <description>Closed</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.StateEnum.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.TypeValidator`1">
            <summary>
            Represents a type validator for validating the type of a specified object.
            </summary>
            <typeparam name="T">The type to validate against.</typeparam>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.TypeValidator`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.TypeValidator`1" /> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.TypeValidator`1.Validate(Skyline.DataMiner.Net.Ticketing.Ticket,System.Object)">
            <summary>
            Verifies whether the specified object is of the expected type.
            </summary>
            <param name="ticket">The ticket.</param>
            <param name="obj">The item to validate.</param>
            <returns>If <paramref name="obj"/> is not <see langword="null"/>, <c>true</c> is returned if the type of <paramref name="obj"/> equals the type of <typeparamref name="T"/>; otherwise, <c>false</c>.
            If <paramref name="obj"/> is <see langword="null"/>, <c>true</c> is returned if the type of <typeparamref name="T"/> is either a reference type or a nullable type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.UriValidator">
            <summary>
            Represents a URI validator.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.UriValidator.Kind">
            <summary>
            Gets or sets the kind of URI.
            </summary>
            <value>The kind of URI.</value>
            <remarks>
            <c>System.UriKind</c> to check:
            <list type="bullet">
                <item>System.UriKind.Absolute</item>
                <item>System.UriKind.Relative</item>
                <item>System.UriKind.RelativeOrAbsolute</item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.UriValidator.AcceptedUriSchemes">
            <summary>
            Gets or sets the accepted URI schemes.
            </summary>
            <value>The accepted URI schemes.</value>
            <remarks>
            <para>The following values can be used:</para>
            <list type="bullet">
            <item>
            <description>System.Uri.UriSchemeFile</description>
            </item>
            <item>
            <description>System.Uri.UriSchemeFtp</description>
            </item>
            <item>
            <description>System.Uri.UriSchemeGopher</description>
            </item>
            <item>
            <description>System.Uri.UriSchemeHttp</description>
            </item>
            <item>
            <description>System.Uri.UriSchemeHttps</description>
            </item>
            <item>
            <description>System.Uri.UriSchemeMailto</description>
            </item>
            <item>
            <description>System.Uri.UriSchemeNetPipe</description>
            </item>
            <item>
            <description>System.Uri.UriSchemeNetTcp</description>
            </item>
            <item>
            <description>System.Uri.UriSchemeNews</description>
            </item>
            <item>
            <description>System.Uri.UriSchemeNntp</description>
            </item>
            </list>
            <para>In case no schemes are set, this validator will not validate against URI schemes.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.Ticketing.Validators.UriValidator.CheckWellFormed">
            <summary>
            Gets or sets the value indicating whether this validator checks for well-formedness.
            </summary>
            <value><c>true</c> to check for well-formedness; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.UriValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.UriValidator"/> class.
            </summary>
            <remarks>The instance created by this constructor allows relative or absolute URIs, does not check for well-formedness and has no schemes set.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.UriValidator.#ctor(System.UriKind,System.Collections.Generic.HashSet{System.String},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Ticketing.Validators.UriValidator"/> class using the specified URI kinds and schemes allowed and well-formedness indication.
            </summary>
            <param name="uriKind">The kind of URIs allowed.</param>
            <param name="acceptedUriSchemes">The accepted URI schemes.</param>
            <param name="checkWellFormed"><c>true</c> to check for well-formedness; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Ticketing.Validators.UriValidator.Validate(Skyline.DataMiner.Net.Ticketing.Ticket,System.Object)">
            <summary>
            Verifies whether the specified string represents valid URI.
            </summary>
            <param name="ticket">The ticket.</param>
            <param name="obj">The string to validate.</param>
            <returns><c>true</c> if <paramref name="obj"/> is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Ticketing.Validators.UserValidator">
            <summary>
            Represents a user validator.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1">
            <summary>
            Represents a generic enum.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
        </member>
        <member name="P:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.EnumName">
            <summary>
            Gets or sets the enum name.
            </summary>
            <value>The enum name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.Entries">
            <summary>
            Gets the enum entries.
            </summary>
            <value>The enum entries.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.Skyline#DataMiner#Net#GenericEnums#IGenericEnum#Entries">
            <summary>
            Gets the enum entries.
            </summary>
            <value>The enum entries.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.Skyline#DataMiner#Net#GenericEnums#IGenericEnum#ValueType">
            <summary>
            Gets the underlying type.
            </summary>
            <value>The underlying type.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.AddEntry(System.String,`0)">
            <summary>
            Adds a new entry to the enum with the specified display name and value.
            </summary>
            <param name="displayName">The display name.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="displayName"/> or <paramref name="value"/> is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The specified display name or value is already added.</exception>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.AddEntry(System.String,`0,System.Boolean)">
            <summary>
            Adds a new entry to the enum with the specified display name and value.
            </summary>
            <param name="displayName">The display name.</param>
            <param name="value">The value.</param>
            <param name="isHidden">Value indicating whether this entry is hidden.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="displayName"/> or <paramref name="value"/> is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The specified display name or value is already added.</exception>
            <remarks>Feature introduced in DataMiner 9.6.11 (RN 22628).</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.RemoveEntryByName(System.String)">
            <summary>
            Removes the entry with the specified display name.
            </summary>
            <param name="displayName">The display name of the entry to remove.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.RemoveEntryByValue(`0)">
            <summary>
            Removes the entry with the specified value.
            </summary>
            <param name="value">The value of the entry to remove.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.Equals(Skyline.DataMiner.Net.GenericEnums.GenericEnum{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnum`1.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1">
            <summary>
            Represents a generic enum entry.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
        </member>
        <member name="P:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.IsHidden">
            <summary>
            Gets or sets a value indicating whether this entry is hidden.
            </summary>
            <value><c>true</c> if this entry is hidden; otherwise, <c>false</c>.</value>
            <remarks>Feature introduced in DataMiner 9.6.11 (RN 22628).</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.Skyline#DataMiner#Net#GenericEnums#IGenericEnumEntry#ValueType">
            <summary>
            Gets the underlying type.
            </summary>
            <value>The underlying type.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.Skyline#DataMiner#Net#GenericEnums#IGenericEnumEntry#Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1"/> class using the specified display name and value.
            </summary>
            <param name="displayName">The display name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.#ctor(System.String,`0,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1"/> class using the specified display name and value.
            </summary>
            <param name="displayName">The display name.</param>
            <param name="value">The value.</param>
            <param name="isHidden">Value indicating whether this entry is hidden.</param>
            <remarks>Feature introduced in DataMiner 9.6.11 (RN 22628).</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.GetHashCode">
            <summary>
            Calculates the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.Equals(Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.GenericEnums.GenericEnumEntry`1.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.TraceData">
            <summary>
            Contains all kinds of data that the server could generate while handling a request.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Net.TraceData.ErrorData">
            <summary>
            Gets the error data that was generated while handling the request.
            </summary>
            <value>The error data that was generated while handling the request.</value>
        </member>
        <member name="F:Skyline.DataMiner.Net.TraceData.WarningData">
            <summary>
            Gets the warning data that was generated while handling the request.
            </summary>
            <value>The warning data that was generated while handling the request.</value>
        </member>
        <member name="F:Skyline.DataMiner.Net.TraceData.InfoData">
            <summary>
            Gets the info data that was generated while handling the request.
            </summary>
            <returns>The info data that was generated while handling the request.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.TraceData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.TraceData"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.TraceData.GetErrorDataOfType``1">
            <summary>
            Retrieves the error data objects of the specified type.
            </summary>
            <typeparam name="T">The error data type.</typeparam>
            <returns>The error data.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.TraceData.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.TraceData.Add(Skyline.DataMiner.Net.ITracingData)">
            <summary>
            Adds the specified trace data.
            </summary>
            <param name="data">The trace data to add.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.TraceData.AddRange(System.Collections.Generic.IEnumerable{Skyline.DataMiner.Net.ITracingData})">
            <summary>
            Adds the specified trace data range.
            </summary>
            <param name="data">The trace data range to add.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.TraceData.Add(Skyline.DataMiner.Net.TraceData)">
            <summary>
            Adds the specified trace data.
            </summary>
            <param name="traceData">The trace data to add.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.TraceData.IsEmpty">
            <summary>
            Retrieves a value indicating whether the error, info and warning data is empty.
            </summary>
            <returns><c>true</c> if the error, info and warning data is empty; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.TraceData.HasSucceeded">
            <summary>
            Retrieves a value indicating whether the operation succeeded.
            </summary>
            <returns><c>true</c> if the operation succeeded; otherwise, <c>false</c>.</returns>
            <remarks>The operation is considered successful in case the error data is empty.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Net.TraceData.HasWarnings">
            <summary>
            Retrieves a value indicating whether the warning data is empty.
            </summary>
            <returns><c>true</c> if the warning data is not empty; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Trending.AverageTrendRecord">
            <summary>
            Represents an average trend record.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.AverageTrendRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Trending.AverageTrendRecord"/> class representing an average trend record.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.AverageTrendRecord.#ctor(System.Int32,System.DateTime,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Trending.AverageTrendRecord"/> class representing an average trend record.
            </summary>
            <param name="status">The status.</param>
            <param name="time">The timestamp of the average trend record.</param>
            <param name="avg">The average value.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.AverageTrendRecord.#ctor(Skyline.DataMiner.Net.Trending.AverageTrendRecord)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Trending.AverageTrendRecord"/> class representing an average trend record.
            </summary>
        </member>
        <member name="P:Skyline.DataMiner.Net.Trending.AverageTrendRecord.AverageValue">
            <summary>
            Gets or sets the average value.
            </summary>
            <value>The average value.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Trending.AverageTrendRecord.MinimumValue">
            <summary>
            Gets or sets the minimum value.
            </summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Trending.AverageTrendRecord.MaximumValue">
            <summary>
            Gets or sets the maximum value.
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.AverageTrendRecord.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Trending.RealtimeTrendRecord">
            <summary>
            Represents a real-time trend record.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.RealtimeTrendRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Trending.RealtimeTrendRecord"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.RealtimeTrendRecord.#ctor(System.Int32,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Trending.RealtimeTrendRecord"/> class using the specified status, time and value.
            </summary>
            <param name="status">The status.</param>
            <param name="time">The time.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.RealtimeTrendRecord.#ctor(Skyline.DataMiner.Net.Trending.RealtimeTrendRecord)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Trending.RealtimeTrendRecord"/> class using the specified record.
            </summary>
            <param name="record">The real-time trend record.</param>
        </member>
        <member name="P:Skyline.DataMiner.Net.Trending.RealtimeTrendRecord.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.RealtimeTrendRecord.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Net.Trending.TrendRecord">
            <summary>
            Represents a trend record.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.TrendRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Trending.TrendRecord"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.TrendRecord.#ctor(System.Int32,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Trending.TrendRecord"/> class using the specified status and time.
            </summary>
            <param name="status">The status.</param>
            <param name="time">The time.</param>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.TrendRecord.#ctor(Skyline.DataMiner.Net.Trending.TrendRecord)">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Net.Trending.TrendRecord"/> class using the specified record.
            </summary>
            <param name="record">The trend record.</param>
        </member>
        <member name="P:Skyline.DataMiner.Net.Trending.TrendRecord.Time">
            <summary>
            Gets or sets the time.
            </summary>
            <value>The time.</value>
        </member>
        <member name="P:Skyline.DataMiner.Net.Trending.TrendRecord.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.TrendRecord.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings:</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.TrendRecord.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Net.Trending.TrendRecord.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Automation.AutomationConfigOptions">
            <summary>
            Abstract class from which the other Automation options classes are derived.
            </summary>
            <remarks>
            <para>The structure of these classes is as follows, with the subclasses inheriting all properties of the classes above them:</para>
            <img src="~/develop/images/AutomationUIConfigOptions_diagram.jpg" />
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationConfigOptions.ClassSplitter">
            <summary>
            Gets the class splitter character.
            </summary>
            <value>The class splitter character.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationConfigOptions.OptionSplitter">
            <summary>
            Gets the options splitter character.
            </summary>
            <value>The options splitter character.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationConfigOptions.PropertySplitter">
            <summary>
            Gets the property splitter character.
            </summary>
            <value>The property splitter character.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationConfigOptions.GlobalDateTimeFormat">
            <summary>
            Gets the global date time format.
            </summary>
            <value>The global date time format.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationConfigOptions.GlobalTimeSpanFormat">
            <summary>
            Gets the global time span format.
            </summary>
            <value>The global time span format.</value>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationConfigOptions.SetDefaultOptions">
            <summary>
            Sets the default options.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationConfigOptions.GetOptionsAsString(System.Boolean)">
            <summary>
            Gets the options as a string.
            </summary>
            <param name="includeClass"><c>true</c> to include the class; otherwise, <c>false</c>.</param>
            <returns>The options as a string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationConfigOptions.SetNewValueOnPropertySucceeded(System.String,System.String)">
            <summary>
            Sets the specified property to the specified value.
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns><c>true</c> if the property was set; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationConfigOptions.GetOptionsAsString(Skyline.DataMiner.Automation.AutomationConfigOptions)">
            <summary>
            Gets the specified options as a string.
            </summary>
            <param name="options">The options.</param>
            <returns>The options as a string</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationConfigOptions.CreateInstanceFromDataString(System.String)">
            <summary>
            Creates an instance from the specified data string.
            </summary>
            <param name="data">The data string.</param>
            <returns>The corresponding instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationConfigOptions.GetDateTimeFromData(System.String,System.Nullable{System.DateTime})">
            <summary>
            Converts the specified value to a DateTime? or returns <paramref name="defaultValue"/> if the conversion failed.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The converted DateTime? or the specified default value.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationConfigOptions.GetDataFromDateTime(System.Nullable{System.DateTime})">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions">
            <summary>
            This class allows you to create a date and time picker control in an interactive Automation script.
            </summary>
            <example>
            <code>
            UIBlockDefinition blockDateTimePickerDefault = new UIBlockDefinition();
            blockDateTimePickerDefault.Type = UIBlockType.Time;
            AutomationDateTimePickerOptions configOptionsDateTimePickerDefault = new AutomationDateTimePickerOptions();
            blockDateTimePickerDefault.ConfigOptions = configOptionsDateTimePickerDefault;
            </code>
            <img src="~/develop/images/datetimepicker_example.png" />
            </example>
            <remarks>
            <note type="note">
            <para>If the name of a variable starts with the following prefix, IntelliSense in DataMiner Cube will list the object properties: dateTimePickerConfig*</para>
            </note>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.DEFAULT_AUTOCLOSE_CALENDAR">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.AutoCloseCalendar"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.AutoCloseCalendar"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.DEFAULT_CALENDAR_DISPLAYMODE">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.CalendarDisplayMode"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.CalendarDisplayMode"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.DEFAULT_SHOWDROPDOWNBUTTON">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.ShowDropDownButton"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.ShowDropDownButton"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.DEFAULT_TIMEFORMAT">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimeFormat"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimeFormat"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.DEFAULT_TIMEFORMATSTRING">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimeFormatString"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimeFormatString"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.DEFAULT_TIMEPICKER_ALLOWSPIN">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimePickerAllowSpin"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimePickerAllowSpin"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.DEFAULT_TIMEPICKER_SHOWBUTTONSPINNER">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimePickerShowButtonSpinner"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimePickerShowButtonSpinner"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.DEFAULT_TIMEPICKER_VISIBLE">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimePickerVisible"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimePickerVisible"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.AutoCloseCalendar">
            <summary>
            Gets or sets a value indicating whether to close the calendar pop-up when the user clicks a new date.
            </summary>
            <value><c>true</c> to close the calendar pop-up when the user clicks a new date; otherwise, <c>false</c>.</value>
            <remarks>Default: <c>false</c>.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.CalendarDisplayMode">
            <summary>
            Gets or sets the display mode of the calendar inside the date-time picker control.
            </summary>
            <value>The display mode of the calendar inside the date-time picker control.</value>
            <remarks>
            <para>Default: <c>Calendar.Month</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.ShowDropDownButton">
            <summary>
            Gets or sets a value indicating whether to show the drop-down button to show the calendar control.
            </summary>
            <value><c>true</c> to show the drop-down button; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: <c>true</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimeFormat">
            <summary>
            Gets or sets the date time format.
            </summary>
            <value>The date time format.</value>
            <remarks>
            <para>Default: <c>DateTime.ShortTime</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimeFormatString">
            <summary>
            Gets or sets the time format string used when TimeFormat is set to “Custom”.
            </summary>
            <value>The time format string used when TimeFormat is set to “Custom”.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimePickerShowButtonSpinner">
            <summary>
            Gets or sets a value indicating whether to show the spin box of the calendar control.
            </summary>
            <value><c>true</c> to shows the spin box of the calendar control; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: <c>false</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimePickerAllowSpin">
            <summary>
            Gets or sets a value indicating whether to enable the spinner button of the calendar control.
            </summary>
            <value><c>true</c> to enable the spinner button of the calendar control; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: true.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.TimePickerVisible">
            <summary>
            Gets or sets a value indicating whether to show the time picker within the calendar control.
            </summary>
            <value><c>true</c> to show the time picker within the calendar control; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: true.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.SetDefaultOptions">
            <summary>
            Sets the default options.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.CreateInstanceFromDataString(System.String)">
            <summary>
            Creates an instance from the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>The corresponding instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.SetNewValueOnPropertySucceeded(System.String,System.String)">
            <summary>
            Sets the specified property to the specified value.
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns><c>true</c> if the property was set; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.GetOptionsAsString(System.Boolean)">
            <summary>
            Gets the options as a string.
            </summary>
            <param name="includeClass"><c>true</c> to include the class; otherwise, <c>false</c>.</param>
            <returns>The options as a string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimePickerOptions.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions">
            <summary>
            This class allows you to create an up-down control to select a date and time in an interactive Automation script.
            </summary>
            <example>
            <code>
            UIBlockDefinition blockDateTimeUpDownDefault = new UIBlockDefinition();
            blockDateTimeUpDownDefault.Type = UIBlockType.Time;
            AutomationDateTimeUpDownOptions configOptionsDateTimeUpDownDefault = new AutomationDateTimeUpDownOptions();
            blockDateTimeUpDownDefault.ConfigOptions = configOptionsDateTimeUpDownDefault;
            </code>
            <img src="~/develop/images/datetimeupdown_example.png" />
            </example>
            <remarks>
            <note type="note">
            <para>If the name of a variable starts with the following prefix, IntelliSense in DataMiner Cube will list the object properties: dateTimeUpDownConfig*</para>
            </note>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.DEFAULT_FORMAT">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Format"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Format"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.DEFAULT_FORMATSTRING">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.FormatString"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.FormatString"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.DEFAULT_KIND">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Kind"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Kind"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.DEFAULT_MINIMUM">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Minimum"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Minimum"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.DEFAULT_MAXIMUM">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Maximum"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Maximum"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.DEFAULT_CLIPVALUE_TOMINMAX">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.ClipValueToMinMax"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.ClipValueToMinMax"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.DEFAULT_VALUE_ON_ENTERKEY">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.UpdateValueOnEnterKey"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.UpdateValueOnEnterKey"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.DEFAULT_SHOW_BUTTONSPINNER">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.ShowButtonSpinner"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.ShowButtonSpinner"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.DEFAULT_ALLOW_SPINNER">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.AllowSpin"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.AllowSpin"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Format">
            <summary>
            Gets or sets the date and time format used by the date-time up-down control.
            </summary>
            <value>The date and time format used by the date-time up-down control.</value>
            <remarks>
            <para>Default:</para>
            <list type="bullet">
            <item><description>In DataMiner 9.5.3: FullDateTime</description></item>
            <item><description>From DataMiner 9.5.4 onwards: general datetime</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.FormatString">
            <summary>
            Gets or sets the date-time format to be used by the control when Format is set to 'Custom'.
            </summary>
            <value>The date-time format to be used by the control when Format is set to 'Custom'.</value>
            <remarks>
            <para>Default: G (from DataMiner 9.5.4 onwards; previously the default value was null)</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Kind">
            <summary>
            Gets or sets the DateTimeKind (.NET) used by the datetime up-down control.
            </summary>
            <value>The DateTimeKind (.NET) used by the datetime up-down control.</value>
            <remarks>
            <para>Default: <c>DateTimeKind.Unspecified</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Maximum">
            <summary>
            Gets or sets the maximum timestamp.
            </summary>
            <value>The maximum timestamp.</value>
            <remarks>
            <para>Default: <c>DateTime.MaxValue</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Minimum">
            <summary>
            Gets or sets the minimum timestamp.
            </summary>
            <value>The minimum timestamp.</value>
            <remarks>
            <para>Default: <c>DateTime.MinValue</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.ClipValueToMinMax">
            <summary>
            Gets or sets a value indicating whether to clip the value to the minimum and maximum.
            </summary>
            <value><c>true</c> to clip the value to the minimum and maximum; otherwise, <c>false</c>.</value>
            <remarks>Default: <c>false</c>.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.UpdateValueOnEnterKey">
            <summary>
            Gets or sets a value indicating whether to enable the option to trigger an update with the control when the Enter key is pressed.
            </summary>
            <value><c>true</c> to enable the option to trigger an update with the control when the Enter key is pressed; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: <c>true</c>.</para>
            <note type="note">
            <para>From 9.5.4 onwards, the functionality of this property has been updated. If it is set to true, the control will now only update when the Enter key is pressed. If it is set to false, the control will also update when the focus is moved to somewhere else.</para>
            </note>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.ShowButtonSpinner">
            <summary>
            Gets or sets a value indicating whether to show the spinner button.
            </summary>
            <value><c>true</c> to show the spinner button; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: <c>true</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.AllowSpin">
            <summary>
            Gets or sets a value indicating whether to enable the spinner button.
            </summary>
            <value><c>true</c> to enable the spinner button; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: <c>true</c>.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.SetDefaultOptions">
            <summary>
            Sets the default options.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.CreateInstanceFromDataString(System.String)">
            <summary>
            Creates an instance from the specified data string.
            </summary>
            <param name="data">The data string.</param>
            <returns>The corresponding instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.SetNewValueOnPropertySucceeded(System.String,System.String)">
            <summary>
            Sets the specified property to the specified value.
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns><c>true</c> if the property was set; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.GetOptionsAsString(System.Boolean)">
            <summary>
            Gets the options as a string.
            </summary>
            <param name="includeClass"><c>true</c> to include the class; otherwise, <c>false</c>.</param>
            <returns>The options as a string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Automation.AutomationTimePickerOptions">
            <summary>
            This class allows you to create a time picker control in an interactive Automation script.
            </summary>
            <example>
            <code>
            UIBlockDefinition blockTimePickerDefault = new UIBlockDefinition();
            blockTimePickerDefault.Type = UIBlockType.Time;
            AutomationTimePickerOptions configOptionsTimePickerDefault = new AutomationTimePickerOptions();
            blockTimePickerDefault.ConfigOptions = configOptionsTimePickerDefault;
            </code>
            <img src="~/develop/images/timepicker_example.png" />
            </example>
            <remarks>
            <note type="note">
            <para>If the name of a variable starts with the following prefix, IntelliSense in DataMiner Cube will list the object properties: timePickerConfig*</para>
            </note>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.DEFAULT_FORMAT">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Format"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.Format"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.DEFAULT_FORMATSTRING">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.FormatString"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationDateTimeUpDownOptions.FormatString"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.DEFAULT_STARTTIME">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.StartTime"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.StartTime"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.DEFAULT_ENDTIME">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.EndTime"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.EndTime"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.DEFAULT_TIME_INTERVAL">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.TimeInterval"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.TimeInterval"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.DEFAULT_MAX_DROPDOWN_HEIGHT">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.MaxDropDownHeight"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.MaxDropDownHeight"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.DEFAULT_SHOW_DROPDOWNBUTTON">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.ShowDropDownButton"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.ShowDropDownButton"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.StartTime">
            <summary>
            Gets or sets the earliest time listed in the time picker control.
            </summary>
            <value>The earliest time listed in the time picker control.</value>
            <remarks>
            <para>Default: <c>TimeSpan.Zero</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.EndTime">
            <summary>
            Gets or sets the last time listed in the time picker control.
            </summary>
            <value>The last time listed in the time picker control.</value>
            <remarks>
            <para>Default: <c>TimeSpan.FromMinutes(1439)</c>.</para>
            <note type="note">
            <para>1439 = 1440 minutes (1 day) minus a minute</para>
            </note>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.TimeInterval">
            <summary>
            Gets or sets the time interval between two time items in the time picker control.
            </summary>
            <value>The time interval between two time items in the time picker control.</value>
            <remarks>
            <para>Default: <c>TimeSpan.FromHours(1)</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.ShowDropDownButton">
            <summary>
            Gets or sets a value indicating whether to enable the drop-down button of the time picker control.
            </summary>
            <value><c>true</c> to enable the drop-down button of the time picker control; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: true.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimePickerOptions.MaxDropDownHeight">
            <summary>
            Gets or sets the height of the time picker control.
            </summary>
            <value>The height of the time picker control.</value>
            <remarks>
            <para>Default: 130.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimePickerOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Automation.AutomationTimePickerOptions"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimePickerOptions.SetDefaultOptions">
            <summary>
            Sets the default options.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimePickerOptions.CreateInstanceFromDataString(System.String)">
            <summary>
            Creates an instance from the specified data string.
            </summary>
            <param name="data">The data string.</param>
            <returns>The corresponding instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimePickerOptions.SetNewValueOnPropertySucceeded(System.String,System.String)">
            <summary>
            Sets the specified property to the specified value.
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns><c>true</c> if the property was set; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimePickerOptions.GetOptionsAsString(System.Boolean)">
            <summary>
            Gets the options as a string.
            </summary>
            <param name="includeClass"><c>true</c> to include the class; otherwise, <c>false</c>.</param>
            <returns>The options as a string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimePickerOptions.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions">
            <summary>
            This class allows you to create an up-down control to select a time in an interactive Automation script.
            </summary>
            <example>
            <code>
            UIBlockDefinition blockTimeUpDownDefault = new UIBlockDefinition();
            blockTimeUpDownDefault.Type = UIBlockType.Time;
            AutomationTimeUpDownOptions configOptionsTimeUpDownDefault = new AutomationTimeUpDownOptions();
            blockTimeUpDownDefault.ConfigOptions = configOptionsTimeUpDownDefault;
            </code>
            <img src="~/develop/images/timeupdown_example.png" />
            </example>
            <remarks>
            <note type="note">
            <para>If the name of a variable starts with the following prefix, IntelliSense in DataMiner Cube will list the object properties: timeUpDownConfig*</para>
            </note>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.DEFAULT_FRACTIONAL_SECONDS_DIGITSCOUNT">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.FractionalSecondsDigitsCount"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.FractionalSecondsDigitsCount"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.DEFAULT_MINIMUM">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.Minimum"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.Minimum"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.DEFAULT_MAXIMUM">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.Maximum"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.Maximum"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.DEFAULT_CLIPVALUE_TOMINMAX">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ClipValueToMinMax"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ClipValueToMinMax"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.DEFAULT_VALUE_ON_ENTERKEY">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.UpdateValueOnEnterKey"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.UpdateValueOnEnterKey"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.DEFAULT_SHOW_BUTTONSPINNER">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ShowButtonSpinner"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ShowButtonSpinner"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.DEFAULT_ALLOW_SPINNER">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.AllowSpin"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.AllowSpin"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.DEFAULT_SHOW_SECONDS">
            <summary>
            Gets the default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ShowSeconds"/> property.
            </summary>
            <value>The default value for the <see cref="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ShowSeconds"/> property.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.FractionalSecondsDigitsCount">
            <summary>
            Gets or sets the number of digits to be used in order to represent the fractions of seconds.
            </summary>
            <value>The number of digits to be used in order to represent the fractions of seconds.</value>
            <remarks>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.Maximum">
            <summary>
            Gets or sets the maximum time span.
            </summary>
            <value>The maximum time span.</value>
            <remarks>
            <para>Default: <c>Timespan.MaxValue</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.Minimum">
            <summary>
            Gets or sets the minimum time span.
            </summary>
            <value>The minimum time span.</value>
            <remarks>
            <para>Default: <c>Timespan.MinValue</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ClipValueToMinMax">
            <summary>
            Gets or sets a value indicating whether to enable the ClipValueToMinMax option.
            </summary>
            <value><c>true</c> to enable the ClipValueToMinMax option; otherwise, <c>false</c>.</value>
            <remarks>Default: <c>false</c>.</remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.UpdateValueOnEnterKey">
            <summary>
            Gets or sets a value indicating whether to enable the option to trigger an update with the control when the Enter key is pressed.
            </summary>
            <value><c>true</c> to enable the option to trigger an update with the control when the Enter key is pressed; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: <c>true</c>.</para>
            <note type="note">
            <para>From 9.5.4 onwards, the functionality of this property has been updated. If it is set to true, the control will now only update when the Enter key is pressed. If it is set to false, the control will also update when the focus is moved to somewhere else.</para>
            </note>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ShowButtonSpinner">
            <summary>
            Gets or sets a value indicating whether to show the spinner button.
            </summary>
            <value><c>true</c> to show the spinner button; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: <c>true</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.AllowSpin">
            <summary>
             Gets or sets a value indicating whether to enable the spinner button.
            </summary>
            <value><c>true</c> to enable the spinner button; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: <c>true</c>.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ShowSeconds">
            <summary>
            Gets or sets a value indicating whether to enable showing seconds in the control.
            </summary>
            <value><c>true</c> to enable showing seconds in the control; otherwise, <c>false</c>.</value>
            <remarks>
            <para>Default: <c>true</c>.</para>
            </remarks>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions"/> class.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.SetDefaultOptions">
            <summary>
            Sets the default options.
            </summary>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.CreateInstanceFromDataString(System.String)">
            <summary>
            Creates an instance from the specified data string.
            </summary>
            <param name="data">The data string.</param>
            <returns>The corresponding instance.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.SetNewValueOnPropertySucceeded(System.String,System.String)">
            <summary>
            Sets the specified property to the specified value.
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns><c>true</c> if the property was set; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.GetOptionsAsString(System.Boolean)">
            <summary>
            Gets the options as a string.
            </summary>
            <param name="includeClass"><c>true</c> to include the class; otherwise, <c>false</c>.</param>
            <returns>The options as a string.</returns>
        </member>
        <member name="M:Skyline.DataMiner.Automation.AutomationTimeUpDownOptions.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Automation.CalendarMode">
            <summary>
            Specifies the calendar mode.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.CalendarMode.Month">
            <summary>
            Month.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.CalendarMode.Year">
            <summary>
            Year.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.CalendarMode.Decade">
            <summary>
            Decade.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Automation.ClosingMode">
            <summary>
            Defines closing mode values.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.ClosingMode.Continue">
            <summary>
            This value is seen as the 'True' state. Closing a window must continue.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.ClosingMode.Stop">
            <summary>
            This value is seen as the 'False' state. Closing a window must be prevented.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.ClosingMode.Abort">
            <summary>
            This value is seen as the 'Undefined' state. The window will be closed, but it is caused by external reasons (connection problems, invalid arguments, exceptions, undesired (UI) behavior, etc.).
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Automation.DateTimeFormat">
            <summary>
            Specifies the time format.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.FullDateTime">
            <summary>
            Full date time.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.LongDate">
            <summary>
            Long date.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.LongTime">
            <summary>
            Long time.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.ShortDate">
            <summary>
            Short date.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.ShortTime">
            <summary>
            Short time.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.SortableDateTime">
            <summary>
            Sortable date time.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.UniversalSortableDateTime">
            <summary>
            Universal sortable date time.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.MonthDay">
            <summary>
            Month day.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.YearMonth">
            <summary>
            Year month.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.RFC1123">
            <summary>
            RFC 1123.
            </summary>
        </member>
        <member name="F:Skyline.DataMiner.Automation.DateTimeFormat.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="T:Skyline.DataMiner.Automation.UIVariables">
            <summary>
            Represents UI Variables.
            </summary>
            <remarks>Available from DataMiner 10.0.13 (RN 27895) onwards.</remarks>
        </member>
        <member name="M:Skyline.DataMiner.Automation.UIVariables.CreateKey(System.String)">
            <summary>
            Creates a key by combining the prefix with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The key, which is the combination of the prefix with the specified key.</returns>
        </member>
        <member name="T:Skyline.DataMiner.Automation.UIVariables.VisualOverview">
            <summary>
            Defines visual overview UI variables. This class allows you to pass script (output) values and convert these to Visual Overview session variables.
            </summary>
            <remarks>
            <para>Available from DataMiner 10.0.13 (RN 27895) onwards.</para>
            <list type="bullet">
            <item><description>This only works when the Automation script has been executed in Visual Overview and the script has been executed successfully.</description></item>
            <item><description>The option SessionVariablePrefix is linked with this feature, which means it is possible to store 2 different values from the same script. For instance: 2 pages, each having a script that results in Script session variable 'MyPage'. Prefix 'One_' is used on the first page and 'Two_' is used as prefix. This will result in session variables 'One_MyPage' and 'Two_MyPage' if the script is executed successfully on both pages.</description></item>
            </list>
            </remarks>
            <example>
            <code>
            engine.AddScriptOutput(UIVariables.VisualOverview.ClosingWindow_Result, ClosingMode.Continue.ToString());
            // The following call will create a session variable in Visual Overview named MyOutput which has the value 'MyValue'.
            engine.AddScriptOutput(UIVariables.VisualOverview.CreateKey("MyOutput"), "MyValue");
            </code>
            </example>
        </member>
        <member name="M:Skyline.DataMiner.Automation.UIVariables.VisualOverview.CreateKey(System.String)">
            <summary>
            Creates a key by combining the prefix with the specified variable name.
            </summary>
            <param name="variableName">The variable name.</param>
            <returns>The key, which is the combination of the prefix with the specified variable name.</returns>
        </member>
        <member name="P:Skyline.DataMiner.Automation.UIVariables.VisualOverview.Prefix">
            <summary>
            Gets the prefix.
            </summary>
            <value>The prefix.</value>
        </member>
        <member name="P:Skyline.DataMiner.Automation.UIVariables.VisualOverview.ClosingWindow_Message">
            <summary>
            Gets the closing window message.
            </summary>
            <value>The closing window message.</value>
            <remarks>
            <para>This session variable is optional. It will show a message in the client in an OK-message box, regardless of what the value of the result variable is. However, when the value of result variable is Stop, this message will be shown in the Yes/No message box mentioned in UIVariables.VisualOverview.ClosingWindow_Result property . In other words, you can expand the Yes/No message box with a custom message, and this can be done with the message variable.</para>
            </remarks>
        </member>
        <member name="P:Skyline.DataMiner.Automation.UIVariables.VisualOverview.ClosingWindow_Result">
            <summary>
            Gets the closing window result.
            </summary>
            <value>The closing window result.</value>
            <remarks>
            Note: This variable must be set for this feature to work. The value should be one of the ClosingMode enum values (converted to string).
            </remarks>
            <example>
            <code>engine.AddScriptOutput(UIVariables.VisualOverview.ClosingWindow_Result, ClosingMode.Continue.ToString());</code>
            <para>In case the value of the variable is Stop, a Yes/No message box will be shown, asking if the window can be closed. If Yes is selected, the window will be closed.</para>
            </example>
        </member>
        <member name="T:SLDataGateway.API.Types.Repositories.ISearchableRepository">
            <summary>
                Non-generic version of <see cref="T:SLDataGateway.API.Types.Repositories.ISearchableRepository`1" />
            </summary>
        </member>
    </members>
</doc>
